<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHQAAAB0CAIAAADb+IFwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAHdElNRQfaBBoFMSRJwKVaAAAjEklEQVR4Xu2dh19U55rH/SPu7t7d+9m7uUaqFAF77w0QBBWi
        iEDsvRC72DWWqGnXm3izNzHVWAN2VFD69KEOvalY8JqmMcne3f2+7zszDANIkb17SXh8GYfhnDnv+Z7f
        83veU2ZOj/zan2KO1PZfbOwTp/OO1nrNFo0n9uZle1E139hfXfOZY113AWSOzidG50uL1VtbjHjFO1qn
        4PjP003YXHI8tf7bb7/tEbitjHlcp2t6hubQXKZp3Wbo3CP1Hq8YaDxxj9C7ztD1Cte+PDXnpeDMX2fr
        GZrtNkPrOVPvNdvkE5PbJy7Pb26+/zzR/Obm+cbmekebPGYaXKYLSr2jtENW5l/KKOkRsED3cpjA+vJU
        jet0HUB7Rxl5C+85Zu9oM0/41XOmoNwrLNsrShMwX/dra97RGo9IDWR9Y03+c/P6LSwcsMQycFnxoBXF
        g1eUDFpezK99Fxb6vZoHLrcIPTBR8dy9mT08Z1k1aycLVjaFaj4xEnGU3CzhOSzp819fbDyQ5BsLYqP/
        XFP/xQWDVxQPW1M2/LXykesqRFtbMSy+bMjKEhAjZOiR+i7TNMOXZvZwjxRwe4VrQO45U2gW2fvGCeVb
        4c4R+uVPLtOscLNkZGdn63Q6k8mUl5dXUFBQWFhY1JWD/hP5+fm5ubkGg0Gr1arVvHbt2qaD5ylIvrHG
        vgvNg5YXDo8vHb2hcuzm6vEJNeO31oxLqBmzqQrKQ1eXDlgq+KJFXLTvAm0P9wgBF6vFWyHoM8fgF5Xp
        N1u2qEzeUTkDorYrl0Xm5OQYjUawWiyW0tLS8vLyysrKqi4eFRUVZWVlJSUlUAaxXq9XcDcfutAnTu/3
        qnnAYvPQVUWj1peNT6ieuP325F13Anff5ZHn47ZUj1pfCd/+i4uQJjBh1cNthhWuT1R2nwlf+vi/7Tfw
        Hf9BtKM03wFH/WZc9ZmjV56r4KJZyKJWsMK0pqbmzp07dXV197py0P+7d+/evn27uroarSAapENqAnfL
        4Qt+cXr/eeZBS3NHxFvGbqoYs7HUd8Ylj8BTHkGnae6BpwLm3By7pXrE2nKMOGB+Qe9ZRgHXVcLFFiA7
        KWj7ihUrNmzYsGfPnkOHDh0+fHjHjoOjJh0NiEh2i9D1DM1ScFkkC4YsWxus9+/ff/jw4aNHj/7axYNV
        ePDgAZRra2tRMXzNZvP169cTDl/0e1UfMM88eFneyLXFo9Za/qn3G//i8+bvBh77/bCP/n3oX/6t79Hf
        eBz8/eAPsAvE229RIYVKKlfagvsMDZqF7NatW48ePXr69Onk5GTe98qVK8tXfuQXdBZpMyJRcPFZFoxm
        IUtv6NY333zz3Xfffd/Fg5Hp119/XV9fj5BJRyyC7ExJSUk4YoO7PG/UuhLvsPP/7PMmWHtNPOU2Jck1
        6Nwfxn7+uwHv/8bjAEY8PL5swJIi6paAqwqaZ2Smb7930Ow777wDUITJu5MjPO7ecwm4DNTscJVs+ROa
        hSx9evLkyQ8//PBjV45nz56xCiBGKPDFIshLNHTz5k3g4rn+83JRLnA9gs/+bsAxyHqEX/aemeIVed0t
        JOmlkZ/8s88RnJdRBGUN222A6/VKZp/+7+7cufPEiRN4Och+ksFSj7yVBlymscNle+JKyBY3oCuQZbKf
        f/75v7py0H/WV/F9/PgxukE9FLdbt24lvCng+s0VnostAPf3wz50nZII2T6xWb5z0j2nX315/Jf/GvAu
        cLHdgUstjLWc4e7bty8pKQlwLON/bPHHo9lOcCmmeALehEnhBkxMz/72t7/9dxcPEKOSp0+fohh0Q+Li
        DGlpacBlnMtowQ7334f8p0vQOTTrG53uE3XTI+xSz7Ff/NbvnXEJEu6yxnC9Zwq4Bw4cuHjxIulAjljR
        NgeXUSHTYEwInO1Mh+gWnbPO0GUDfaAStILR4QykJjqzw+0TZxq4JHfkawLuv/Y9+ocxn2O4aBayLpPP
        /H7oh1S5Briv2uC+HKbpHaXr0/+PO3cKuKjSEe6bb2f6BZ9jmm64Cq7frOvUrt/1fx+fxQ3QLGR/6/f2
        P3kebAau2IOI1PeZnsyoi7EBFQyfRbC0t97JYhQREJfNzjFw/ed1wy0en1D1H0M/gC8V7Lf+7+IGaPY3
        ngf7RF5xhusRqWF3gj22PnFGv+nJfQLPOjYMwW+OxivaxB4a41y/ud1wBdygPXdCDtwLO/Qw/Eh9+JGH
        U994MGXfPXbVmsCdqfWcZfSNzWWnWB3vGbRcHuxZUUzVYzzM/gYDC+iz++vfDbddcHFb72gTZNkpBis7
        GIzUmGLEa+XD1pRBGdzwZVTsNkPb7bntg+s1W49s+y4shCw0R65jx7mKPY0xm6pGra8E9JCVJXD3m5vn
        HikObv4a4R650EG43tF6v1fzkCeahSxYJ2yrnbj9No8MidlZZn8O7ojXc6Y40vNrhHtYHM/tCFyfOQY8
        AXyIFLXClInsR9LGbqmG+JBVJdhx7yjDrxVuooRraD/cGGPAggJyH4jjEmom7bwdtLeOSYNfrwvcfQfW
        ozdWYhc4g9dscRjt+XDp1tddM9j3bQVurH7gYlO74WK4Q1eJo+ugRLNMF3rgPjNDedKO2/JITzm+4R3d
        OlyNRkNvumI8ePCgFbgx+v4LtSNeK2oHXN9YI+MtDHf0xip8IGjvXcgydejB+4h30s474mCEONJT6DPH
        1CrcLh2twu23MGfYqtxxWyrbB5fEx3An7rgdvLcOrFMPPXCaof8ik8+c1pXbpaNNcFcaxmwq7ky4w+OL
        +87L6YYL3KEr9aPX5k7eUdU5cMdurhiywhQwL6sbroI7aq15QoJlyr47nQB39HrL4GW6briOcMdtzg/c
        XfmicCfuqBwZb+6G2xTupG2W0AN3XgRu3fgtlhHxxm64TeFO3FYYvKci/DDi7RDcwN1V4zbmd8NtCW7Q
        zuLQA7c7Ajf0QN3k7cVjN+Z1w20JbuBOS8je8rBD99oNd8rr1ZO2FnbDfT7cKbtLQg/UtA9u6MG6wJ0l
        E7vhtgY3eHdJ8J5SsrwdcJHt5B2WiVsLuuG2Brc4aHfxlL3VbYUbcqAueHdpN9y2ww3aVRq8TxykbR1u
        8N6aoJ2WyTuKOgCXblkP4XW1aP2QY4twLTwJ3F3dJriBu8qYumNwf9mHHFuCO1ngKm0dbuDumsnb2RRF
        HYPbpeMF4BZN2lo0cUdVK3An7yifvL2oG2774RZO3Fr6XLjbaydutUzazmzdcNsHF1bjNxeN21LVItwJ
        WysnbCnshtsxuOM2FozZJC75aB7u+C2lE7YUdMPtKNz80euLW4Q7dlPh+G64HYU7dmP+qHX5zcMdvaF8
        zIa88Vvyu+F2FG7eyNfMI+JLmoE7an1JN9wXhzt8jaU5uGstY9bndsN9IbjxpmGrCprAXV06Mr5gdDfc
        F4M7It40dGXuwKVFjeAOXWUZsSa3G+4LwzUOWWEcuKSgEdwhKwqHrzF3w+0EuMsNAxbnNYI7eEVeN9zO
        gtt/kakx3GWUOdOLw6Vb1kN4XS1e5JBjY7j6fgsMjeAOWmocvtr44nB/rYccHeAu0/VboGsMd0nnwO3S
        0Wlw5zeGO3CJflg33M6AC6u+8zROcHXDVhu64XYS3JzGcBdru+F2HtzsRnAHdMPtPLgB3XCbxv8V3Ofa
        gqlZuHV1db94uNbvW3CCu07AndR2W3huQXOGW1hY6Aj32bNnvxi46stCnOBuUXBj9f3bCtepoLU8FBv5
        mmnwcmbI8omxfprH/k0hwP3uu++Aywb/xcBt+k0hDXAXtRFu46FYMzsRaoZNAu4Q4M7P9o21ws3Pz8eM
        2LBsXjYym5o+KfF23YAsq4DFPXnyhL1hdthqampKS0tv3boF3D5xOr84wwDgrjKMXme2UtplCd7jDLeZ
        nYhmdn+ZYVvhOOCuNQ1Zwf5ydp848V1ZwFXfzlRbW0sP6IdyBviiX/rXFYOeE5BFtuQiGUm5xvrUtzNt
        OSTg+r9qGLBYI82zNbhOu79ND9zQBNzN+WQBuUBG+M8VX+cEXPW9Ysp2ES9JBF/0C2KCLna5UD1XZB8/
        foxo8ASyU32vGHDl94oZBy7RDl9jHLMhd3xCy3CbHrhpesiRxhN+ZUOxuQYu1gTMFzMAV6fT4Qz4EYnD
        FoYv+sUfuvT3ttF5VAJZ3FZ9qVhJSUlubu7169c3H0r0nwsyUdjBB9wJCQXUpKDm4TY55NjkYLm4XEzA
        Tcjnvdhcg5Zp+y0sYIYPPz6RmZmJeBmQsW3hi37Z1CAmm7puPHr0CKz379+nllRXV+N7yFav1ycnJ6/f
        n+Q/D0/IxR6pQECcsPV5cJ0Pljc5zWNB88zPJmIeUdNW6AcuLQyYr9//7ulr165ptVqz2Qxf9MtGxn/p
        E5RVIOcuFKrPqJVVQCsMhBRZo9GYnZ19/vz5mM1X+i4wD1qWO2yVQQ4V8jBMgIK1GbhNT/M4n6DcZYXL
        PLwX9RFnGLy8sO+C3ODVqZ999jkDFPiiX/wB/6U3qJhuEbDuckG3KyoqWAVWBMVQsQ0GQ05ODjI69uGJ
        gQtzBiwmuc3KEwQiMQ5rFm5zJyidT63vsqB5u+3yjoh36ErToGVFAfON87ddOnv2LAvOyMiwfz8xlBn/
        EnSuywXdRqqO30zMCOzSpUsffHgicFUqsh28okjIdq2ZsSnZbEXUBG4Lp9adLgqRczYS73qGE8ahK3IH
        LsEcjOh3+5Fzxz78kvr2i4y33z8V/3rS0MXZfReYBi0vGrrSjLyUbIUnKMPdXewMt6WLQhpdziThMj+z
        kQLKebEbK9+lRfgDHu8/r9EXp/+Smv88xl6GfgvzJFkThoBnIjJKmeBj84SmcJu/nKnRhXgKrrzaX4h3
        mzAHB774Q37/xQwe8vzizOwWe802eM7Ue0Tq3CK0bjM0rtM1rtM0LtNyRAv/h2yyb3RSdHW6xm2G1j1S
        3qkgyuAzx+j3am7f+fn9F+UPXpY3dIVhxBrI2gxBytbuCY3htnwhXqNLSKXmBV+b8zKzI18GD4OWavsv
        zAmYl+UXl+ETne4Vdav3zJuekakeEanuM1Lcpss27YZra81t+k33iMzObzPS3aalOC3LsdE3ekhXaR6R
        qZ6v3PSadcsnOq1PbEbA3CxWjRVk70mQXWdmxRmVKkNAcHZPcITbyiWk9oufrTNLvoBuypdFsmAWz+52
        3/nZfnGZvnPSvWen0T96SV8VYnuzsm6uuU9P8ZiR5vFKtscrOZ3WIjPcp6c6LcjeGjoWIfpJh5EF4kAi
        jmQREDJiZQVZrFaObYUhOMi2MdznXvxsv2xfwFUzN88311G//dDv3Cy6xWa3w6XfjZgqpbTQ3KeBOM0j
        MttzJrn5Qs3jFY17RLr7tFSnRTRqjpSBG5kKXO+oNPSBStDKgMWawcvFMdiRa0URG7c53261VkOwydYR
        biuX7ds/cNIA14Evb8EC8B18XQ3OGJ2w58Z29gduTAbKFWQjhGRcw2+4hF93Cbvea2pbm8vUG67habi2
        e4SuY811WpZLWKpLk3duttE3l3DhDyBGDb1nCk/A4hTcIct1jWTraLUOZGkKbhs+cGL7qFQjuDTFVxU3
        MTKzjXyBi3IXKFvI8JmT7ht93We2bFHXvaOudagx4w2f2bSUNjcxvZyx3Quln9YOR6ewCjT/VzP7L8pB
        uXa41oFtE0NQzQa3DR+VUh/yC9rVaH71FkK8DnDlrp5+wCKNlG2ae+hH7iEfugQ5tGDaR6q5tq8dd51y
        3C3kU/ewLz2nn/Gcfral5hF+yi30c9cpH4tZnN+kxWbvlWNvXYP+4h76oUfYp33iMqnSA5dokQ62oEqZ
        dZfMoY45kmnrh/zUx1ODnw93k9ghHr5ayLbv/ByvyES3KX/5Q1DSf0y+0veVC6FLz05bcW76qnMzVn8V
        QVvzgi3xuc1p4kZt2qrEoXOTcarmmywMOBj+0DMkmc7TegV/6TH1IxKRQoIz2Pd3rQcTnBLaTqbtH08N
        OVA3ZU9Z8J6Spm+hPJeNqQ7lkD5+cemQfWny5cnzzxx55wP2bS5fvnz16tVkW/CMX1uNK1evXOGxIS5f
        pjUJdkmd4mKTuCDiPJGYmPjJJ5+8/ccPItZeJNmdGgRlERaDSDyXIvGHKQLxS4EXSUH/uTkDF2vUkRpG
        uEhKeW5zym3PB6tDD94P2VfTHFyxt8ZmZF8FP0K2AfOyyaOeQV/NXn2CFbJYLPYDuzzy3zcyePHx48fy
        uJ44skfwRAQv8u+x/Kt4IoJX5ZTWqK9/VP/wYT0/Dx8+kHFfxj2a9YDW3bvykJY8qnXntoxaoqa2uqqq
        vKJco9GcOXNm8c5EMt2haWh4GgVDDHViMhjnoOKekm+voE+9Z13gT3bxWm23Bbjt+EoA8U0hb9ybsreR
        eKWzqHMTYpyLH0m3zcanAiKS3nvvfVYMnk+fPn0m7sYhbmjB8+8lZeB+DUHJUyGTTwVNyIut8K04ys4m
        EVuFTfLtt2qrfPO12DBiXit3Qm6fesGcaEBug05YkdfdvXP7Tm1NTXlFRV5e3nvvHwvakIUm7I2RFsIk
        /2CtajIShu9LQVeRC6KhlvCnhvM6DkfCHFr7v8wi7PDDqQdrpzjCtRmu3RPkWbVsHArZ3rp1CwjgVGfS
        eHz27NmTJ09YdZ1Op5WRo8lRwf+oSavRGAwGGMHwu++/e/L990+efP/k6VPm+p5fZPC63Dr8KNiStcoD
        xVpuKqluxdoKWpIWkG/LI98lJaVYysr9F9CgY6NyiAHlasPgZTpM1i82Ay9mlNYzKMk99LhfXJY4I2k9
        3SuO4TaFC6J2fw0LcMMP3w95vdz+Lgou2UGfyBR6Q0n1jc0C7vKEz/QGPRgAqs5Q/vTTj0+f/pCdnf32
        n/6y4XBiS23zkXN/eu8YZgI7wRKuAq1kK1VMSLKg/fZrB7J2FVvZKgkrtPcVWHkU/N49/KJG3mUnJSWF
        xdF/e2MMwLAHrcBOFOdlFOdsLFiYQ7CA6xuTKZxBnX1QttsELoja/QVCwJ32Zv3Ug7ft4nWEqwyXmsDi
        gbty22cmowkQP4pLb37+6WdxXQUUjr735/DdJuZ6Tpu7P43KQ66jSnQqqUovEUiVXJU1CHOw2rGDXhGs
        YPoQpDAVWKURS2OAq7gFl/WcTWpqasJb55yW3nDAb60JhWJ0QryRqb1CzgPXJ1rsUDDgHRHvcGrHAS5w
        QNTur75ScKcdeRiyr9IOF0fHeoBLHlENMCmfOQLuqu2fGYwG4ArlItqffkR+5WVlr7/7BXM9v03ZXfTn
        P/8ZQIhR4FRQHamqcmdjKq1WmoBVqFarlUoVTGVxE6GqW01tbVVVVWlpibg51FvnnJYuSrRtpayKmZvF
        rppL6AXgekenU+tQNJnKHj+bwQkucEDUUbhv1ocdujtlTylvRKFU/VAng9lBlOMYK1yjwQCVpz88/fFH
        IVuqUnFx8evvnrD34znt/fffJ38B9/hrUt+a/Dy3Z78aYtiRCqFKrVqZCpVKrHakd27XqgFDbQ2yraio
        LC623LhxY+vb55wWDSlRpW2FRFxYND/bOyrNJewicL2i0slOiMMd+k5wwQIcEHUcLg3DpiY2giuHCsD1
        VnB3fE5pAgvl6Ed59h/pFRUVtR0u46gHQrx/FTqFqnU0Zkt/B0uV6W8dh8EVnUqoSqZ3bEwZhgmsRGVl
        VXlZOZ25fr15uIiXSuV4YZH37DRXB7gMGBrBte5HiDqm+LwQXFnZKpqBGwPcDAVXr9cjN8o8sqUmIbnC
        wsK2w2VkCjO0KZgqndY/EjoVWEHKj91RBVOZ/laq6NQ6sGXYJUNAVacdxTi3Qp7KLbx27dpz4FovLFqu
        o4K1BS5AwNIJcGlhh+qCdpU0hpvjCFen1wOUSiTHtt9DqKCgoO1wcUaIsa8gZQrQeoSspApW6/6CgqqQ
        2vYXatXugmIK1SpJVZ6Exg0qyuUNO4uL8/PzryUnN4XLHkEjuHJ82SpcaQh1djgvCpcWsr9m8vaiFuHq
        dAiOSkQpoyjVP3rEuL3tcKuqq9nNIuUFUJX+MvklU4lUQpV+6iBUct8qVMEUnaoz5BVA5V9ZOUWVUsZQ
        Lzc3lz3sjsLVOMIN3lXMHoAjmU6AO/XQ/aDd5eO3FDQLl30EVIftMpjikQFSu+ACBWygFEylpQqdqvQX
        TJVQHSxV6dSu1KrKCuuFB+LaA7AiWNygpLSk2FJcVFhkNudeuXKlM+BaQl6vDD/ywJFMJ8DllZD9dycm
        FLcIt76ewRPipdAjv9xcc9vhwgVkkJSOKqDakp8mlNqQ/RKqICqZCqlCVTCVRK1MS0tKSooF2GJKGQZl
        MpnYQ3txuEG7ysLeuOdEpnPg8vrkXbVj1+c3hcvOLNksBlDffMOOKeozm9oBFyhAQ52CqtKpstRaMVCt
        If8ddSqAWtPfqtNSwVRglcEoEKwWi/VqD3H5jNF46dKlF4Q7aasFeYU3IdNpcIP23h2fUDF8tckJbk5O
        DkCpY5S1+vpHiM9oMrYdLkSgRnWSUMUw1SZUW/pLpgqrY+4rpQqgUqoCqWAqfgoBW1BYkF9glveevnjx
        4ovAHbuxIHBXNRD/b+FO3H571LqSgYu1jnCzs7NJZ0ZQ8KXYk9NGYzvgQgUdUp0kUxtWW/YLpg5CFUTL
        rLkvZap0ailSWpU3TWfsBdYCcXlSHp6g1WkvXug43BFrTBO2VgS/Xvf3gDt6Y9Xg5QV+sZl2uFlZWRgl
        tR7nZaBPYhsM+rbDRWvUdkCq8ZSVqXIARqpCplaoovyXliJSgRWiKqROxa30YQrSgvy8/HzcIDcvz2w2
        GwxGjUZz4cKFjsEdtFQ3en3ppJ23/35wh64uDZhn8okWR8WAm5mZRUIz0Gc0RU3CLhmctR0uREhvSNqy
        v0Gq0lGVpSqlUqdsRIssIvcFUsFUXEdH5IGVoVcebmDONRuNJoNer64E7QDcgFdzhq4sHLu5+u8Nt+/C
        Qp8YrYKbkZFBRoMV50XCpLdO2w64MCG7QenIVChVEBVQbX6qmIpolilUBVPCZMYNTEajuGRRpyOxkpKS
        2gvXOyqz38LcYfFl/z9wfWMNHlOPr97xRXp6Bo6J1TI+vXP3LqlNJrYLLo4JSpX+qvhLpvbSj6UqpCIk
        UxtVBdXKVCIVVE24AYMESplWo83IzExMbB9cj7BPfWIM/RcX/b/CDTu+ZtfJtLQ0bBJnYCiFhMlrxg9t
        hwsakMGyQaoilFKVoyqpCqQKqmAqQzBtUKoIqOrxAn50ekoZPUnPyPjqq6/aCNdndrr7tKu9Z5z0jTX9
        I8A9detWGoMksDKQotCT3tlZ2W2HCxeYQVIybcj/QhoitVb+ApH68sfOVGlVMZUeAFTBVUcT55d0JFB2
        dhbb/ty5NsHtvyCnT6zOI+KmV8Tpfxy4tzBKhk/wraqqJr8zszLbDhetIUbUKZAqpcrcl0ytQY0STB3S
        3wZVMZUhiIJUnrNjx0arycnOycrMpHvnzp5tFe6wleaBywr85+V7RNzyijjzjwL35s2b+CTOwFAKTyCz
        sbm2wwUL4AApDNXBUdGp8lNC6tRBqWwQB6Xq9DAVp0LFmU8eRIiToZQyim3qzdSzz4U7flP+mI3FI9eW
        Dl5R0jlw1Y3sFVxgvQjc1NRUig+FXhxCLS8nsTPSM9oOV6vVgY18V1DtuW+FCk9HS4Woo1KZmQdHojno
        ldGXCGSbnp6ekppy5syZFuBaJu8sm7SjavzWmlHrK14U7hYJd6kNrk+Msd9Cx9skdgRuSsoNS7GlrEyM
        paj22GV6Wtq+oyfl+eMSx+sfmjbgwgRq5DxMVe23qlQw5S/iR+lUUZVMrWfsCQeqCip6FT+ZUrYYLt07
        ffp0Y7iiVyF7y0P21YTsrwvcfbez4A4Xt5S0+MaJT5vKG3wuKBhiu8Fn0J67IQfuTT30gHnk/ahUexh2
        6AGv81dxP9UNlUzfd0ED3Bs3blB8xFiqrJxaT17fSru17+jpsEP35FmiUjQiLvuRHwVwasCFh95gAKWd
        qhQqTMV4yiH5JVWJVePAVAKVAVGYEjxgTBkZyBbDvX79OnAT3j4nlygEK6/kqJn6RsNZ8fEJNSPXVQxa
        Xuw3tzHcJobpTEbKDvS2m6GWDVhS5BMj4XpHi/v+ssXUrWlZDNMxNXzDDsFUNHEfpIP3rZ1QW3hlibgH
        e4yAu3rnqWvXrgOUQg9fHsluVgm4dJ0mLkjZWx20q1TmoDgn6NiACyCoCYkKpDL9pVCtSsVQJVUrVIk1
        pzFXpVMJVUQGXIl08ieNenDt2jUB961zdIBu0Bm6JDp28H7IfqEY2AkuUnR94vLcpzNaOOMTY1KG6Xhf
        WeZCZ3YyPFebh78q2TE9c3nPER9C7+EVpeftBiyxoP8xG8VNlQN3C75T9t9DqiHiHrXiNrW8wvx4guoE
        ns0W9pmjF3B3APcaCU2tLy4uYWSKb97CFv54kqXaW/C+u+JSwB2lk7aqS4ULxGUW2/KPHTsGJIyTMb9o
        NqYSKXXKHjahCqTKVaVQlVRlSKIiEKyINCHb1JTU5GvJp0+fSnjrKzpANxq69HodZEl5ZDtqfeXQVYKL
        T4zZbZqAi+wQkFV2W6oRJhMzlyMWGq9YN4803EEripmr9yzxxR89PGdqvaPN5Djvwt/GbBZ8WR4oA/fc
        ZTYaT9AsZFkGsqUT5ItvbK53tIC7avvJq1evYpTWsZT8BCJsjr73QfjeMmZ0ahN3VE3cWiouct9UELv7
        5hdffJEtlKsVItUbxBAVrEKmSqkOTEVTOrVytSGVWNPFP4kUvYpg9A3clJSU5OTkU6dOJrx13qknk3bK
        lUqoQXGk88BlxSSxV5TJJSwFuL2jDOJG6UstOAMTsAEgyFyKiZWM7dbekoyQrSATl+seKW6d3sM9UuPx
        igHx8uqQlYLv6I2VTEr6Q9neeGush23IkqiGohOzTb2jtMBdue3LK1evYpU4gxxJiePTJPj58+ffPHp8
        zRvJC/ZlNNfSNxxK+tN7x64mJ+fkCAuVOO2FSjAl+RVUQVSGJCqYCke1SdXGtIEreSO4ItubqdSDq1eT
        T548uflIEkMlx4bWWCnkQtaiOFmiBZdeoTeA6zFTR3ZTkMS90uPLYEfWOmPZWsO2UWQgayUTZeoVru27
        QNvDc5bGZZq2d5SRrdR/URHLAB+ImZq3G7Whko3GE34dHl9OHWP+gAUF5A6d8JypUXAvX75MSiNeWe3F
        gT6cE/2xvomJiSdPfkmc+PKEY/DK+aTzQMAroQZFJ43aWCqYWahTWilvqbI+DZqKpFLoTZo9gJrKYyqy
        pZpduXIFuBvfSGS9HBv+xsoOWVXCSgmycbmes4y9wjUKrtsMjedMAy/yJ/jCjukFFsVEYhFk1kKmDF1i
        rZBle7hF6Fym5QxZlNYjYIHu5bAc1+k6bEIOIAqQMJaKSzCDvQGdHmBJzA9ZxN4rjGVb4V68cIEKg1Vi
        maIakd3s12vEfj1shLisHJSeBAX1BK1J8dnyW4YNn5wHEaq5FDUCbIKdACfjhvjhAYnegOR19WgPPOHS
        pUtsy3X7z7Fejo2UZ2Vh50/9iDF7zjSis56hOQqu63QhO3Aj55aw8CvcwcqboE6y2T1Czzt4zdaGrE7s
        MXlrqXe0ljdiiyFG/sx7MR0QeUfRFohHfmWXjh6gceZ/OUzDW9jhJiYlQQQFKt2pPFa1m9clHVG1b0pC
        ggv/ZIBJviJeVH+yMyNsuERcE/9EJCeLH9s169bL1uXF6I4XpjcEZJOSknD21/aeYRUcG2JizOQdbYKg
        W4QeubBSjnDF83BtA5a5NiySicLCi7wPdctjpsFlurbn1BzccvDKvEXrD/VIK/hr6J7KfosMvrFaeAPa
        Z47ON0bnG6sXLY6xhHgUz2N0PjE6JmAyexMFbdsndJ0QqW8LuwmoPzmH+vSyis+s4fC0UXz62aeN45NP
        aG2Ojz/++Pjx4x999NHq7Z+4T7vYqIWL5hZ2wXWqcwOu42p6R4t1d2bSCIuOyXxitH5zdaPWW2ZtSYyP
        j/9fVmAaYnL9E7YAAAAASUVORK5CYII=
</value>
  </data>
</root>