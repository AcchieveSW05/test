<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Stone.WinUIPro</name>
    </assembly>
    <members>
        <member name="T:Stone.WinUI.AsGridView">
            <summary>
            Represent as GridView supported frozen column.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsBaseControl">
            <summary>
            Base control for all.
            </summary>
        </member>
        <member name="T:Stone.WinUI.IControlRenderer">
            <summary>
            Interface for implement render control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.IControlRenderer.RendererType">
            <summary>
            Get or set the render type of control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsBaseControl"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseControl.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control"/> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseControl.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Detected visual style is enable?
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsBaseControl.OnVisualStyleChanged">
            <summary>
            Occur after visual style/system color changed.
            Prepared change some element of control for look nice.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseControl.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Occur after <see cref="P:Stone.WinUI.AsBaseControl.RendererType"/> changed.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Stone.WinUI.AsBaseControl.RendererType">
            <summary>
            Get or set theme of the control.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsBaseControl.RendererTypeChanged">
            <summary>
            Occurs when <see cref="P:Stone.WinUI.AsBaseControl.RendererType"/> changed.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.CHECKBOX_SIZE">
            <summary>
            Size=13
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.RESIZE_ARROW_PADDING">
            <summary>
            Size of padding vertical split, default = 1
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.FLD_GROUP_COUNT">
            <summary>
            Field: GvCountItem
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.FLD_ISROWGROUP">
            <summary>
            Field: GvIsRowGroup, 0=Group, 1=None
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.FLD_GROUP_EXPAND">
            <summary>
            Field: GvGroupExpand 0=Expand, 1=Collaspe
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.MINIMUM_COLUMN_SIZE">
            <summary>
            Mininum column size = 20
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridView"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnRowGroup(Stone.WinUI.AsGridRowGroupEventArgs)">
            <summary>
            Raises the <see cref="E:RowGroup"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridRowGroupEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnBeforeDeleteRow(Stone.WinUI.AsGridRowDeleteEventArgs)">
            <summary>
            Raise event BeforeDeleteRow.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnAfterDeleteRow(System.EventArgs)">
            <summary>
            Raise event AfterDeleteRow.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnColumnChoosed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ColumnChoosed"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnDataChanging(Stone.WinUI.AsGridDataChangingEventArgs)">
            <summary>
            Raises the <see cref="E:DataChanging"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridDataChangingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnDataChanged(Stone.WinUI.AsGridDataChangedEventArgs)">
            <summary>
            Raises the <see cref="E:DataChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridDataChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnBeforeHeaderStrip(Stone.WinUI.AsGridHeaderStripEventArgs)">
            <summary>
            Raises the <see cref="E:BeforeHeaderStrip"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridHeaderStripEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnColumnResizing(Stone.WinUI.AsGridColumnResizingEventArgs)">
            <summary>
            Raises the <see cref="E:ColumnResizing"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridColumnResizingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnAfterHeaderStrip(Stone.WinUI.AsGridHeaderStripEventArgs)">
            <summary>
            Occur after context column header closed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnDataSourceChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DataSourceChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnCellStyle(Stone.WinUI.AsGridCellStyleEventArgs)">
            <summary>
            Raises the <see cref="E:CellStyle"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridCellStyleEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnCellPainting(Stone.WinUI.AsGridCellPaintingEventArgs)">
            <summary>
            Raises the <see cref="E:CellPainting"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridCellPaintingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnColumnReOrder(Stone.WinUI.AsGridColumnReOrderEventArgs)">
            <summary>
            Raises the <see cref="E:ColumnReOrder"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridColumnReOrderEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnColumnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ColumnSelectedIndexChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnDrawHeader(Stone.WinUI.AsGridDrawHeaderEventArgs)">
            <summary>
            Raises the <see cref="E:DrawHeader"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridDrawHeaderEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnDrawHeaderTop(Stone.WinUI.AsGridDrawHeaderTopEventArgs)">
            <summary>
            Raises the <see cref="E:DrawHeaderTop"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridDrawHeaderTopEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnDrawFooter(Stone.WinUI.AsGridDrawFooterEventArgs)">
            <summary>
            Raises the <see cref="E:DrawFooter"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridDrawFooterEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnButtonClick(Stone.WinUI.AsGridButtonClickEventArgs)">
            <summary>
            Raises the <see cref="E:ButtonClick"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridButtonClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnTextLinkClick(Stone.WinUI.AsGridTextLinkClickEventArgs)">
            <summary>
            Raises the <see cref="E:TextLinkClick"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridTextLinkClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnRowActivate(Stone.WinUI.AsGridRowActivateEventArgs)">
            <summary>
            Raises the <see cref="E:RowActivate"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridRowActivateEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnRowColorData(Stone.WinUI.AsGridRowColorEventArgs)">
            <summary>
            Raises the <see cref="E:RowColorData"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridRowColorEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnHeaderClicked(Stone.WinUI.AsGridHeaderActionEventArgs)">
            <summary>
            Raises the <see cref="E:HeaderClicked"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridHeaderActionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnSelectedIndexChanged(Stone.WinUI.AsGridRowActivateEventArgs)">
            <summary>
            Raises the <see cref="E:SelectedIndexChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridRowActivateEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Raises the <see cref="E:Scroll"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_CellPadding">
            <summary>
            Cell padding default=1
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_ContextSwap">
            <summary>
            Temporary when right click at header.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_ColumnSelectedIndex">
            <summary>
            Keep column seleted index.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_nLastColumnSort">
            <summary>
            Lastest column sort.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_ColumnMouseDown">
            <summary>
            Lastest column mouse down, this column will release after mouse up.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_nDropToColumn">
            <summary>
            Column index while dragging column, default = -1;
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_nResizeColumnNumber">
            <summary>
            the column number thats being resized
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.cornerBox">
            <summary>
            Bottom-Right corner.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.sf_Buffer">
            <summary>
            Buffer StringFormat when draw cell text.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_nHotColumnIndex">
            <summary>
            internal hot column
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_nHotItemIndex">
            <summary>
            internal hot item index
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_nColSelectedDesign">
            <summary>
            Column selected on design time.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_FontBold">
            <summary>
            Font of the control but bold only.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_nLastWidth">
            <summary>
            Keep last width of the control.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_ToolTip">
            <summary>
            Tool tip for show description.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_bEnable">
            <summary>
            Control is enable or not.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_TextBrush">
            <summary>
            TextBrush Buffer.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_bDrawUnFrozen">
            <summary>
            Drawing in un-Frozen area. 
            <para>
            true = un-Frozen area, 
            false = Frozen area.
            </para>
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_Renderer">
            <summary>
            grid renderer.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_ColumnsTop">
            <summary>
            Collection of top columns.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_Columns">
            <summary>
            Collection of columns Private
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_bAllowRightClick">
            <summary>
            Internal flag to determine how to pass mouse right up.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_bDrawAllRowsAndCols">
            <summary>
            Flag to draw by system or force to draw from 1st to last row.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_ColumnCount">
            <summary>
            Internal column count in drawing routine.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_nBorderPadding">
            <summary>
            Internal border padding, 
            Do not edit directly except from BorderStyle.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_ForeColorIfDark">
            <summary>
            Alternate text ForeColor if BaseColor is dark, default=ControlText
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_ColorArrowIfDark">
            <summary>
            Alternate arrow color if BaseColor is dark, default=ControlDark
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_HideSelection">
            <summary>
            default=false.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_FontCache">
            <summary>
            Internal font cache. m _ Font Cache
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.CanClickColumnHeader(Stone.WinUI.ColumnFormats)">
            <summary>
            Column header can click for sorting and support context menu.
            <para>Not allow for [Button, CheckBox, Image]</para>
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnEnabledChanged(System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsGridView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Stop keys from going to scrollbars, do not touch.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.PreProcessMessage(System.Windows.Forms.Message@)">
            <summary>
            Preprocesses keyboard or input messages within the message loop before they are dispatched.
            </summary>
            <param name="msg">A <see cref="T:System.Windows.Forms.Message"/>, passed by reference, that represents the message to process. The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</param>
            <returns>
            true if the message was processed by the control; otherwise, false.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
            	<IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnGridKeyDown(Stone.WinUI.AsGridKeyEventArgs)">
            <summary>
            Raises the <see cref="E:GridKeyDown"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridKeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.BeginUpdate">
            <summary>
            Tell painter to stop until ready again.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.EndUpdate">
            <summary>
            Tell painter to updates again and repaint it.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.HitTest(System.Int32,System.Int32)">
            <summary>
            Provides spot information, given x- and y-coordinates.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.HighlightWord(Stone.WinUI.AsGridCellPaintingEventArgs,System.String,System.Drawing.Color)">
            <summary>
            Highlight the search word and draw text in cell from event <see cref="E:Stone.WinUI.AsGridView.CellPainting"/>.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridCellPaintingEventArgs"/> instance containing the event data.</param>
            <param name="word">Word to highlight.</param>
            <param name="highlightColor">Color of the highlight.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.Invalidate(System.Int32)">
            <summary>
            Invalidate at specified index.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.InvalidateSelectedIndex">
            <summary>
            Invalidate at the current selected index.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.InterpretCoords(System.Int32,System.Int32,Stone.WinUI.ListRegions@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,Stone.WinUI.ListStates@)">
            <summary>
            Interpreter mouse co-ordinates to implement mouse behavior. 
            See mouse event: <seealso cref="M:Stone.WinUI.AsGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)"/>, <seealso cref="M:Stone.WinUI.AsGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)"/>, 
            <seealso cref="M:Stone.WinUI.AsGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)"/>, <seealso cref="M:Stone.WinUI.AsGridView.OnDoubleClick(System.EventArgs)"/>
            </summary>
            <param name="nScreenX"></param>
            <param name="nScreenY"></param>
            <param name="listRegion"></param>
            <param name="nCellX"></param>
            <param name="nCellY"></param>
            <param name="nItem"></param>
            <param name="nColumn"></param>
            <param name="nState"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawFrozenLine(System.Drawing.Graphics)">
            <summary>
            Draw a Frozen line.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.ShouldSerializePadding">
            <summary>
            Shoulds the serialize padding.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.RemoveRowGroups">
            <summary>
            Remove all row-group.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.AddRowGroupManual(System.String)">
            <summary>
            Add row-group by programtically.
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.AddRowGroupFromHeaderClick(System.String)">
            <summary>
            Build row-group and add to current datasoure.
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.GetInvertedColor(System.Drawing.Color)">
            <summary>
            Get fore color and sort arrow when set BaseColor dark.
            <para>Return true if input color is dark, otherwise false.</para>
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.GetMaximumColumnWidth(Stone.WinUI.AsGridViewColumn)">
            <summary>
            Gets maximum column width to ensure all content in the column can visible.
            </summary>
            <param name="col">The col.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.GetRowSelectedHighlight(System.Drawing.Rectangle,System.Data.DataRowView)">
            <summary>
            Gets the area to highlight row when <see cref="P:Stone.WinUI.AsGridView.FullRowSelect"/> = false return 1st column area.
            </summary>
            <param name="fullRow"></param>
            <param name="rowView"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.GetColumnBoundX(System.Int32)">
            <summary>
            Get the x-coordinate from specify column number.
            </summary>
            <param name="nColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.SortColumn(System.String)">
            <summary>
            Sort a column from specifed fieldName.
            </summary>
            <param name="fieldName"></param>
            <returns>true if success, otherwise false.</returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.sortColumn(System.Int32)">
            <summary>
            Internal sort
            </summary>
            <param name="nColumn"></param>
            <returns>true if success, otherwise false.</returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.SortColumn(System.Int32)">
            <summary>
            Sort a column from column index and re-drawn after sorted.
            </summary>
            <param name="nColumn"></param>
            <returns>true if success, otherwise false.</returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DeleteRowAtInternal(System.Int32)">
            <summary>
            Delete data at specify row number.
            </summary>
            <param name="nRowIndex"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DeleteRowAt(System.Int32)">
            <summary>
            Delete data at specify row number.
            </summary>
            <param name="nRowIndex"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.CopyToClipboard(System.Boolean)">
            <summary>
            Copy current <see cref="P:Stone.WinUI.AsGridView.DataSource"/> into text tab limited format
            (include header) to clipboard or return string.
            </summary>
            <param name="returnString">true = return string otherwise clipboard.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.Clear">
            <summary>
            Clear all items and release <see cref="P:Stone.WinUI.AsGridView.DataSource"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnFontChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.FontChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Resize"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Occur after <see cref="P:Stone.WinUI.AsBaseControl.RendererType"/> changed.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnVisualStyleChanged">
            <summary>
            Occur after visual style/system color changed.
            Prepared change some element of control look nice.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawColumnFooters(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draw all columns footer.
            </summary>
            <param name="g"></param>
            <param name="rectFooters"></param>
            <param name="noFrozen"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.SetFooterValue">
            <summary>
            Set footer text from type of footer.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.RecalcColumnHeadersBounds">
            <summary>
            Recalc bounds all column header.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.GetTopingArea(Stone.WinUI.AsGridColumnTop)">
            <summary>
            Gets the column width until visible.
            </summary>
            <param name="top">top col to check.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawColumnHeaders(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draw all columns header.
            </summary>
            <param name="g"></param>
            <param name="rectHeaders"></param>
            <param name="noFrozen"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawColumnTopHeader(System.Drawing.Graphics,Stone.WinUI.AsGridColumnTop,System.Int32)">
            <summary>
            Draws the column top header.
            </summary>
            <param name="g">The g.</param>
            <param name="top">The top.</param>
            <param name="colIndex">Index of the col.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawColumnHeader(System.Drawing.Graphics,Stone.WinUI.AsGridViewColumn,System.Int32)">
            <summary>
            Draw column header.
            </summary>
            <param name="g"></param>
            <param name="col"></param>
            <param name="colIndex"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawColumnFooter(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.AsGridViewColumn,System.Int32)">
            <summary>
            Draw each column footer.
            </summary>
            <param name="g"></param>
            <param name="rectColumn"></param>
            <param name="col"></param>
            <param name="colIndex"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawSortUpDown(System.Drawing.Graphics,Stone.WinUI.AsGridViewColumn)">
            <summary>
            Draw arrow up, down
            </summary>
            <param name="g"></param>
            <param name="col"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.SetColumnAutoWidth">
            <summary>
            Set column fit width by data of each column.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.CreateAutoColumnFromDatasource">
            <summary>
            Create auto column from datasource.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.CreateColumnFromDataSource">
            <summary>
            Auto generate column from datasource 
            and set auto column width, run from <see cref="T:System.ComponentModel.BackgroundWorker"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawRows(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draw client rows of list control
            </summary>
            <param name="g"></param>
            <param name="rowInnerRect"></param>
            <param name="noFrozen"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawRow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Data.DataRowView,System.Boolean)">
            <summary>
            Draw row at specified coordinates
            </summary>
            <param name="g"></param>
            <param name="rectRow"></param>
            <param name="rectRowInnerClient"></param>
            <param name="nItemIndex"></param>
            <param name="rowView"></param>
            <param name="noFrozen"></param>
            <returns>true = draw normal, false = skip draw.</returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawRowGroup(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Data.DataRowView)">
            <summary>
            Draw RowGroup after sorting.
            <para>If this row is row-group, any drawing after this will be skip.  
            Return true if row-group, otherwise false.</para>
            </summary>
            <param name="g"></param>
            <param name="rectRow"></param>
            <param name="rectRowInnerClient"></param>
            <param name="nItemIndex"></param>
            <param name="rowView"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.SetCustomFormatText(Stone.WinUI.AsGridViewColumn,System.String)">
            <summary>
            Custom formatting text to show at column.
            </summary>
            <param name="col"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawSubItem(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Int32,Stone.WinUI.AsGridViewColumn,System.Data.DataRowView,System.Drawing.FontStyle,System.Drawing.Color)">
            <summary>
            Draw Sub Item (Cell) at location specified
            </summary>
            <param name="g"></param>
            <param name="rectSub"></param>
            <param name="rectRow"></param>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <param name="col"></param>
            <param name="rowView"></param>
            <param name="eFontStyle"></param>
            <param name="eForeColor"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draw a checkbox on the sub item by send bool value (bChecked).
            </summary>
            <param name="g"></param>
            <param name="rectCell"></param>
            <param name="bChecked"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawExpand(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draw a expand on the sub item.
            </summary>
            <param name="g"></param>
            <param name="rectCell"></param>
            <param name="bExpanded"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.GetCellTextFormatted(Stone.WinUI.AsGridViewColumn,System.Object)">
            <summary>
            Gets text formatted from raw string in cell.
            </summary>
            <param name="col">Column to get text</param>
            <param name="cellData">Raw data</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.GetItemBounds(System.Int32)">
            <summary>
            Get Rectangle area from specificed row index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.GetRowHeaderRect(System.Drawing.Graphics)">
            <summary>
            Get rectangle of row header.
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawRowsHeader(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw row header and left side exclude left-top header.
            </summary>
            <param name="g"></param>
            <param name="rectVRowHd"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawLineNumber(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Drawing.StringFormat,System.Drawing.SolidBrush,System.Drawing.Pen)">
            <summary>
            Draw background and line number at rowheader.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="iRowNo"></param>
            <param name="sf"></param>
            <param name="brRowLine">Font brush for draw line number.</param>
            <param name="penBorder">Pen for draw border</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw background of control.
            <para>Fill color with <see cref="P:Stone.WinUI.AsGridView.RowBackColor"/> if no <see cref="P:System.Windows.Forms.Control.BackgroundImage"/>.
            Or draw <see cref="P:System.Windows.Forms.Control.BackgroundImage"/>.</para>
            </summary>
            <param name="g"></param>
            <param name="rowInnerRect"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.setPixelOffsetMode(System.Drawing.Graphics,System.Drawing.Drawing2D.PixelOffsetMode)">
            <summary>
            Sets the pixel offset mode.
            </summary>
            <param name="g">The g.</param>
            <param name="pixMode">The pix mode.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawColumnsDataBackColor(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw back color in detail view.
            </summary>
            <param name="g"></param>
            <param name="rowInnerRect"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.LayoutSave">
            <summary>
            Layout saving to <see cref="T:System.Data.DataSet"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.LayoutLoad(System.Data.DataSet)">
            <summary>
            Load saved layout from <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dsLayout">The dataset layout.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.ToImage">
            <summary>
            Supports rendering control and all data to image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawAlternateRowsColor(System.Drawing.Graphics)">
            <summary>
            Draw alternate color all rows
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawHotColumnTracking(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draw hot tracking column overlay
            </summary>
            <param name="g"></param>
            <param name="rowInnerRect"></param>
            <param name="noFrozen"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawCellColor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draw color rectangle in cell area.
            </summary>
            <param name="g">The g.</param>
            <param name="rectCell">The rect cell.</param>
            <param name="cellColor">Color of the cell.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawCellImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.StringAlignment)">
            <summary>
            Draw image in cell(auto size).
            </summary>
            <param name="g">The g.</param>
            <param name="rectCell">The rect cell.</param>
            <param name="img">The img.</param>
            <param name="alignment">The alignment.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawCellImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.StringAlignment,System.Boolean)">
            <summary>
            Draw image in cell with actual size of image when true, or auto size.
            </summary>
            <param name="g"></param>
            <param name="rectCell"></param>
            <param name="img"></param>
            <param name="alignment"></param>
            <param name="actualSize"></param>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_ListTextLink">
            <summary>
            Contain all area TextLink in grid.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_ListButton">
            <summary>
            Contain all buttons area in grid.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_ButtonActive">
            <summary>
            Button has been pressed.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.rowFilterList">
            <summary>
            Row filter list.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_RegionUnRowGroup">
            <summary>
            Area of all row items exclude row groups.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.thumbs">
            <summary>
            Thumbnail images for ColumnFormat.ImageFromPath
            <para>string = filePath</para>
            <para>Image = small image</para>
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridView.thumbs2">
            <summary>
            Thumbnail images for ColumnFormat.Image
            <para>byte[] = byte array</para>
            <para>Image = small image</para>
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.GetThumbnailFromList(System.String,System.Drawing.Rectangle)">
            <summary>
            Get thumbnail image from key(filePath), if not found load once.
            </summary>
            <param name="keyPath"></param>
            <param name="rectCell"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.GetThumbnailFromList2(System.Byte[],System.Drawing.Rectangle)">
            <summary>
            Get thumbnail image from original byte array, if not found load once.
            </summary>
            <param name="bytes"></param>
            <param name="rectCell"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.GetThumbnailSize(System.Drawing.Image,System.Drawing.Size)">
            <summary>
            Gets the new image from specific size.
            </summary>
            <param name="original">The original image.</param>
            <param name="newSize">The new size.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.GetThumbnailSize(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Get thumbnail image size.
            </summary>
            <param name="img"></param>
            <param name="rectCell"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawCellText(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.StringAlignment,System.Drawing.Color,System.Boolean,System.Drawing.FontStyle)">
            <summary>
            Draw cell text in horizontal layout.
            </summary>
            <param name="g"></param>
            <param name="rectCell"></param>
            <param name="text"></param>
            <param name="align"></param>
            <param name="textColor"></param>
            <param name="bReadOnly">!VisibleData || !base.Enabled, If true draw disable text.</param>
            <param name="fontStyle">Default is Regular.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawCellText(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.StringAlignment,System.Drawing.Color,System.Boolean,System.Drawing.FontStyle,Stone.WinUI.TextRotations)">
            <summary>
            Draw cell text is used by header and cell to draw properly aligned text in subitems.
            </summary>
            <param name="g"></param>
            <param name="rectCell"></param>
            <param name="text"></param>
            <param name="align"></param>
            <param name="textColor"></param>
            <param name="bReadOnly">!VisibleData || !base.Enabled, If true draw disable text.</param>
            <param name="fontStyle">Use bold font.</param>
            <param name="rotation"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.DrawGridLines(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draw grid lines in client area
            </summary>
            <param name="gLine"></param>
            <param name="rect"></param>
            <param name="noFrozen"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.ToggleCheckBox(System.String,System.Boolean)">
            <summary>
            Set all rows in column format = <see cref="F:Stone.WinUI.ColumnFormats.CheckBox"/> to checked or none.
            <para>Notice: This method does not raise the <see cref="E:RowCheckedChanged"/> event.</para>
            </summary>
            <param name="fieldName"></param>
            <param name="checkAll"></param>
            <returns>True if toggle success.</returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.ToggleCheckBox(System.Int32,System.Int32)">
            <summary>
            Toggle check box state at specific row/col index.
            </summary>
            <param name="nRowIndex"></param>
            <param name="nColIndex"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.EnsureVisible">
            <summary>
            Ensure <see cref="P:Stone.WinUI.AsGridView.ColumnSelectedIndex"/>
            and <see cref="P:Stone.WinUI.AsGridView.SelectedIndex"/> can visible. 
            Call this if manual set any selected index.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.SetHScroll(System.Int32)">
            <summary>
            Set horizontal scroll bar to specific column.
            </summary>
            <param name="colIndex">Column index that need to display.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.SetVScroll(System.Int32)">
            <summary>
            Allow call from EnsureVisible only.
            Internal set vertical scrollbar value.
            </summary>
            <param name="newValue">New position.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.ProcessBeforeMouseDown(System.Windows.Forms.MouseEventArgs,System.Int32@,System.Int32@,System.Drawing.Point,Stone.WinUI.ListStates,Stone.WinUI.ListRegions)">
            <summary>
            Process before raise event OnMouseDown.
            <para>Return true if pass-throught normal process, otherwise false to by-pass event OnMouseDown.</para>
            </summary>
            <param name="e"></param>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <param name="ptCell"></param>
            <param name="state"></param>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.ProcessAfterMouseDown(System.Windows.Forms.MouseEventArgs,System.Int32,System.Int32,Stone.WinUI.ListStates,Stone.WinUI.ListRegions)">
            <summary>
            Process after raise event OnMouseDown.
            </summary>
            <param name="e"></param>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <param name="state"></param>
            <param name="region"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.ProcessBeforeKeyDown(System.Windows.Forms.Keys)">
            <summary>
            Process before event KeyDown.
            </summary>
            <param name="keyCode"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.ProcessAfterMouseMove(System.Windows.Forms.MouseEventArgs,Stone.WinUI.ListRegions,Stone.WinUI.ListStates,System.Int32,System.Int32)">
            <summary>
            Processes after mouse move event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <param name="region">The region.</param>
            <param name="state">The state.</param>
            <param name="rowIndex">Index of the row.</param>
            <param name="colIndex">Index of the col.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.ProcessBeforeMouseUp(System.Windows.Forms.MouseEventArgs,Stone.WinUI.ListRegions,Stone.WinUI.ListStates,System.Int32,System.Int32)">
            <summary>
            Processes before mouse up event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <param name="region">The region.</param>
            <param name="state">The state.</param>
            <param name="rowIndex">Index of the row.</param>
            <param name="colIndex">Index of the col.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.RecalcScrollBar">
            <summary>
            Update layout of V/H scroll bars and control size.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.RecalcFrozenArea">
            <summary>
            Re-calc frozen area if Frozen column is define.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.VScrollBar_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Vertical scroll bar movement
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.HScrollBar_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Horizontal scroll bar movement
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.DoubleClick"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.contextCol_Opened(System.Object,System.EventArgs)">
            <summary>
            Context menu strip (Column) opened.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.contextCol_Closed(System.Object,System.Windows.Forms.ToolStripDropDownClosedEventArgs)">
            <summary>
            Context menu strip (Column) closed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.menuColumnFrozen_Clicked(System.Object,System.EventArgs)">
            <summary>
            Handles the Clicked event of the menuColumnFrozen control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.menuColumnChooser_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the menuColumnChooser control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.menuClearFilter_Click(System.Object,System.EventArgs)">
            <summary>
            ล้างการกรองข้อมูลในคอลัมน์ปัจจุบัน
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.RowFilterRemoveAt(System.String,System.String)">
            <summary>
            Remove main row filter at field.
            </summary>
            <param name="field">The field.</param>
            <param name="conditionToRemove">The condition to remove.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridView.menuUdfFilter_Click(System.Object,System.EventArgs)">
            <summary>
            Menu user define filter.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.menuColumnColer_Click(System.Object,System.EventArgs)">
            <summary>
            Custom column color.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="F:Stone.WinUI.AsGridView.m_ImgCheckBox">
            <summary>
            0=Checked, 1=Unchecked
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridView.InitializeComponent">
            <summary>
            Initialize an component for designer.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.ColumnSelectedIndexChanged">
            <summary>
            Occur when the value of <see cref="P:Stone.WinUI.AsGridView.ColumnSelectedIndex"/> property on the control changes.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.ColumnReOrder">
            <summary>
            Occur when re-order column.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.RowGroup">
            <summary>
            Occur when row grouping.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.BeforeHeaderStrip">
            <summary>
            Occur before context column header show.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.AfterHeaderStrip">
            <summary>
            Occur after context column header closed.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.GridKeyDown">
            <summary>
            Occur when user key down inside control 
            and can use this instead of <see cref="E:System.Windows.Forms.Control.KeyDown"/> event.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.HeaderClicked">
            <summary>
            Occur when clicked column header.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.TextLinkClick">
            <summary>
            Occur when cell text link has been clicked.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.ButtonClick">
            <summary>
            Occur when cell button has been clicked.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.DataChanging">
            <summary>
            Occur when user try changing data in grid.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.ColumnChoosed">
            <summary>
            Occurs after user choose column to show/hide or re-assign column index.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.DataChanged">
            <summary>
            Occur after user changed data in grid.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.RowActivate">
            <summary>
            Occurs when activate row by mouse or keyboard(DoubleClick, Enter).
            </summary>
            <example>Show data of activate row.
            <code lang="cs">
            string s = string.Format("You hit row {0}, CustomerName: {1}", e.RowIndex, e.RowView["CustomerName"].ToString());
            MessageBox.Show(s, "Event RowActivate", MessageBoxButtons.OK, MessageBoxIcon.Information);
            </code>
            <code lang="vb">
            Dim s As String = String.Format("You hit row {0}, CustomerName: {1}", e.RowIndex, e.RowView("CustomerName").ToString())
            MessageBox.Show(s, "Event RowActivate", MessageBoxButtons.OK, MessageBoxIcon.Information)
            </code>
            </example>
        </member>
        <member name="E:Stone.WinUI.AsGridView.DataSourceChanged">
            <summary>
            Occur when the value of <see cref="P:Stone.WinUI.AsGridView.DataSource"/> property on the control changes.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.SelectedIndexChanged">
            <summary>
            Occured when selected index has been changed.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.Scroll">
            <summary>
            Occured when scroll vertical or horizontal.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.RowColorData">
            <summary>
            Occurs when need to set color on each row, 
            you must set condition from some column.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.CellPainting">
             <summary>
             Occurs when need to custom cell painting.
             </summary>
             <example>Drawing 2 line, set item height = 40
             <code lang="cs">
             if (e.FieldName == "ARNAME")
             {
                e.Handled = true;			// tell them not process after me.
                Graphics g = e.Graphics;
                string custName = e.RowView[e.FieldName].ToString();
                string custAddress = "+ " + e.RowView["CustomerAddress"].ToString().Trim();
                
                StringFormat sf = new StringFormat();
                sf.LineAlignment = StringAlignment.Center;
                sf.Alignment = StringAlignment.Near;
                sf.Trimming = StringTrimming.EllipsisCharacter;
                sf.FormatFlags = StringFormatFlags.NoWrap | StringFormatFlags.LineLimit;
                
                Rectangle rect1 = new Rectangle(e.CellBounds.X + 2, e.CellBounds.Y, e.CellBounds.Width - 2, 20);
                Rectangle rect2 = new Rectangle(e.CellBounds.X + 12, e.CellBounds.Y + 20, e.CellBounds.Width - 12, 20);
                using (SolidBrush br = new SolidBrush(e.ForeColor))
                {
                    g.DrawString(custName, Font, br, rect1, sf);
                    g.DrawString(custAddress, Font, br, rect2, sf);
                }
             }
             </code>
             <code lang="vb">
             If (e.FieldName.Equals("ArName", StringComparison.InvariantCultureIgnoreCase)) Then
            
                 e.Handled = True
                 Dim g As Graphics = e.Graphics
                 Dim custName As String = e.RowView(e.FieldName).ToString()
                 Dim custAddress As String = "+ " + e.RowView("CustomerAddress").ToString().Trim()
            
                 Dim sf As New StringFormat()
                 sf.LineAlignment = StringAlignment.Center
                 sf.Alignment = StringAlignment.Near
                 sf.Trimming = StringTrimming.EllipsisCharacter
                 sf.FormatFlags = StringFormatFlags.NoWrap Or StringFormatFlags.LineLimit
            
                 Dim rect1 As New Rectangle(e.CellBounds.X + 2, e.CellBounds.Y, e.CellBounds.Width - 2, 20)
                 Dim rect2 As New Rectangle(e.CellBounds.X + 12, e.CellBounds.Y + 20, e.CellBounds.Width - 12, 20)
            
                 Using br As New SolidBrush(e.ForeColor)
                     g.DrawString(custName, Font, br, rect1, sf)
                     g.DrawString(custAddress, Font, br, rect2, sf)
                 End Using
             End If
             </code>
             </example>
        </member>
        <member name="E:Stone.WinUI.AsGridView.ColumnResizing">
            <summary>
            Occur between user drag mouse to resize column header.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.CellStyle">
            <summary>
            Occur when need to set the cell style.
            </summary>
            <example>Set cell style when condition is true.
            <code lang="cs">
            if (e.FieldName == "MaxQty")
            {
               e.BackColor = Color.Snow;
               e.ForeColor = Color.Brown;
            }
            else
            {
               int qty = Convert.ToInt32(e.RowView["Quantity"].ToString());
               if (qty > 100)
               {
                   e.ForeColor = Color.Navy;
               }
            }
            </code>
            <code lang="vb">
            If (e.FieldName == "MaxQty") Then
                e.BackColor = Color.Snow
                e.ForeColor = Color.Brown
            Else
                Dim qty As Int32 = Convert.ToInt32(e.RowView("Quantity").ToString())
                If qty > 100
                    e.ForeColor = Color.Navy
                End If
            End If
            </code>
            </example>
        </member>
        <member name="E:Stone.WinUI.AsGridView.DrawHeader">
            <summary>
            Occur when need to owner draw column header.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.DrawHeaderTop">
            <summary>
            Occur when need to owner draw column top header.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.DrawFooter">
            <summary>
            Occur when need to owner draw column footer.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridView.BeforeDeleteRow">
            <summary>
            Occur when try to delete row.
            </summary>
            <example>Check condition of current row before delete, If field 'Quantity' value > 100 then ignore delete action.
            <code lang="cs">
            if (Convert.ToDouble(e.RowView["Quantity"]) > 100)
                e.Cancel = true;
            </code>
            <code lang="vb">
            If (Convert.ToDouble(e.RowView("Quantity")) > 100) Then
                e.Cancel = True
            End If
            </code>
            </example>
        </member>
        <member name="E:Stone.WinUI.AsGridView.AfterDeleteRow">
            <summary>
            Occur after deleted row.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ContextRenderMode">
            <summary>
            Get right format of context render mode.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.RowActivateSingleClick">
            <summary>
            Gets or sets a value indicating whether to raise event <see cref="E:Stone.WinUI.AsGridView.RowActivate"/> when single click instead.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ActiveColumnIndicator">
            <summary>
            Get or set the wheather to draw active column header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ActiveRowIndicator">
            <summary>
            Get or set the wheather to draw line number at row active.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.CellPadding">
            <summary>
            Get or set the space inside cell left and right, default = 1.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ContextMenuStripHeaderNoneColumn">
            <summary>
            Get or set the ContextMenuStrip at header but none column area.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ColumnSelectedIndex">
            <summary>
            Get or set column selected index, use zero base.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.SelectedIndex">
            <summary>
            Get or set current selected index(zero base).
            <para>When changed this value manual you must call method <see cref="M:Stone.WinUI.AsGridView.EnsureVisible"/> 
            to make sure new index is visible.</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.VScrollBarRight">
            <summary>
            Get vertical scroll bar.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.HScrollBarBottom">
            <summary>
            Get horizontal scroll bar.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.Selectable">
            <summary>
            Get or set the control can retrive focus.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.Scrollable">
            <summary>
            Gets or sets a value indicating whether scrollbar will display when more than item to show in fit area.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.StartRowNumber">
            <summary>
            Gets or sets the custom start row number.
            <para>Example: If set StartRowNumber = 20, first row show number 21.</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.BaseColor">
            <summary>
            Back color of row-header, column-header and footer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.AlternateRowColor">
            <summary>
            Alternating row back color, if not use set to <see cref="P:System.Drawing.Color.Transparent"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.BorderColor">
            <summary>
            Get or set color of border around the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.BorderStyle">
            <summary>
            Get or set the border around of the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.HotTrackingColor">
            <summary>
            Get or set color of hot tracking column and row.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.HotItemTracking">
            <summary>
            Get or set the wheather to show hot tracking item or not.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.HotColumnTracking">
            <summary>
            Get or set the wheather to show hot tracking column or not.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ShowFocusRect">
            <summary>
            Show focus rectangle on row selected.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.AllowColumnSearch">
            <summary>
            Get or set the wheather indicators to allow user search data in grid.
            This property dependency with <see cref="P:Stone.WinUI.AsGridView.ShowColumnMenuStrip"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.AllowColumnFilter">
            <summary>
            Get or set the wheather indicators to allow user filter data.
            This property dependency with <see cref="P:Stone.WinUI.AsGridView.ShowColumnMenuStrip"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.AllowColumnFrozen">
            <summary>
            Gets or sets a value indicating to allow user set column frozen.
            This property dependency with <see cref="P:Stone.WinUI.AsGridView.ShowColumnMenuStrip"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.AllowDelete">
            <summary>
            Get or set the wheather indicator to allow delete row in the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.AllowGotoLine">
            <summary>
            Gets or sets a value indicating whether to allow user go to line by short-cut(Ctrl+G).
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ShowColumnMenuStrip">
            <summary>
            Show or hide menu strip at top of column.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.IsAlreadyRowGroup">
            <summary>
            Get the control occur row group event.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.RowGroupType">
            <summary>
            Get or set the grouping row when sorting column.
            <para>This option work under <see cref="P:Stone.WinUI.AsGridView.AllowSort"/> = true.</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.AllowColumnResize">
            <summary>
            Allow columns to be resized
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.AllowColumnChooser">
            <summary>
            Gets or sets a value indicating whether to allow column chooser, 
            default is false.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.AllowColumnReOrder">
            <summary>
            Allow the user re-order column by moving column header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ShowHeader">
            <summary>
            Get or set all column header to be visible or not.
            </summary>
            <exception cref="T:System.NotSupportedException">When hide header but frozen column.</exception>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ShowHeaderTop">
            <summary>
            Gets or sets a value indicating whether to show top header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ShowFooter">
            <summary>
            Show or hide the column footer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ColumnsTop">
            <summary>
            Get the collection of <see cref="T:Stone.WinUI.AsGridColumnTop"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.Columns">
            <summary>
            Get the collection of <see cref="T:Stone.WinUI.AsGridViewColumn"/>.
            </summary>
            <example>
            <code lang="cs">
            // get column from field name.
            AsGridViewColumn colCustName = this.Columns["fldCustName"];
            colCustName.BackColor = Color.Brown
            </code>
            <code lang="vb">
            Dim colCustName As AsGridViewColumn = Me.Columns("fldCustName")
            colCustName.BackColor = Color.Brown
            </code>
            </example>
        </member>
        <member name="P:Stone.WinUI.AsGridView.SelectionBackColor">
            <summary>
            Get or set background color of item selected. Default is 250,230,165
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.UseTextForAccessibility">
            <summary>
            [Beta] Get or Set to use text for access row data when user press char.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.RowGroupForeColor">
            <summary>
            Get or set fore color of row-group.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.FrozenLineColor">
            <summary>
            Get or set vertical line color after Frozen column.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.FrozenColumn">
            <summary>
            Get or set the column index to frozen, 1st column = 1
            </summary>
            <exception cref="T:System.NotSupportedException">When <see cref="P:Stone.WinUI.AsGridView.ShowHeader"/> is false.</exception>
        </member>
        <member name="P:Stone.WinUI.AsGridView.FullColumnSelect">
            <summary>
            Get or set the wheather to highlight full column select like <see cref="P:Stone.WinUI.AsGridView.FullRowSelect"/> 
            but set to false no fill color.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.FullRowSelect">
            <summary>
            Get or set the wheather to highlight full row selected.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.DefaultSize">
            <summary>
            Default size Width, Height.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.GridLineStyle">
            <summary>
            Get or set the grid line styles.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.GridType">
            <summary>
            Get or set how to display grid at always or not.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.GridLine">
            <summary>
            Gets or sets the grid line.
            </summary>
            <value>The grid line.</value>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ShowRowHeader">
            <summary>
            Show or hide row header at left bar.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ShowRowNumber">
            <summary>
            Show or hide row number on header row at left bar.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ShowToolTipVScroll">
            <summary>
            Gets or sets a value indicating whether to show tooltip at vertical scroll.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.HeaderRowWidth">
            <summary>
            Get or set row header width for line number.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.AutoLayout">
            <summary>
            Get or set auto size(column width, row height) after control resize and font changed, default = true.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.AutoColumnsName">
            <summary>
            Get or set the AutoColumnName.
            If true column will be auto create from collection 
            of <see cref="P:System.Data.DataTable.Columns"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.AutoColumnsWidth">
            <summary>
            Get or set the width of column will be fit to text on each column.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.GridColor">
            <summary>
            Get or set color of <see cref="P:Stone.WinUI.AsGridView.GridLine"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ItemHeight">
            <summary>
            Get or set the row height.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.FooterHeight">
            <summary>
            Get or set height of column footer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.RowBackColor">
            <summary>
            Back color of row item.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.HeaderHeight">
            <summary>
            Get or set the column header height.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.HeaderTopHeight">
            <summary>
            Get or set the column header top height.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.HideSelection">
            <summary>
            Get or set the control to show or hide row/column selection when lost focus.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.HotColumnIndex">
            <summary>
            Get or set the currently focused column.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.HotItemIndex">
            <summary>
            Get or set the currently focused item index.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.RowFilter">
            <summary>
            Get or set the conditon string to filter which rows are viewed. 
            <para>Example below:
            	<para>Date/Time : DueDate = #12/31/2008#, RegisterDate = #12/31/2008 21:30:55#</para>
            	<para>String : City = 'Bangkok', City Like '%kok%', City In('Bangkok', 'Newyork')</para>
            	<para>Number : Amount >= 250</para>
            	<para>Aggregate: Sum(Child.Price) > 500 ,Select orders which total price (sum of items prices) is greater or equal $500</para>
            	<para>Function: Convert, Len, IsNull, IIF, Trim, SubString</para>
            </para>
            </summary>
            <example>
            <code lang="vb">
            'DateTime
            DueDate = #12/31/2008#
            RegisterDate = #12/31/2008 21:30:55#
            
            'string
            City = 'Bangkok'
            City Like '%kok%'
            City In('Bangkok', 'Newyork')
            
            'Number
            Amount >= 250
            
            'Aggregte, Select orders which total price (sum of items prices) is greater or equal $500
            Sum(Child.Price) > 500
            
            'Function
            Convert, Len, IsNull, IIF, Trim, SubString
            </code>
            </example>
        </member>
        <member name="P:Stone.WinUI.AsGridView.AllowSort">
            <summary>
            Allow column sorting.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.DataSource">
            <summary>
            Get or set datasource to binding the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.Count">
            <summary>
            Number of items/rows in the list control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.TotalRowHeight">
            <summary>
            Calculates total height of all rows combined.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.VisibleRowsCount">
            <summary>
            Number of rows currently visible in inner rect.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.HeaderRect">
            <summary>
            Get area of all column header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.FooterRect">
            <summary>
            Get the rectangle of footer area.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.MenuFont">
            <summary>
            Gets the menu font.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.LeftTopRect">
            <summary>
            Get rectangle area of corner left-top.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.LeftBottomRect">
            <summary>
            Get rectangle area of corner left-bottom.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.RowsClientRect">
            <summary>
            The rectangle of the client inside parent control (Items Only).
            </summary>
            <remarks>fixed row header</remarks>
        </member>
        <member name="P:Stone.WinUI.AsGridView.RowsRect">
            <summary>
            Full size of all <see cref="P:Stone.WinUI.AsGridView.VisibleRowsCount"/>.
            <para>Width=All columns width, Height=VisibleRowsCount * ItemHeight</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.RowsRectFrozen">
            <summary>
            Get area of frozen include header and footer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.ViewMode">
            <summary>
            Get or set flag to know control is editing or view.
            This is not meaning for this control, but for <see cref="T:Stone.WinUI.AsGridData"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.RowsRectUnFrozen">
            <summary>
            Get area of un-frozen.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.SelectedRow">
            <summary>
            Get the <see cref="T:System.Data.DataRowView"/> from current <see cref="P:Stone.WinUI.AsGridView.SelectedIndex"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.SelectedRows">
            <summary>
            Get all rows selected by tick at <see cref="F:Stone.WinUI.ColumnFormats.CheckBox"/> column.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.RowsInnerClientRect">
            <summary>
            The inner rectangle of the client 
            inside parent control taking scroll bars into account.
            X = Row header width.                                
            * WIDTH NOT include vScrollBar.Width; 
            * HEIGHT NOT include hPanelScrollBar.Height.
            </summary>
            <remarks>fixed row header</remarks>
        </member>
        <member name="P:Stone.WinUI.AsGridView.Renderer">
            <summary>
            Gets or sets the customs renderer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridView.FontBold">
            <summary>
            Get the cache font bold.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Helper.DrawHelper">
            <summary>
            Helper for drawing aero glass.
            </summary>
            <summary>
            Helper to drawing.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.CreateRoundRectangle(System.Drawing.Rectangle,System.Int32,System.Int32,Stone.WinUI.Corners)">
            <summary>
            Creates the round rectangle(no need to resize before).
            </summary>
            <param name="rect">The rect.</param>
            <param name="radius">The radius.</param>
            <param name="borderWidth">Width of the border.</param>
            <param name="corner">The corner.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.setCurveWidth(System.Int32,Stone.WinUI.Corners,Stone.WinUI.Corners)">
            <summary>
            Sets the width of the curve.
            </summary>
            <param name="curve">The curve.</param>
            <param name="corner">The corner.</param>
            <param name="cornerCompare">The corner compare.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.CreateRoundRectangle(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Create 4-corner rounded from the specified 
            <see cref="T:System.Drawing.Rectangle"/> and radius.
            </summary>
            <param name="rect">Base rectangle</param>
            <param name="radius">Radius of the corners</param>
            <returns>Rounded rect as a GraphicsPath</returns>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.CreateRoundRectangle(System.Drawing.Rectangle,System.Int32,Stone.WinUI.Directions)">
            <summary>
            Creates the round rectangle from specfic radius and directions with default border width = 1.
            </summary>
            <param name="rect">The rect.</param>
            <param name="radius">The radius.</param>
            <param name="direction">The direction.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.CreateRoundRectangle(System.Drawing.Rectangle,System.Int32,System.Boolean)">
            <summary>
            Create button round
            </summary>
            <param name="rect"></param>
            <param name="radius"></param>
            <param name="topOnly"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawRoundRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Single,System.Drawing.Drawing2D.DashStyle,Stone.WinUI.Directions)">
            <summary>
            Draws the round rectangle.
            </summary>
            <param name="g">Graphics object</param>
            <param name="rect">The area</param>
            <param name="borderColor">Color of the border.</param>
            <param name="radius">The radius.</param>
            <param name="width">Border width.</param>
            <param name="dash">Dash style</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawRoundRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Single,System.Drawing.Drawing2D.DashStyle,Stone.WinUI.Corners)">
            <summary>
            Draws the round rectangle(no need to resize before).
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="borderColor">Color of the border.</param>
            <param name="radius">The radius.</param>
            <param name="width">The width.</param>
            <param name="dash">The dash.</param>
            <param name="corner">The corner.</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawRoundRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Int32,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Draw round border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="borderColor">Color of the border.</param>
            <param name="radiusTop">The radius top.</param>
            <param name="radiusBottom">The radius bottom.</param>
            <param name="width">Border width.</param>
            <param name="dash">Border dash style.</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.FillRoundRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32)">
            <summary>
            Fill aero round.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="baseColor"></param>
            <param name="radius"></param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.FillRoundRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,Stone.WinUI.MouseStates,System.Double,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Fill aero round.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="baseColor"></param>
            <param name="state"></param>
            <param name="topHeight"></param>
            <param name="radiusTop"></param>
            <param name="radiusBottom"></param>
            <param name="glowBottom">When mouse states is hover</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.Highlight2007(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,Stone.WinUI.Corners,System.Drawing.Color)">
            <summary>
            Fill and border with Office2007 style.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="radius"></param>
            <param name="corner"></param>
            <param name="color"></param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.FillRoundRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,Stone.WinUI.MouseStates,System.Double,System.Int32,Stone.WinUI.Directions,System.Boolean)">
            <summary>
            Fill aero round.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="baseColor"></param>
            <param name="state"></param>
            <param name="topHeight"></param>
            <param name="radius"></param>
            <param name="direction"></param>
            <param name="glowBottom"></param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.GetRectColors(System.Drawing.Color,Stone.WinUI.MouseStates,System.Drawing.Rectangle,System.Double,System.Drawing.Rectangle@,System.Drawing.Rectangle@,System.Drawing.Color@,System.Drawing.Color@,System.Drawing.Color@,System.Drawing.Color@)">
            <summary>
            Get rectangle area and color to draw.
            </summary>
            <param name="baseColor"></param>
            <param name="state"></param>
            <param name="rect"></param>
            <param name="topHeight"></param>
            <param name="rTop"></param>
            <param name="rBottom"></param>
            <param name="colorDark"></param>
            <param name="colorLight"></param>
            <param name="colorGlowTop"></param>
            <param name="colorGlowBottom"></param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.FillRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,Stone.WinUI.MouseStates,System.Double,System.Boolean)">
            <summary>
            Fill aero glass
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="baseColor"></param>
            <param name="state"></param>
            <param name="topHeight">Half top area to fill, default=0.45d</param>
            <param name="transparentFromAlpha">Get alpha from baseColor to make transparent.</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.FillRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,Stone.WinUI.MouseStates)">
            <summary>
            Fill aero glass general example button.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="baseColor"></param>
            <param name="state"></param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.FillSolid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Fill solid in the specific area.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.FillStyle2003(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Fill style office 2003.
            </summary>
            <param name="g">Device Context</param>
            <param name="rect">The rect.</param>
            <param name="colorBegin">The color begin.</param>
            <param name="colorEnd">The color end.</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.FillStyle2007(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Fills style office 2007.
            </summary>
            <param name="g">Device Context</param>
            <param name="rect">The rect.</param>
            <param name="colorBegin">The color begin.</param>
            <param name="colorEnd">The color end.</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.HighlightWord(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.String,System.Drawing.Color,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>
            Highlights the word.
            </summary>
            <param name="g">Device context</param>
            <param name="bounds">Area to draw text</param>
            <param name="longText">The sentence.</param>
            <param name="highlightWord">Word to highlight.</param>
            <param name="highlightColor">Color of the highlight word.</param>
            <param name="font">Font of the sentence.</param>
            <param name="sf">Format of the sentence.</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draws the border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="borderColor">Color of the border.</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Single)">
            <summary>
            Draws the border with specific border width.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="borderColor">Color of the border.</param>
            <param name="borderWidth">Width of the border.</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawBorderStyle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.BorderStyle,System.Drawing.Color)">
            <summary>
            Draw standard border-style.
            </summary>
            <param name="g"></param>
            <param name="rectClient"></param>
            <param name="borderStyle"></param>
            <param name="borderColor">Custom border color</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawBorderFlat(System.IntPtr,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Draw Border Focused and None focused
            </summary>
            <param name="handle"></param>
            <param name="bounds"></param>
            <param name="focused"></param>
            <param name="borderActive"></param>
            <param name="borderInactive"></param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawGrip(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.GripStyles,System.Drawing.Color,System.Boolean)">
            <summary>
            Draws the grip.
            </summary>
            <param name="g">Graphics object</param>
            <param name="rect">Client Rectangle</param>
            <param name="gripRect">Grip Rectangle</param>
            <param name="backColor">Back color of the control</param>
            <param name="style">Grip style</param>
            <param name="vertical">if set to <c>true</c> [vertical].</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawGripDotTwice(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
            <summary>
            Draw dot 2 level.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="gripRect">The grip rect.</param>
            <param name="backColor">Color of the back.</param>
            <param name="vertical">if set to <c>true</c> [vertical].</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawGripLineStretch(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
            <summary>
            Draw line stretch.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="gripRect">The grip rect.</param>
            <param name="backColor">Color of the back.</param>
            <param name="vertical">if set to <c>true</c> [vertical].</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawGripDotSunken(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
            <summary>
            Draw dot sunken
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="gripRect">The grip rect.</param>
            <param name="backColor">Color of the back.</param>
            <param name="vertical">if set to <c>true</c> [vertical].</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawGripSizeDot(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Draw three dot at bottom-right of grip.
            </summary>
            <param name="g"></param>
            <param name="gripRect"></param>
            <param name="backColor"></param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawGripLineSlash(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
            <summary>
            Draw line slash
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="gripRect">The grip rect.</param>
            <param name="backColor">Color of the back.</param>
            <param name="vertical">if set to <c>true</c> [vertical].</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawGripDotRaiseInner(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
            <summary>
            Draw 3D dot raise inner.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="gripRect">The grip rect.</param>
            <param name="backColor">Color of the back.</param>
            <param name="vertical">if set to <c>true</c> [vertical].</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawGripDashFlat(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
            <summary>
            Draw dash line flat.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="gripRect">The grip rect.</param>
            <param name="backColor">Color of the back.</param>
            <param name="vertical">if set to <c>true</c> [vertical].</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawGripChain(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
            <summary>
            Draw grip o-ring
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="gripRect">The grip rect.</param>
            <param name="backColor">Color of the back.</param>
            <param name="vertical">if set to <c>true</c> [vertical].</param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.DrawText(System.Drawing.Graphics,System.String,System.Drawing.SolidBrush,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.StringFormat,System.Boolean)">
            <summary>
            Draw text
            </summary>
            <param name="g"></param>
            <param name="s"></param>
            <param name="brush"></param>
            <param name="font"></param>
            <param name="rect"></param>
            <param name="sf"></param>
            <param name="enable"></param>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.IsBoundsNotZero(System.Drawing.Rectangle)">
            <summary>
            Determines whether the specified <see cref="T:System.Drawing.Rectangle"/> width and height not zero.
            </summary>
            <param name="bounds">The bounds.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.CreateArrow(System.Drawing.Rectangle,Stone.WinUI.Directions)">
            <summary>
            Create triangle arrow from specific area and direction.
            </summary>
            <param name="rectArrow">The rect arrow.</param>
            <param name="direction">The direction.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.DrawHelper.CreateArrow(System.Int32,System.Int32,System.Int32,System.Int32,Stone.WinUI.Directions)">
            <summary>
            Create triangle arrow from specific direction.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="w">default = 7</param>
            <param name="h">default = 3</param>
            <param name="direction"></param>
            <returns>Array of <see cref="T:System.Drawing.Point"/></returns>
        </member>
        <member name="T:Stone.WinUI.AsBaseUserControl">
            <summary>
            Base class for all user control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseUserControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsBaseUserControl"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseUserControl.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Occur after <see cref="P:Stone.WinUI.AsBaseControl.RendererType"/> changed.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Stone.WinUI.AsBaseUserControl.RendererType">
            <summary>
            Get or set theme of the control.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsBaseUserControl.RendererTypeChanged">
            <summary>
            Occurs when <see cref="P:Stone.WinUI.AsBaseUserControl.RendererType"/> changed.
            </summary>
        </member>
        <member name="T:Stone.WinUI.RendererGridOffice2003">
            <summary>
            Renderer grid office 2003.
            </summary>
        </member>
        <member name="T:Stone.WinUI.IRendererGrid">
            <summary>
            Interface grid renderer
            </summary>
        </member>
        <member name="M:Stone.WinUI.IRendererGrid.FillRowHeaders(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill row header and left side exclude left-top header.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrid.FillRowHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Boolean)">
            <summary>
            Fill background at rowheader.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="penBorder"></param>
            <param name="selected"></param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrid.DrawColumnMenuStripButton(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.ColumnStates)">
            <summary>
            Draws the column ContextMenuStrip button.
            </summary>
            <param name="g">The g.</param>
            <param name="colHeaderBackColor">Color of the column header back.</param>
            <param name="triangle">Point array of arrow down</param>
            <param name="rectCol">Column header bounds</param>
            <param name="rectContext">Context button bounds</param>
            <param name="state">Column state</param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrid.FillLeftTopHeader(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill corner left-top at header.
            </summary>
            <param name="g"></param>
            <param name="rectLeftTop"></param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrid.FillColumnHeader(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.AsGridViewColumn,System.Boolean)">
            <summary>
            Fill theme background column header.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="col"></param>
            <param name="selected"></param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrid.FillColumnTopHeader(System.Drawing.Graphics,Stone.WinUI.AsGridColumnTop)">
            <summary>
            Fill background top header.
            </summary>
            <param name="g"></param>
            <param name="top"></param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrid.FillNoneColumnHeader(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill none column header.
            </summary>
            <param name="g"></param>
            <param name="rectFill"></param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrid.HighlightRowSelected(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Highlight row selected.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="focused"></param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrid.FillLeftBottomFooter(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw left-bottom corner at footer.
            </summary>
            <param name="g"></param>
            <param name="rectLeftBottom"></param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrid.FillColumnFooter(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.AsGridViewColumn)">
            <summary>
            Fills the column footer.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="col">The col.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrid.FillNoneColumnFooter(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill none column footer.
            </summary>
            <param name="g"></param>
            <param name="rectFill"></param>
        </member>
        <member name="P:Stone.WinUI.IRendererGrid.Grid">
            <summary>
            Get the parent grid.
            </summary>
        </member>
        <member name="P:Stone.WinUI.IRendererGrid.AutoBaseColor">
            <summary>
            Gets the auto color from base color.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2003.#ctor(Stone.WinUI.AsGridView)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererGridOffice2003"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2003.DrawColumnMenuStripButton(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.ColumnStates)">
            <summary>
            Draws the column ContextMenuStrip button.
            </summary>
            <param name="g">The g.</param>
            <param name="colHeaderBackColor">Color of the column header back.</param>
            <param name="triangle">Point array of arrow down</param>
            <param name="rectCol">Column header bounds</param>
            <param name="rectContext">Context button bounds</param>
            <param name="state">Column state</param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2003.FillRowHeaders(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill row header and left side exclude left-top header.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2003.FillRowHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Boolean)">
            <summary>
            Fill background at rowheader.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="penBorder"></param>
            <param name="selected"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2003.FillLeftTopHeader(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill corner left-top at header.
            </summary>
            <param name="g"></param>
            <param name="rectLeftTop"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2003.FillColumnTopHeader(System.Drawing.Graphics,Stone.WinUI.AsGridColumnTop)">
            <summary>
            Fill background top header.
            </summary>
            <param name="g"></param>
            <param name="top"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2003.FillColumnHeader(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.AsGridViewColumn,System.Boolean)">
            <summary>
            Fill column header
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="col"></param>
            <param name="selected"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2003.FillNoneColumnHeader(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill none column header.
            </summary>
            <param name="g"></param>
            <param name="rectFill"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2003.HighlightRowSelected(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Highlight row selected.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="focused"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2003.FillLeftBottomFooter(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw left-bottom corner at footer.
            </summary>
            <param name="g"></param>
            <param name="rectLeftBottom"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2003.FillColumnFooter(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.AsGridViewColumn)">
            <summary>
            Fill column footer.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="col"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2003.FillNoneColumnFooter(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill none column footer.
            </summary>
            <param name="g"></param>
            <param name="rectFill"></param>
        </member>
        <member name="P:Stone.WinUI.RendererGridOffice2003.Grid">
            <summary>
            Get the parent grid.
            </summary>
            <value></value>
        </member>
        <member name="P:Stone.WinUI.RendererGridOffice2003.AutoBaseColor">
            <summary>
            Gets the auto color from base color.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridHitTestInfo">
            <summary>
            Provide information for mouse activities.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridHitTestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridHitTestInfo"/> class.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridHitTestInfo.CellText">
            <summary>
            Gets the current cell text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridHitTestInfo.Region">
            <summary>
            Get the main section of control that mouse co-ordinates contained.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridHitTestInfo.RowIndex">
            <summary>
            Get the index of item that mouse hover it.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridHitTestInfo.ColumnIndex">
            <summary>
            Get the index of column that mouse co-ordinates contained.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridHitTestInfo.State">
            <summary>
            Get the state of control currently doing.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridHitTestInfo.Location">
            <summary>
            Get the co-orinates <see cref="T:System.Drawing.Point"/> in cell.
            </summary>
        </member>
        <member name="T:Stone.WinUI.RendererScrollbarOfficeXP">
            <summary>
            Renderer Scrollbar OfficeXP Style.
            </summary>
        </member>
        <member name="T:Stone.WinUI.IRendererScrollBar">
            <summary>
            Interface renderer for scroll bar.
            </summary>
        </member>
        <member name="M:Stone.WinUI.IRendererScrollBar.DrawArrowButton(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarArrowStates,System.Boolean)">
            <summary>
            Draws an arrow button.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:Stone.WinUI.ScrollBarArrowStates"/> of the arrow button.</param>
            <param name="arrowUp">true for an up arrow, false otherwise.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererScrollBar.DrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererScrollBar.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws border around the scrollbar.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererScrollBar.DrawThumb(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarStates)">
            <summary>
            Draws the thumb and grip.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:Stone.WinUI.ScrollBarStates"/> of the thumb.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererScrollBar.DrawTrack(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarStates)">
            <summary>
            Draws the channel ( or track ).
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The scrollbar state.</param>
        </member>
        <member name="P:Stone.WinUI.IRendererScrollBar.ScrollBar">
            <summary>
            Gets the scroll bar.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarOfficeXP.#ctor(Stone.WinUI.AsScrollBarBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererScrollbarOfficeXP"/> class.
            </summary>
            <param name="scrollbar">The scrollbar.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarOfficeXP.DrawArrowButton(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarArrowStates,System.Boolean)">
            <summary>
            Draws an arrow button.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:Stone.WinUI.ScrollBarArrowStates"/> of the arrow button.</param>
            <param name="arrowUp">true for an up arrow, false otherwise.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarOfficeXP.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws border around the scrollbar.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarOfficeXP.DrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarOfficeXP.DrawThumb(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarStates)">
            <summary>
            Draws the thumb.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:Stone.WinUI.ScrollBarStates"/> of the thumb.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarOfficeXP.DrawTrack(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarStates)">
            <summary>
            Draws the channel ( or track ).
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The scrollbar state.</param>
        </member>
        <member name="P:Stone.WinUI.RendererScrollbarOfficeXP.ScrollBar">
            <summary>
            Gets the scroll bar.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsToolTipControl">
            <summary>
            Represent as popup tooltip.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolTipControl.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsToolTipControl"/> class.
            </summary>
            <param name="devMode">Development mode</param>
        </member>
        <member name="M:Stone.WinUI.AsToolTipControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsToolTipControl"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolTipControl.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ToolStripDropDown"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="F:Stone.WinUI.AsToolTipControl.font">
            <summary>
            Use <c>SystemFonts.DefaultFont</c>
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolTipControl.OnHyperLinkClick(Stone.WinUI.Markup.HyperLinkEventArgs)">
            <summary>
            Raises the <see cref="E:HyperLinkClick"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.Markup.HyperLinkEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolTipControl.markup_HyperLinkClick(System.Object,Stone.WinUI.Markup.HyperLinkEventArgs)">
            <summary>
            รองรับทั้ง BodyText, FooterText
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsToolTipControl.panel_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            Close when mouse enter at run-time only.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolTipControl.panel_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            Close when mouse leave.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsToolTipControl.panel_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Close when mouse down.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsToolTipControl.panel_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw supertooltip
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsToolTipControl.MeasureSizeBeforeOpen">
            <summary>
            Measures the size before open.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolTipControl.OnClosed(System.Windows.Forms.ToolStripDropDownClosedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsToolTipControl.OnOpening(System.ComponentModel.CancelEventArgs)">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.AsToolTipControl.ToolTipInfo">
            <summary>
            Gets or sets the tool tip info.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTipControl.HasLinks">
            <summary>
            Gets a value indicating whether this instance has links region.
            </summary>
            <value><c>true</c> if this instance has links; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Stone.WinUI.AsToolTipControl.CreateParams">
            <summary>
            Gets parameters of a new window.
            </summary>
            <value></value>
            <returns>
            An object of type <see cref="T:System.Windows.Forms.CreateParams"/> used when creating a new window.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsToolTipControl.IsMouseHover">
            <summary>
            Gets a value indicating currently mouse is hovering the instant.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsToolTipControl.HyperLinkClick">
            <summary>
            Occurs when link click.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsRadioButton">
            <summary>
            Represent as radio button control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsRadioButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsRadioButton"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsRadioButton.OnEnabledChanged(System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsRadioButton.OnGotFocus(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Stone.WinUI.AsRadioButton.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsRadioButton.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsRadioButton.OnLostFocus(System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsRadioButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            On Mouse Down
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsRadioButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsRadioButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsRadioButton.OnMouseLeave(System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsRadioButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.AsRadioButton.ButtonDrawState">
            <summary>
            The wheather button state.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRadioButton.FlatStyle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.AsRadioButton.Checked">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.AsRadioButton.Image">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.AsRadioButton.ImageAlign">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.AsRadioButton.ImageTransparentColor">
            <summary>
            Get or set the transparent color on the button's image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRadioButton.RendererType">
            <summary>
            Get or set button themes.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsButtonMini">
            <summary>
            Mini popup button size is 15x15.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsButtonMini.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsButtonMini"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsButtonMini.MakeRegionButton(System.Boolean)">
            <summary>
            Makes the region button.
            </summary>
            <param name="circle">if set to <c>true</c> [circle].</param>
        </member>
        <member name="M:Stone.WinUI.AsButtonMini.DrawButton(System.Drawing.Graphics)">
            <summary>
            Draw Border around button.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Stone.WinUI.AsButtonMini.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnMouse Down, Pressing.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButtonMini.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnMouse Up, After press the button.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButtonMini.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)"/> event.
            </summary>
            <param name="mevent">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsButtonMini.OnMouseLeave(System.EventArgs)">
            <summary>
            OnMouse Leave out side from button.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButtonMini.OnEnabledChanged(System.EventArgs)">
            <summary>
            On enable changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButtonMini.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raised event on paint.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Stone.WinUI.AsButtonMini.ButtonState">
            <summary>
            Gets or sets the state of the button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButtonMini.CircleButton">
            <summary>
            Gets or sets a value indicating whether circle button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButtonMini.ForcePress">
            <summary>
            Gets or sets a value indicating whether show button pressed state until define by manual.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButtonMini.ImageTransparent">
            <summary>
            Get or set background image transparent.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButtonMini.RendererType">
            <summary>
            Type of render mode.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButtonMini.DefaultSize">
            <summary>
            Set default size to 15x15
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridSearchClickEventArgs">
            <summary>
            EventArgs for search box click.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridSearchClickEventArgs.#ctor(System.Data.DataRowView)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridSearchClickEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridSearchClickEventArgs.RowView">
            <summary>
            Gets the row view.
            </summary>
            <value>The row view.</value>
        </member>
        <member name="P:Stone.WinUI.AsGridSearchClickEventArgs.ColumnIndex">
            <summary>
            Get index of column clicked, zero base.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridSearchClickEventArgs.RowIndex">
            <summary>
            Get index of row clicked, zero base.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridSearchClickEventArgs.Field">
            <summary>
            Get field name of column clicked.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridSearchClickEventArgs.Text">
            <summary>
            Get current text of the edit box.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridSearchClickEventArgs.Cancel">
            <summary>
            Get or set flag to know accept(false) or ignore data(true).
            </summary>
        </member>
        <member name="T:Stone.WinUI.Forms.InputBox">
            <summary>
            Represent InputBox for data type string, number and datetime.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Forms.BaseFixedForm">
            <summary>
            Base form for tool and combo.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Forms.RootForm">
            <summary>
            Root of all form.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.RootForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.RootForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.RootForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.RootForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Forms.RootForm"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.RootForm.PullPropertyFromList(Stone.WinUI.Forms.RootForm)">
            <summary>
            Pull properties from caller to this form via list of <see cref="P:Stone.WinUI.Forms.RootForm.PropertyList"/>.
            </summary>
            <param name="rootForm">The root form.</param>
            <exception cref="T:System.ArgumentNullException">When rootForm or <c>PropertyList</c> is null</exception>
            <exception cref="T:System.MissingMemberException">When cannot find property in list.</exception>
        </member>
        <member name="M:Stone.WinUI.Forms.RootForm.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:RendererTypeChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.RootForm.OnCreateControl">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.Forms.RootForm.Localize">
            <summary>
            Localizes resource of this instance.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.RootForm.ChangeComboBoxStyle(System.Windows.Forms.Control)">
            <summary>
            Called when combo box style changed.
            </summary>
            <param name="atControl">At control.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.RootForm.RootForm_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the RootForm control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.RootForm.GetNextControlFromTabOrder(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Get control of next tab order.
            </summary>
            <param name="startCtrl"></param>
            <param name="nextCtrl"></param>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.Forms.RootForm.PropertyList">
            <summary>
            Gets or sets the property list.
            </summary>
            <value>The property list.</value>
        </member>
        <member name="E:Stone.WinUI.Forms.RootForm.RendererTypeChanged">
            <summary>
            Occurs after <see cref="P:Stone.WinUI.Forms.RootForm.RendererType"/> has been changed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.RootForm.EnterAsTab">
            <summary>
            Gets or sets a value indicating whether to move between EditBox when press enter key.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.RootForm.FunctionKeySubmit">
            <summary>
            Get or set function key to submit form, default=F12.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.RootForm.RendererType">
            <summary>
            Gets or sets RendererType to all child controls.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.RootForm.ComboBoxStyle">
            <summary>
            Gets or sets all edit box to show as combox box style when true, default is false.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.BaseFixedForm.#ctor">
            <summary>
            Innitialized new instance form.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.BaseFixedForm.toolTip1">
            <summary>
            Provide tool tip for child control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.BaseFixedForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Windows process message.
            </summary>
            <param name="m"></param>
        </member>
        <member name="F:Stone.WinUI.Forms.BaseFixedForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.BaseFixedForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.BaseFixedForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.BaseFixedForm.FunctionKey">
            <summary>
            Get or set function key to work as open/close form, default=F4.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.BaseFixedForm.CloseOnLostFocus">
            <summary>
            Gets or sets a value indicating whether to close form when lost focus.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.BaseFixedForm.NcActivateCount">
            <summary>
            Get or set the NcActivateCount (int)
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.InputBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Forms.InputBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.InputBox.Localize">
            <summary>
            Localizes resource of this instance.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.InputBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.InputBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.InputBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.InputBox.Title">
            <summary>
            Get or set the title.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.InputBox.Value">
            <summary>
            Get value from edit box.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.InputBox.InputBoxType">
            <summary>
            Gets or sets the type of the data.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsCheckBox">
            <summary>
            Represent as CheckBox control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsCheckBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsCheckBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsCheckBox.OnEnabledChanged(System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsCheckBox.OnGotFocus(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Stone.WinUI.AsCheckBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsCheckBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsCheckBox.OnLostFocus(System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsCheckBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            On Mouse Down
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsCheckBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsCheckBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsCheckBox.OnMouseLeave(System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsCheckBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.AsCheckBox.ButtonDrawState">
            <summary>
            The wheather button state.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsCheckBox.FlatStyle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.AsCheckBox.Checked">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.AsCheckBox.Image">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.AsCheckBox.ImageAlign">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.AsCheckBox.ImageTransparentColor">
            <summary>
            Get or set the transparent color on the button's image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsCheckBox.RendererType">
            <summary>
            Get or set button themes.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Forms.AsNoteForm">
            <summary>
            Represent as Note form.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.AsNoteForm.#ctor(System.Windows.Forms.Form)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Forms.AsNoteForm"/> class.
            </summary>
            <param name="parentForm">The parent form.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.AsNoteForm.#ctor(System.Windows.Forms.Form,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Forms.AsNoteForm"/> class.
            </summary>
            <param name="parentForm">The parent form.</param>
            <param name="noteId">The note id.</param>
            <param name="noteRichtext">The note richtext.</param>
        </member>
        <member name="F:Stone.WinUI.Forms.AsNoteForm.pressedBtn">
            <summary>
            กดที่ปุ่มใด ๆ หรือไม่
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.AsNoteForm.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.Forms.AsNoteForm.OnClosed(System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.Forms.AsNoteForm.OnShown(System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.Forms.AsNoteForm.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.Forms.AsNoteForm.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.Forms.AsNoteForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.Forms.AsNoteForm.WndProc(System.Windows.Forms.Message@)">
            <inheritdoc />
        </member>
        <member name="E:Stone.WinUI.Forms.AsNoteForm.Delete">
            <summary>
            Occurs when press delete button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.AsNoteForm.NoteRichText">
            <summary>
            Gets or sets the note rich text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.AsNoteForm.NoteId">
            <summary>
            Gets or sets the note id.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Forms.AsNoteForm.ButtonArea">
            <summary>
            Button in note form
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.AsNoteForm.ButtonArea.#ctor(Stone.WinUI.Forms.AsNoteForm)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Forms.AsNoteForm.ButtonArea"/> class.
            </summary>
            <param name="frm">The FRM.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.AsNoteForm.ButtonArea.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Click"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.AsNoteForm.ButtonArea.HitTest(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Hits the test.
            </summary>
            <param name="me">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Forms.AsNoteForm.ButtonArea.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the button.
            </summary>
            <param name="g">The g.</param>
        </member>
        <member name="P:Stone.WinUI.Forms.AsNoteForm.ButtonArea.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.AsNoteForm.ButtonArea.BackColor">
            <summary>
            Gets or sets the color of the back.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.AsNoteForm.ButtonArea.Image">
            <summary>
            Gets or sets the image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.AsNoteForm.ButtonArea.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.AsNoteForm.ButtonArea.MouseState">
            <summary>
            Gets or sets the state of the mouse.
            </summary>
        </member>
        <member name="E:Stone.WinUI.Forms.AsNoteForm.ButtonArea.Click">
            <summary>
            Occurs when click.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsLookupDropdown">
            <summary>
            Form lookup
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsLookupDropdown.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLookupDropdown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.AsLookupDropdown.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLookupDropdown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsLookupDropdown"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLookupDropdown.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsLookupDropdown"/> class with specific maximum records.
            </summary>
            <param name="maxRecord">The max record.</param>
        </member>
        <member name="F:Stone.WinUI.AsLookupDropdown.m_MaxRecord">
            <summary>
            Maximum record when <see cref="P:Stone.WinUI.AsLookupDropdown.QuickSearch"/> = true.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLookupDropdown.ColumnClear">
            <summary>
            Remove all column from gridview.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLookupDropdown.ColumnAdd(Stone.WinUI.AsGridViewColumn)">
            <summary>
            Add column to gridview.
            </summary>
            <param name="col"></param>
        </member>
        <member name="M:Stone.WinUI.AsLookupDropdown.Localize">
            <summary>
            Localizes resource of this instance.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLookupDropdown.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:RendererTypeChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsLookupDropdown.AsLookupDropdown_Load(System.Object,System.EventArgs)">
            <summary>
            Form Load
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsLookupDropdown.AsLookupDropdown_Resize(System.Object,System.EventArgs)">
            <summary>
            Anchor text box.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Stone.WinUI.AsLookupDropdown.DataSource">
            <summary>
            Gets or sets the <see cref="T:System.Data.DataTable"/> to <see cref="T:Stone.WinUI.AsGridView"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupDropdown.SelectedRow">
            <summary>
            Get the selected <see cref="T:System.Data.DataRowView"/> from user.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupDropdown.BaseColor">
            <summary>
            Set the color of <see cref="P:Stone.WinUI.AsGridView.BaseColor"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupDropdown.QuickSearch">
            <summary>
            Gets or sets a value indicating whether [quick search].
            If true, ToolStrip for textbox will hide.
            </summary>
            <value><c>true</c> if [quick search]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Stone.WinUI.AsLookupDropdown.CreateParams">
            <summary>
            Gets the create params.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupDropdown.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            <value></value>
            <returns>True if the window will not be activated when it is shown; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsLookupDropdown.DisplayField">
            <summary>
            Set field name to display as description at 2nd column.
            <para>Patterns: FieldName|ColumnHeader</para>
            <para>Examples: NameMain|Description</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupDropdown.ItemHeight">
            <summary>
            Sets height of the gridview item.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupDropdown.DisplayMember">
            <summary>
            Get Description text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupDropdown.ValueField">
            <summary>
            Set field name to display as value at 1st column
            <para>Patterns: FieldName|ResMain|ResAlter</para>
            <para>Examples: Code|รหัส|Code</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupDropdown.ValueMember">
            <summary>
            Get or set Value text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupDropdown.SearchWord">
            <summary>
            Get or set user search word.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupDropdown.RowFilter">
            <summary>
            Get or set row filter string.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupDropdown.RowActivateSingleClick">
            <summary>
            Sets a value indicating whether to committed selected item with single click.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsColorListBox">
            <summary>
            Represent as Color ListBox.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsListBox">
            <summary>
            Provide a base list box control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsListBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListBox.OnFontChanged(System.EventArgs)">
            <summary>
            Raise event on font changed and adjust item height when <see cref="P:Stone.WinUI.AsListBox.AutoItemHeight"/>=true.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsListBox.OnLostFocus(System.EventArgs)">
            <summary>
            On lost focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsListBox.OnGotFocus(System.EventArgs)">
            <summary>
            On got focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsListBox.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.SystemColorsChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ListBox.DrawItem"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.DrawItemEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsListBox.FillItemEntry(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Draw entry item except text.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsListBox.DrawItemCustom(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Custom draw item before draw text.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.DrawItemEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsListBox.FillItemHighlight(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Highlight selected item.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
        </member>
        <member name="M:Stone.WinUI.AsListBox.DrawItemText(System.Drawing.Graphics,System.Int32,System.Drawing.Font,System.String,System.Drawing.Rectangle)">
            <summary>
            Draw only text.
            </summary>
            <param name="g">The g.</param>
            <param name="index">The index.</param>
            <param name="font">The font.</param>
            <param name="s">The s.</param>
            <param name="rectText">Bounds text.</param>
        </member>
        <member name="M:Stone.WinUI.AsListBox.SetDataSource(System.String,System.String,System.Object)">
            <summary>
            Set DataSource to the control. 
            </summary>
            <param name="displayMember"></param>
            <param name="valueMember"></param>
            <param name="dataSource"></param>
        </member>
        <member name="P:Stone.WinUI.AsListBox.AutoItemHeight">
            <summary>
            Get or set the height of item dependency with font height.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsListBox.DrawMode">
            <summary>
            Hide from user selection, the control always OwnerDrawFixed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsListBox.RendererType">
            <summary>
            Get or set theme of the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsListBox.SelectionBackColor">
            <summary>
            Gets or sets the color of the selection back.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsColorListBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorListBox.OnColorSelected(Stone.WinUI.AsColorSelectEventArgs)">
            <summary>
            Raises the <see cref="E:ColorSelected"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsColorSelectEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsColorListBox.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            After raises the <see cref="E:SelectedIndexChanged"/> event, pass throught to <see cref="E:ColorSelected"/>.
            </summary>
            <param name="e">Event object with the details</param>
        </member>
        <member name="M:Stone.WinUI.AsColorListBox.DrawItemCustom(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Draw color box before text.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.DrawItemEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsColorListBox.DrawItemText(System.Drawing.Graphics,System.Int32,System.Drawing.Font,System.String,System.Drawing.Rectangle)">
            <summary>
            Draw color name.
            </summary>
            <param name="g">The g.</param>
            <param name="index">The index.</param>
            <param name="font">The font.</param>
            <param name="s">The s.</param>
            <param name="rectText">Bounds text.</param>
        </member>
        <member name="P:Stone.WinUI.AsColorListBox.Items">
            <summary>
              Hides Items from Designer to prevent illegal input.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsColorListBox.LoadSystemColor">
            <summary>
            Get or set the wheather to load system or name color.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsColorListBox.ColorSelected">
            <summary>
            Occur after selected color changed.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsColorListBox.ColorHSBComparer">
            <summary>
            Color comparer.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorListBox.ColorHSBComparer.Compare(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Compare two color are equals.
            </summary>
            <param name="c1"></param>
            <param name="c2"></param>
            <returns></returns>
        </member>
        <member name="T:Stone.WinUI.AsColorListBox.KnownColorProvider">
            <summary>
            Provide known color list name.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorListBox.KnownColorProvider.#cctor">
            <summary>
            Initialized all color to list.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsColorListBox.KnownColorProvider.ListNameColor">
            <summary>
            List of name color.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsColorListBox.KnownColorProvider.ListSystemColor">
            <summary>
            List of system color.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorListBox.KnownColorProvider.GetNameColors">
            <summary>
            Get all color name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsColorListBox.KnownColorProvider.GetSystemColors">
            <summary>
            Get all system color name.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Stone.WinUI.ActivateForm">
            <summary>
            Install key form.
            </summary>
        </member>
        <member name="M:Stone.WinUI.ActivateForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.ActivateForm"/> class.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ActivateForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.ActivateForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.ActivateForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsFilePictDropdown">
            <summary>
            Form picture dropdown.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsFilePictDropdown.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsFilePictDropdown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.AsFilePictDropdown.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsFilePictDropdown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsFilePictDropdown"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsFilePictDropdown.AsFilePictDropdown_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the AsFilePictDropdown control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsFilePictDropdown.getFileSize(System.Double)">
            <summary>
            Gets the size of the file.
            </summary>
            <param name="byteCount">The byte count.</param>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.AsFilePictDropdown.ImageToView">
            <summary>
            Sets the image to view.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsFilePictDropdown.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsFilePictDropdown.FileSize">
            <summary>
            Gets or sets the size of the file.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Markup.StackItem">
            <summary>
            Represents the data added to the stack during parsing of the HTML.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Markup.StackItem.#ctor(System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Initialise a new instance of the <c>StackItem</c> class.
            </summary>
            <param name="font">the <c>Font</c> of the <see cref="T:Stone.WinUI.Markup.StackItem"/>.</param>
            <param name="foreColor">The <c>foreColor</c> of the <see cref="T:Stone.WinUI.Markup.StackItem"/>.</param>
        </member>
        <member name="M:Stone.WinUI.Markup.StackItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Stone.WinUI.Markup.StackItem.Clone">
            <summary>
            Creates an identical copy of the <see cref="T:Stone.WinUI.Markup.StackItem"/> except for the image <see cref="P:Stone.WinUI.Markup.StackItem.Source"/> field.
            </summary>
            <returns>A shallow copy of the <see cref="T:Stone.WinUI.Markup.StackItem"/> except for the Source.</returns>
            <remarks>
            The <see cref="P:Stone.WinUI.Markup.StackItem.Source"/> is never carried forward as the IMG tag can not contain any other tags.
            </remarks>
        </member>
        <member name="P:Stone.WinUI.Markup.StackItem.ForeColor">
            <summary>
            Gets or sets the <c>ForeColor</c> of the <see cref="T:Stone.WinUI.Markup.StackItem"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.StackItem.Id">
            <summary>
            Gets or sets the value of the <c>Id</c> attribute if the <see cref="T:Stone.WinUI.Markup.StackItem"/> represents a link.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.StackItem.Href">
            <summary>
            Gets or sets the href if the <see cref="T:Stone.WinUI.Markup.StackItem"/> represents a link.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.StackItem.IsImage">
            <summary>
            Gets a value indicating whether the <see cref="T:Stone.WinUI.Markup.StackItem"/> represents as image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.StackItem.IsLink">
            <summary>
            Gets a value indicating whether the <see cref="T:Stone.WinUI.Markup.StackItem"/> represents as link.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.StackItem.Font">
            <summary>
            Gets or sets the <c>Font</c> of the <see cref="T:Stone.WinUI.Markup.StackItem"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.StackItem.Source">
            <summary>
            Gets or sets the <c>Source</c> of the image represented by this <see cref="T:Stone.WinUI.Markup.StackItem"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.StackItem.Text">
            <summary>
            Gets or sets the <c>Text</c> of the <see cref="T:Stone.WinUI.Markup.StackItem"/>.
            </summary>
        </member>
        <member name="T:Stone.WinUI.SwitchStyle">
            <summary>
            Style for <see cref="P:Stone.WinUI.AsButton.ButtonType"/> = Switch.
            </summary>
        </member>
        <member name="M:Stone.WinUI.SwitchStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.SwitchStyle"/> class.
            </summary>
        </member>
        <member name="P:Stone.WinUI.SwitchStyle.UnCheckText">
            <summary>
            Gets or sets the text for un-checked status.
            </summary>
        </member>
        <member name="P:Stone.WinUI.SwitchStyle.CheckText">
            <summary>
            Gets or sets the text for checked status.
            </summary>
        </member>
        <member name="P:Stone.WinUI.SwitchStyle.UnCheckColor">
            <summary>
            Gets or sets the color for un-checked status.
            </summary>
        </member>
        <member name="P:Stone.WinUI.SwitchStyle.CheckColor">
            <summary>
            Gets or sets the color for checked status.
            </summary>
        </member>
        <member name="T:Stone.WinUI.IRendererUpDownButton">
            <summary>
            Interface to draw UpDownButton.
            </summary>
        </member>
        <member name="M:Stone.WinUI.IRendererUpDownButton.DrawButtonUp(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draws the button up.
            </summary>
            <param name="g">The g.</param>
            <param name="rectBtn">The rect BTN.</param>
            <param name="drawState">State of the draw.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererUpDownButton.DrawButtonDown(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draws the button down.
            </summary>
            <param name="g">Device context</param>
            <param name="rectBtn">The rect BTN.</param>
            <param name="drawState">State of the draw.</param>
        </member>
        <member name="P:Stone.WinUI.IRendererUpDownButton.UpDownButton">
            <summary>
            Gets up down button.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererUpDownButtonOffice2003.#ctor(Stone.WinUI.AsNumberBox.UpDownButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererUpDownButtonOffice2003"/> class.
            </summary>
            <param name="updown">The updown.</param>
        </member>
        <member name="M:Stone.WinUI.RendererUpDownButtonOffice2003.GetColorFromState(Stone.WinUI.ButtonDrawStates,System.Drawing.Color@,System.Drawing.Color@,System.Drawing.Color@,System.Drawing.Color@)">
            <summary>
            Gets the state of the color from.
            </summary>
            <param name="btnState">State of the BTN.</param>
            <param name="border">The border.</param>
            <param name="begin">The begin.</param>
            <param name="middle">The middle.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Stone.WinUI.RendererUpDownButtonOffice2003.DrawArrow(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates,Stone.WinUI.Directions)">
            <summary>
            Draws arrow on the button.
            </summary>
            <param name="g">Device context</param>
            <param name="rectButton">The rect button.</param>
            <param name="btnDrawState">State of the button.</param>
            <param name="arrowDirection">Arrow direction.</param>
        </member>
        <member name="M:Stone.WinUI.RendererUpDownButtonOffice2003.DrawButtonUp(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draws the button up.
            </summary>
            <param name="g">The g.</param>
            <param name="rectBtn">The rect BTN.</param>
            <param name="drawState">State of the draw.</param>
        </member>
        <member name="M:Stone.WinUI.RendererUpDownButtonOffice2003.DrawButtonDown(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draws the button down.
            </summary>
            <param name="g">Device context</param>
            <param name="rectBtn">The rect BTN.</param>
            <param name="drawState">State of the draw.</param>
        </member>
        <member name="P:Stone.WinUI.RendererUpDownButtonOffice2003.UpDownButton">
            <summary>
            Gets up down button.
            </summary>
            <value></value>
        </member>
        <member name="M:Stone.WinUI.RendererUpDownButtonAeroGlass.#ctor(Stone.WinUI.AsNumberBox.UpDownButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererUpDownButtonAeroGlass"/> class.
            </summary>
            <param name="updown">The updown.</param>
        </member>
        <member name="T:Stone.WinUI.RendererTabControlOffice2003">
            <summary>
            Renderer TabControl Office2003 style.
            </summary>
        </member>
        <member name="T:Stone.WinUI.IRendererTabControl">
            <summary>
            Interface for render TabControl.
            </summary>
        </member>
        <member name="M:Stone.WinUI.IRendererTabControl.DrawFocus(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Point[])">
            <summary>
            Draws the focus.
            </summary>
            <param name="g">The g.</param>
            <param name="tabRect">The tab rect.</param>
            <param name="tabPts">The tab PTS.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererTabControl.DrawTabHeader(System.Drawing.Graphics,System.Windows.Forms.TabPage,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Point[]@)">
            <summary>
            Draws the tab.
            </summary>
            <param name="g">Device Context</param>
            <param name="tabPage">The tab page.</param>
            <param name="index">The index.</param>
            <param name="headerRect">The header rect.</param>
            <param name="pageBodyRect">The page body rect.</param>
            <param name="selected">if set to <c>true</c> [selected].</param>
            <param name="hoted">if set to <c>true</c> [hoted].</param>
            <param name="foreColorIfDark">The fore color if dark.</param>
            <param name="ptsFocus">The point array to draw focus.</param>
            <returns>ForeColor</returns>
        </member>
        <member name="M:Stone.WinUI.IRendererTabControl.DrawTabHeaderText(System.Drawing.Graphics,System.String,System.Drawing.Color,System.Drawing.Rectangle,System.Boolean,System.Boolean)">
            <summary>
            Draws the tab header text.
            </summary>
            <param name="g">The g.</param>
            <param name="text">The text.</param>
            <param name="foreColor">Color of the fore.</param>
            <param name="textRect">The text rect.</param>
            <param name="selected">if set to <c>true</c> [selected].</param>
            <param name="showKeyboardCues">if set to <c>true</c> [show keyboard cues].</param>
        </member>
        <member name="M:Stone.WinUI.IRendererTabControl.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw border around control.
            </summary>
            <param name="g">The g.</param>
            <param name="clientRect">The client rect.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererTabControl.DrawFrameTabActive(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Single)">
            <summary>
            Draw frame active tab.
            </summary>
            <param name="g"></param>
            <param name="rb">BorderRectangle</param>
            <param name="rd">DisplayRectangle</param>
            <param name="angle"></param>
        </member>
        <member name="M:Stone.WinUI.IRendererTabControl.DrawBorderTabActive(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draw border around active tab.
            </summary>
            <param name="g">The g.</param>
            <param name="rb">BorderRectangle</param>
            <param name="rt">TabHeader Rectangle</param>
            <param name="index">Selected Index</param>
        </member>
        <member name="P:Stone.WinUI.IRendererTabControl.TabControl">
            <summary>
            Gets the tab control
            </summary>
            <value>The tab.</value>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOffice2003.#ctor(Stone.WinUI.AsTabControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererTabControlOffice2003"/> class.
            </summary>
            <param name="tabControl">The tab.</param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOffice2003.DrawFocus(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Point[])">
            <summary>
            Draws the focus.
            </summary>
            <param name="g">The g.</param>
            <param name="tabRect">The tab rect.</param>
            <param name="tabPts">The tab PTS.</param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOffice2003.DrawTabHeader(System.Drawing.Graphics,System.Windows.Forms.TabPage,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Point[]@)">
            <summary>
            Draws the tab.
            </summary>
            <param name="g">Device Context</param>
            <param name="tabPage">The tab page.</param>
            <param name="index">The index.</param>
            <param name="headerRect">The header rect.</param>
            <param name="pageBodyRect">The page body rect.</param>
            <param name="selected">if set to <c>true</c> [selected].</param>
            <param name="hoted">if set to <c>true</c> [hoted].</param>
            <param name="foreColorIfDark">The fore color if dark.</param>
            <param name="ptsFocus">The point array to draw focus.</param>
            <returns>ForeColor</returns>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOffice2003.DrawTabHeaderText(System.Drawing.Graphics,System.String,System.Drawing.Color,System.Drawing.Rectangle,System.Boolean,System.Boolean)">
            <summary>
            Draws the tab header text.
            </summary>
            <param name="g">The g.</param>
            <param name="text">The text.</param>
            <param name="foreColor">Color of the fore.</param>
            <param name="textRect">The text rect.</param>
            <param name="selected">if set to <c>true</c> [selected].</param>
            <param name="showKeyboardCues">if set to <c>true</c> [show keyboard cues].</param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOffice2003.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw border around control.
            </summary>
            <param name="g">The g.</param>
            <param name="clientRect">The client rect.</param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOffice2003.DrawFrameTabActive(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Single)">
            <summary>
            Draw frame active tab.
            </summary>
            <param name="g"></param>
            <param name="rb">BorderRectangle</param>
            <param name="rd">DisplayRectangle</param>
            <param name="angle"></param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOffice2003.DrawBorderTabActive(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draw border around active tab.
            </summary>
            <param name="g">The g.</param>
            <param name="rb">BorderRectangle</param>
            <param name="rt">TabHeader Rectangle</param>
            <param name="index">Selected Index</param>
        </member>
        <member name="P:Stone.WinUI.RendererTabControlOffice2003.TabControl">
            <summary>
            Gets the tab control
            </summary>
            <value>The tab.</value>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlSystem3D.#ctor(Stone.WinUI.AsTabControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererTabControlSystem3D"/> class.
            </summary>
            <param name="tabControl">The tab.</param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlSystem3D.DrawTabHeader(System.Drawing.Graphics,System.Windows.Forms.TabPage,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Point[]@)">
            <summary>
            Draws the tab.
            </summary>
            <param name="g">Device Context</param>
            <param name="tabPage">The tab page.</param>
            <param name="index">The index.</param>
            <param name="headerRect">The header rect.</param>
            <param name="pageBodyRect">The page body rect.</param>
            <param name="selected">if set to <c>true</c> [selected].</param>
            <param name="hoted">if set to <c>true</c> [hoted].</param>
            <param name="foreColorIfDark">The fore color if dark.</param>
            <param name="ptsFocus">The point array to draw focus.</param>
            <returns>ForeColor</returns>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlSystem3D.DrawFrameTabActive(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Single)">
            <summary>
            Draw frame active tab.
            </summary>
            <param name="g"></param>
            <param name="rb">BorderRectangle</param>
            <param name="rd">DisplayRectangle</param>
            <param name="angle"></param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlSystem3D.DrawBorderTabActive(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draw border around active tab.
            </summary>
            <param name="g">The g.</param>
            <param name="rb">BorderRectangle</param>
            <param name="rt">TabHeader Rectangle</param>
            <param name="index">Selected Index</param>
        </member>
        <member name="T:Stone.WinUI.SpinArrowEventArgs">
            <summary>
            Event Args for spin arrow.
            </summary>
        </member>
        <member name="M:Stone.WinUI.SpinArrowEventArgs.#ctor(Stone.WinUI.SpinButtons)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.SpinArrowEventArgs"/> class.
            </summary>
            <param name="spin">The spin.</param>
        </member>
        <member name="P:Stone.WinUI.SpinArrowEventArgs.SpinButton">
            <summary>
            Gets the SpinButton (SpinButtons)
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsToolTipOpeningEventArgs">
            <summary>
            EventArgs for <see cref="T:Stone.WinUI.AsToolTip"/> when opeing.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolTipOpeningEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsToolTipOpeningEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTipOpeningEventArgs.AssociatedControl">
            <summary>
            Gets the associated control.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsMenuItemActivateEventArgs">
            <summary>
            MenuItemActivate EventArgs
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsMenuItemActivateEventArgs.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsMenuItemActivateEventArgs"/> class.
            </summary>
            <param name="formid">The formid.</param>
            <param name="menuId">The menu id.</param>
            <param name="menuText">The menu text.</param>
        </member>
        <member name="P:Stone.WinUI.AsMenuItemActivateEventArgs.Cancel">
            <summary>
            Get or set the indicator to ignore(true) or accept(false).
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsMenuItemActivateEventArgs.MenuID">
            <summary>
            Gets the menu ID.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsMenuItemActivateEventArgs.FormID">
            <summary>
            Gets the form ID.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsMenuItemActivateEventArgs.MenuText">
            <summary>
            Gets the menu text.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsImageMovingEventArgs">
            <summary>
            Event Args for Image Moving.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsImageMovingEventArgs.#ctor(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsImageMovingEventArgs"/> class.
            </summary>
            <param name="location">The location.</param>
            <param name="size">The size.</param>
        </member>
        <member name="P:Stone.WinUI.AsImageMovingEventArgs.Location">
            <summary>
            Gets the image location.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsImageMovingEventArgs.Size">
            <summary>
            Gets the image size.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsExpandEventArgs">
            <summary>
            Class Expand event args.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsExpandEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsExpandEventArgs"/> class.
            </summary>
            <param name="isExpand">if set to <c>true</c> [is expand].</param>
        </member>
        <member name="P:Stone.WinUI.AsExpandEventArgs.IsExpand">
            <summary>
            Get or set the currently expand state.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsExpandEventArgs.Cancel">
            <summary>
            Get or set the wheather boolean allow to expand/collapse or not.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsToolTip">
            <summary>
            Represent as SuperToolTip Component.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsToolTip"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsToolTip"/> class.
            </summary>
            <param name="cont">The cont.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.OnOpening(Stone.WinUI.AsToolTipOpeningEventArgs)">
            <summary>
            Raises the <see cref="E:Opening"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsToolTipOpeningEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.OnClosed(Stone.WinUI.AsToolTipClosedEventArgs)">
            <summary>
            Raises the <see cref="E:Closed"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsToolTipClosedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.OnHyperLinkClick(Stone.WinUI.Markup.HyperLinkEventArgs)">
            <summary>
            Raises the <see cref="E:HyperLinkClick"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.Markup.HyperLinkEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.Hide">
            <summary>
            Hide the tooltip.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.Show(System.Int32,System.Int32)">
            <summary>
            Show tooltip with specified x,y relative screen coordinates.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.Show(System.String,System.Windows.Forms.Control,System.Int32,System.Int32)">
            <summary>
            Shows the tool tip text at specified control relative on position x and y.
            </summary>
            <param name="toolTipText">The tool tip text.</param>
            <param name="control">The control.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.Hide(System.Windows.Forms.Control)">
            <summary>
            Hide tooltip at the specified control.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.Show">
            <summary>
            Show the tooltip.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.Show(System.Windows.Forms.Control,System.Int32,System.Int32)">
            <summary>
            Shows tooltip on specified control at x, y relative screen coordinates.
            </summary>
            <param name="control">The control.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.Show(System.Windows.Forms.Control,System.Int32,System.Int32,System.Windows.Forms.ToolStripDropDownDirection)">
            <summary>
            Shows tooltip on specified control at x, y relative screen coordinates and direction of the parent control.
            </summary>
            <param name="control">The control.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.GetToolTip(System.Windows.Forms.Control)">
            <summary>
            Gets the <see cref="T:Stone.WinUI.AsToolTip.ToolTipInfo"/> from specific control when mouse hover.
            </summary>
            <param name="ctl">Host control.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.SetToolTip(System.Windows.Forms.Control,System.String)">
            <summary>
            Sets the tool tip text to the specific control.
            </summary>
            <param name="control">Host control.</param>
            <param name="tooltipText">The tooltip text.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.SetToolTip(System.Windows.Forms.Control,Stone.WinUI.AsToolTip.ToolTipInfo)">
            <summary>
            Sets the <see cref="T:Stone.WinUI.AsToolTip.ToolTipInfo"/> to the specific control.
            </summary>
            <param name="control">Host control</param>
            <param name="info">The info.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.RemoveAll">
            <summary>
            Remove all <see cref="T:Stone.WinUI.AsToolTip.ToolTipInfo"/> from the tooltip component.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.m_TimerToShow_Tick(System.Object,System.EventArgs)">
            <summary>
            กำหนดพิกัดที่จะแสดง tooltip control
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Stone.WinUI.AsToolTip.hashToolTip">
            <summary>
            hold tooltip info.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.FindForm">
            <summary>
            Retrives the form that hover control is on.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.CanExtend(System.Object)">
            <summary>
            Specifies whether this object can provide its extender properties to the specified object.
            </summary>
            <param name="extendee">The <see cref="T:System.Object"/> to receive the extender properties.</param>
            <returns>
            true if this object can provide extender properties to the specified object; otherwise, false.
            </returns>
        </member>
        <member name="E:Stone.WinUI.AsToolTip.Opening">
            <summary>
            Occurs when tooltip opening.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsToolTip.Closed">
            <summary>
            Occurs when tooltip closed.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsToolTip.HyperLinkClick">
            <summary>
            Occurs when link click.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.HoverControl">
            <summary>
            Gets the hover control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Stone.WinUI.AsToolTip"/> is enabled.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.Active">
            <summary>
            Gets a value indicating whether this <see cref="T:Stone.WinUI.AsToolTip"/> is currently visible.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.Tag">
            <summary>
            Gets or sets the extra object value.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.BackColor">
            <summary>
            Gets or sets back color of the tooltip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.ForeColor">
            <summary>
            Gets or sets fore color of the tooltip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.FlatStyle">
            <summary>
            Gets or sets a value indicating whether show tooltip with flat.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.ToolTipDuration">
            <summary>
            Gets or sets the duration to show tool tip in seconds.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.ShowAtBelowControl">
            <summary>
            Gets or sets a value indicating whether to show at below of the hover control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.ShowAlways">
            <summary>
            Gets or sets a value indicating whether to show tooltip until mouse leave.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsToolTip.ToolTipInfo">
            <summary>
            ToolTip Info
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.ToolTipInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsToolTip.ToolTipInfo"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.ToolTipInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Stone.WinUI.AsToolTip.ToolTipInfo.ClearLayout">
            <summary>
            Clears cache layout.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.ToolTipInfo.ToolTip">
            <summary>
            Gets the current tool tip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.ToolTipInfo.Size">
            <summary>
            Gets the size.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.ToolTipInfo.HeaderText">
            <summary>
            Gets or sets the header text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.ToolTipInfo.BodyImage">
            <summary>
            Gets or sets the body image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.ToolTipInfo.BodyText">
            <summary>
            Gets or sets the body text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.ToolTipInfo.FooterText">
            <summary>
            Gets or sets the footer text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.ToolTipInfo.FooterImage">
            <summary>
            Gets or sets the small image size 16x16.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.ToolTipInfo.ShowLineAfterHeader">
            <summary>
            Gets or sets a value indicating whether to show line after header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTip.ToolTipInfo.ShowLineBeforeFooter">
            <summary>
            Gets or sets a value indicating whether to show line before footer.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridRowGroupEventArgs">
            <summary>
            Event Args for RowGroup action.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridRowGroupEventArgs.#ctor(System.Int32,System.String)">
            <summary>
            Initialized.
            </summary>
            <param name="colIndex"></param>
            <param name="fld"></param>
        </member>
        <member name="P:Stone.WinUI.AsGridRowGroupEventArgs.Cancel">
            <summary>
            Get or set this action will cancel if true, otherwise false.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridRowGroupEventArgs.ColumnIndex">
            <summary>
            Get column index zero-base.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridRowGroupEventArgs.Field">
            <summary>
            Get field name.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridDataChangingEventArgs">
            <summary>
            Event Args for Data Changing.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridDataChangingEventArgs.#ctor">
            <summary>
            Initialized.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataChangingEventArgs.ColIndex">
            <summary>
            Get Column Index (int)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataChangingEventArgs.Field">
            <summary>
            Get field name.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataChangingEventArgs.RowIndex">
            <summary>
            Get Row Index (int)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataChangingEventArgs.RowView">
            <summary>
            Get <see cref="T:System.Data.DataRowView"/> of the row.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataChangingEventArgs.NewValue">
            <summary>
            Get the new <see cref="T:System.Object"/> value from user changing.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataChangingEventArgs.Cancel">
            <summary>
            Get or set the indicator to ignore(true) or accept(false).
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsPopupTipTimer">
            <summary>
            Represent as PopupTip, show tip in specific times.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsPopupTipTimer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsPopupTipTimer"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsPopupTipTimer.Dispose(System.Boolean)">
            <summary>
            Disposes of the <see cref="T:System.Windows.Forms.ToolTip"/> component.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="F:Stone.WinUI.AsPopupTipTimer.m_margin">
            <summary>
            Default = 4
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsPopupTipTimer.ShouldSerializePadding">
            <summary>
            Shoulds the serialize padding.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsPopupTipTimer.ShowDuration(System.Windows.Forms.Control,System.String,System.String,System.Windows.Forms.ToolTipIcon)">
            <summary>
            Shows popup tip in default 7 seconds.
            </summary>
            <param name="control"></param>
            <param name="title"></param>
            <param name="body"></param>
            <param name="icon"></param>
        </member>
        <member name="M:Stone.WinUI.AsPopupTipTimer.ShowDuration(System.Windows.Forms.Control,System.String,System.String,System.Windows.Forms.ToolTipIcon,System.Drawing.Image,System.Int32)">
            <summary>
            Shows popup tip in specific times.
            </summary>
            <param name="control">The control.</param>
            <param name="title">The title.</param>
            <param name="body">The body.</param>
            <param name="icon">The icon tooltip</param>
            <param name="img">Image to show</param>
            <param name="interval">The interval 1 seconds = 1000</param>
        </member>
        <member name="P:Stone.WinUI.AsPopupTipTimer.RendererType">
            <summary>
            Get or set the render type of control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPopupTipTimer.DropShadowEnabled">
            <summary>
            Gets or sets a value indicating whether a three-dimensional shadow effect
            appears when the System.Windows.Forms.ToolStripDropDown is displayed.
            </summary>
            <remarks>true to enable the shadow effect; otherwise, false.</remarks>
        </member>
        <member name="P:Stone.WinUI.AsPopupTipTimer.AutoSize">
            <summary>
            Hidden
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPopupTipTimer.LayoutStyle">
            <summary>
            Hidden
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPopupTipTimer.Padding">
            <summary>
            Hidden
            </summary>
        </member>
        <member name="T:Stone.WinUI.Win32Messages">
            <summary>
            Window message of win32.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.KS_ON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.KS_KEYDOWN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SWP_NOSIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SWP_NOMOVE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SWP_NOZORDER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SWP_NOREDRAW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SWP_NOACTIVATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SWP_FRAMECHANGED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SWP_DRAWFRAME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SWP_SHOWWINDOW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SWP_HIDEWINDOW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SWP_NOCOPYBITS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SWP_NOOWNERZORDER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SWP_NOREPOSITION">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SWP_NOSENDCHANGING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SWP_DEFERERASE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SWP_ASYNCWINDOWPOS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WH_CALLWNDPROC">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_REFLECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CONTEXT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WS_EX_TOOLWINDOW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WS_EX_TOPMOST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WS_BORDER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WS_CAPTION">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WS_CHILD">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WS_THICKFRAME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WS_VSCROLL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WS_EX_CLIENTEDGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WS_EX_STATICEDGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WS_EX_TRANSPARENT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WS_EX_LAYOUTRTL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WS_EX_LAYERED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WS_EX_NOINHERITLAYOUT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WS_EX_NOACTIVATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DLGC_WANTARROWS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DLGC_WANTTAB">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DLGC_WANTALLKEYS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DLGC_WANTMESSAGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DLGC_HASSETSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DLGC_DEFPUSHBUTTON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DLGC_UNDEFPUSHBUTTON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DLGC_RADIOBUTTON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DLGC_WANTCHARS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DLGC_STATIC">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DLGC_BUTTON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.GW_HWNDFIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.GW_HWNDLAST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.GW_HWNDNEXT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.GW_HWNDPREV">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.GW_OWNER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.GW_CHILD">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.GWL_STYLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.GWL_EXSTYLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_HORZ">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_VERT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_CTL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_BOTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.VK_LEFT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.VK_UP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.VK_RIGHT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.VK_TAB">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.VK_DOWN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.VK_NUMLOCK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.VK_CONTROL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NULL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CREATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_DESTROY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MOVE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_ACTIVATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SETFOCUS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_KILLFOCUS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_ENABLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SETREDRAW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SETTEXT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_GETTEXT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_GETTEXTLENGTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_PAINT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CLOSE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_QUERYENDSESSION">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_QUERYOPEN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_ENDSESSION">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_QUIT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_ERASEBKGND">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SYSCOLORCHANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SHOWWINDOW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_WININICHANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SETTINGCHANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_DEVMODECHANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_ACTIVATEAPP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_FONTCHANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_TIMECHANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CANCELMODE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SETCURSOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MOUSEACTIVATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CHILDACTIVATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_QUEUESYNC">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_GETMINMAXINFO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_PAINTICON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_ICONERASEBKGND">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NEXTDLGCTL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SPOOLERSTATUS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_DRAWITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MEASUREITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_DELETEITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_VKEYTOITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CHARTOITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SETFONT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_GETFONT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SETHOTKEY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_GETHOTKEY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_QUERYDRAGICON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_COMPAREITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_GETOBJECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_COMPACTING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_COMMNOTIFY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_WINDOWPOSCHANGING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_WINDOWPOSCHANGED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_POWER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_COPYDATA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CANCELJOURNAL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NOTIFY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_INPUTLANGCHANGEREQUEST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_INPUTLANGCHANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_TCARD">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_HELP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_USERCHANGED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NOTIFYFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CONTEXTMENU">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_STYLECHANGING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_STYLECHANGED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_DISPLAYCHANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_GETICON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SETICON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCCREATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCDESTROY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCCALCSIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCHITTEST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCPAINT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCACTIVATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_GETDLGCODE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SYNCPAINT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCMOUSEMOVE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCLBUTTONDOWN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCLBUTTONUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCLBUTTONDBLCLK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCRBUTTONDOWN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCRBUTTONUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCRBUTTONDBLCLK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCMBUTTONDOWN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCMBUTTONUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCMBUTTONDBLCLK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCXBUTTONDOWN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCXBUTTONUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCXBUTTONDBLCLK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_INPUT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_KEYFIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_KEYDOWN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_KEYUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CHAR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_DEADCHAR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SYSKEYDOWN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SYSKEYUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SYSCHAR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SYSDEADCHAR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_UNICHAR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_KEYLAST_NT501">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UNICODE_NOCHAR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_KEYLAST_PRE501">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_IME_STARTCOMPOSITION">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_IME_ENDCOMPOSITION">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_IME_COMPOSITION">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_IME_KEYLAST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_INITDIALOG">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_COMMAND">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SYSCOMMAND">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_TIMER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_HSCROLL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_VSCROLL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_INITMENU">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_INITMENUPOPUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MENUSELECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MENUCHAR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_ENTERIDLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MENURBUTTONUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MENUDRAG">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MENUGETOBJECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_UNINITMENUPOPUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MENUCOMMAND">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CHANGEUISTATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_UPDATEUISTATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_QUERYUISTATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CTLCOLORMSGBOX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CTLCOLOREDIT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CTLCOLORLISTBOX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CTLCOLORBTN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CTLCOLORDLG">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CTLCOLORSCROLLBAR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CTLCOLORSTATIC">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MOUSEFIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MOUSEMOVE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_LBUTTONDOWN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_LBUTTONUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_LBUTTONDBLCLK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_RBUTTONDOWN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_RBUTTONUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_RBUTTONDBLCLK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MBUTTONDOWN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MBUTTONUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MBUTTONDBLCLK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MOUSEWHEEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_XBUTTONDOWN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_XBUTTONUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_XBUTTONDBLCLK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MOUSELAST_5">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MOUSELAST_4">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MOUSELAST_PRE_4">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_PARENTNOTIFY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_ENTERMENULOOP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_EXITMENULOOP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NEXTMENU">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SIZING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CAPTURECHANGED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MOVING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_POWERBROADCAST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_DEVICECHANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MDICREATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MDIDESTROY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MDIACTIVATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MDIRESTORE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MDINEXT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MDIMAXIMIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MDITILE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MDICASCADE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MDIICONARRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MDIGETACTIVE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MDISETMENU">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_ENTERSIZEMOVE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_EXITSIZEMOVE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_DROPFILES">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MDIREFRESHMENU">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_IME_SETCONTEXT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_IME_NOTIFY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_IME_CONTROL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_IME_COMPOSITIONFULL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_IME_SELECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_IME_CHAR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_IME_REQUEST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_IME_KEYDOWN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_IME_KEYUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MOUSEHOVER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_MOUSELEAVE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCMOUSEHOVER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_NCMOUSELEAVE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_WTSSESSION_CHANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_TABLET_FIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_TABLET_LAST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CUT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_COPY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_PASTE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CLEAR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_UNDO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_RENDERFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_RENDERALLFORMATS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_DESTROYCLIPBOARD">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_DRAWCLIPBOARD">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_PAINTCLIPBOARD">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_VSCROLLCLIPBOARD">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_SIZECLIPBOARD">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_ASKCBFORMATNAME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_CHANGECBCHAIN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_HSCROLLCLIPBOARD">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_QUERYNEWPALETTE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_PALETTEISCHANGING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_PALETTECHANGED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_HOTKEY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_PRINT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_PRINTCLIENT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_APPCOMMAND">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_THEMECHANGED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_HANDHELDFIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_HANDHELDLAST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_AFXFIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_AFXLAST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_PENWINFIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_PENWINLAST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_APP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.WM_USER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_GETSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SETSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_GETRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SETRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SETRECTNP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SCROLL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_LINESCROLL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SCROLLCARET">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_GETMODIFY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SETMODIFY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_GETLINECOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_LINEINDEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SETHANDLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_GETHANDLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_GETTHUMB">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_LINELENGTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_REPLACESEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_GETLINE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_LIMITTEXT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_CANUNDO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_UNDO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_FMTLINES">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_LINEFROMCHAR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SETTABSTOPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SETPASSWORDCHAR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_EMPTYUNDOBUFFER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_GETFIRSTVISIBLELINE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SETREADONLY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SETWORDBREAKPROC">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_GETWORDBREAKPROC">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_GETPASSWORDCHAR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SETMARGINS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_GETMARGINS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SETLIMITTEXT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_GETLIMITTEXT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_POSFROMCHAR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_CHARFROMPOS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SETIMESTATUS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_GETIMESTATUS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.BM_GETCHECK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.BM_SETCHECK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.BM_GETSTATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.BM_SETSTATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.BM_SETSTYLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.BM_CLICK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.BM_GETIMAGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.BM_SETIMAGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.STM_SETICON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.STM_GETICON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.STM_SETIMAGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.STM_GETIMAGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.STM_MSGMAX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DM_GETDEFID">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DM_SETDEFID">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DM_REPOSITION">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_ADDSTRING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_INSERTSTRING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_DELETESTRING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_SELITEMRANGEEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_RESETCONTENT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_SETSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_SETCURSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETCURSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETTEXT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETTEXTLEN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_SELECTSTRING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_DIR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETTOPINDEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_FINDSTRING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETSELCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETSELITEMS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_SETTABSTOPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETHORIZONTALEXTENT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_SETHORIZONTALEXTENT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_SETCOLUMNWIDTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_ADDFILE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_SETTOPINDEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETITEMRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETITEMDATA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_SETITEMDATA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_SELITEMRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_SETANCHORINDEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETANCHORINDEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_SETCARETINDEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETCARETINDEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_SETITEMHEIGHT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETITEMHEIGHT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_FINDSTRINGEXACT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_SETLOCALE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETLOCALE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_SETCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_INITSTORAGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_ITEMFROMPOINT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_MULTIPLEADDSTRING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_GETLISTBOXINFO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_MSGMAX_501">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_MSGMAX_WCE4">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_MSGMAX_4">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LB_MSGMAX_PRE4">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETEDITSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_LIMITTEXT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_SETEDITSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_ADDSTRING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_DELETESTRING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_DIR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETCURSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETLBTEXT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETLBTEXTLEN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_INSERTSTRING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_RESETCONTENT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_FINDSTRING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_SELECTSTRING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_SETCURSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_SHOWDROPDOWN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETITEMDATA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_SETITEMDATA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETDROPPEDCONTROLRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_SETITEMHEIGHT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETITEMHEIGHT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_SETEXTENDEDUI">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETEXTENDEDUI">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETDROPPEDSTATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_FINDSTRINGEXACT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_SETLOCALE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETLOCALE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETTOPINDEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_SETTOPINDEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETHORIZONTALEXTENT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_SETHORIZONTALEXTENT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETDROPPEDWIDTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_SETDROPPEDWIDTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_INITSTORAGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_MULTIPLEADDSTRING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETCOMBOBOXINFO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_MSGMAX_501">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_MSGMAX_WCE400">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_MSGMAX_400">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_MSGMAX_PRE400">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CS_DROPSHADOW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SBM_SETPOS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SBM_GETPOS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SBM_SETRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SBM_SETRANGEREDRAW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SBM_GETRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SBM_ENABLE_ARROWS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SBM_SETSCROLLINFO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SBM_GETSCROLLINFO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SBM_GETSCROLLBARINFO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_FIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TV_FIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_FIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_FIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PGM_FIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.ECM_FIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.BCM_FIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBM_FIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CCM_FIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CCM_LAST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CCM_SETBKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CCM_SETCOLORSCHEME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CCM_GETCOLORSCHEME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CCM_GETDROPTARGET">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CCM_SETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CCM_GETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CCM_SETVERSION">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CCM_GETVERSION">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CCM_SETNOTIFYWINDOW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CCM_SETWINDOWTHEME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CCM_DPISCALE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_GETITEMCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_INSERTITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_INSERTITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_DELETEITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_GETITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_GETITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_SETITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_SETITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_LAYOUT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_HITTEST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_GETITEMRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_SETIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_GETIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_ORDERTOINDEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_CREATEDRAGIMAGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_GETORDERARRAY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_SETORDERARRAY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_SETHOTDIVIDER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_SETBITMAPMARGIN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_GETBITMAPMARGIN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_SETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_GETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_SETFILTERCHANGETIMEOUT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_EDITFILTER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HDM_CLEARFILTER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_ENABLEBUTTON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_CHECKBUTTON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_PRESSBUTTON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_HIDEBUTTON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_INDETERMINATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_MARKBUTTON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_ISBUTTONENABLED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_ISBUTTONCHECKED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_ISBUTTONPRESSED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_ISBUTTONHIDDEN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_ISBUTTONINDETERMINATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_ISBUTTONHIGHLIGHTED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETSTATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETSTATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_ADDBITMAP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_ADDBUTTONSA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_INSERTBUTTONA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_ADDBUTTONS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_INSERTBUTTON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_DELETEBUTTON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETBUTTON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_BUTTONCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_COMMANDTOINDEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SAVERESTOREA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SAVERESTOREW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_CUSTOMIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_ADDSTRINGA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_ADDSTRINGW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETITEMRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_BUTTONSTRUCTSIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETBUTTONSIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETBITMAPSIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_AUTOSIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETTOOLTIPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETTOOLTIPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETPARENT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETROWS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETROWS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETCMDID">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_CHANGEBITMAP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETBITMAP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETBUTTONTEXTA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETBUTTONTEXTW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_REPLACEBITMAP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETINDENT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_LOADIMAGES">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETHOTIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETHOTIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETDISABLEDIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETDISABLEDIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETSTYLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETSTYLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETBUTTONSIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETBUTTONWIDTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETMAXTEXTROWS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETTEXTROWS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETOBJECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETHOTITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETHOTITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETANCHORHIGHLIGHT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETANCHORHIGHLIGHT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_MAPACCELERATORA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETINSERTMARK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETINSERTMARK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_INSERTMARKHITTEST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_MOVEBUTTON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETMAXSIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETEXTENDEDSTYLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETEXTENDEDSTYLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETPADDING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETPADDING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETINSERTMARKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETINSERTMARKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETCOLORSCHEME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETCOLORSCHEME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_MAPACCELERATORW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETBITMAPFLAGS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETBUTTONINFOW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETBUTTONINFOW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETBUTTONINFOA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETBUTTONINFOA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_INSERTBUTTONW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_ADDBUTTONSW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_HITTEST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETDRAWTEXTFLAGS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETSTRINGW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETSTRINGA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_GETMETRICS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETMETRICS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TB_SETWINDOWTHEME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_INSERTBANDA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_DELETEBAND">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETBARINFO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_SETBARINFO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETBANDINFO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_SETBANDINFOA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_SETPARENT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_HITTEST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_INSERTBANDW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_SETBANDINFOW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETBANDCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETROWCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETROWHEIGHT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_IDTOINDEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETTOOLTIPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_SETTOOLTIPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_SETBKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETBKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_SETTEXTCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETTEXTCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_SIZETORECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_SETCOLORSCHEME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETCOLORSCHEME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_BEGINDRAG">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_ENDDRAG">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_DRAGMOVE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETBARHEIGHT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETBANDINFOW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETBANDINFOA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_MINIMIZEBAND">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_MAXIMIZEBAND">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETDROPTARGET">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETBANDBORDERS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_SHOWBAND">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_SETPALETTE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETPALETTE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_MOVEBAND">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_SETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_GETBANDMARGINS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_SETWINDOWTHEME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.RB_PUSHCHEVRON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_ACTIVATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_SETDELAYTIME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_ADDTOOLA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_ADDTOOLW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_DELTOOLA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_DELTOOLW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_NEWTOOLRECTA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_NEWTOOLRECTW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_RELAYEVENT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_GETTOOLINFOA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_GETTOOLINFOW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_SETTOOLINFOA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_SETTOOLINFOW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_HITTESTA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_HITTESTW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_GETTEXTA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_GETTEXTW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_UPDATETIPTEXTA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_UPDATETIPTEXTW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_GETTOOLCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_ENUMTOOLSA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_ENUMTOOLSW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_GETCURRENTTOOLA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_GETCURRENTTOOLW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_WINDOWFROMPOINT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_TRACKACTIVATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_TRACKPOSITION">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_SETTIPBKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_SETTIPTEXTCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_GETDELAYTIME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_GETTIPBKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_GETTIPTEXTCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_SETMAXTIPWIDTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_GETMAXTIPWIDTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_SETMARGIN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_GETMARGIN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_POP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_UPDATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_GETBUBBLESIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_ADJUSTRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_SETTITLEA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_SETTITLEW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_POPUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_GETTITLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TTM_SETWINDOWTHEME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_SETTEXTA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_SETTEXTW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_GETTEXTA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_GETTEXTW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_GETTEXTLENGTHA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_GETTEXTLENGTHW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_SETPARTS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_GETPARTS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_GETBORDERS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_SETMINHEIGHT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_SIMPLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_GETRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_ISSIMPLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_SETICON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_SETTIPTEXTA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_SETTIPTEXTW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_GETTIPTEXTA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_GETTIPTEXTW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_GETICON">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_SETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_GETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_SETBKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.SB_SIMPLEID">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETPOS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETRANGEMIN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETRANGEMAX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETTIC">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETTIC">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETPOS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETRANGEMIN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETRANGEMAX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_CLEARTICS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETSELSTART">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETSELEND">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETPTICS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETTICPOS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETNUMTICS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETSELSTART">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETSELEND">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_CLEARSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETTICFREQ">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETPAGESIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETPAGESIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETLINESIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETLINESIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETTHUMBRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETCHANNELRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETTHUMBLENGTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETTHUMBLENGTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETTOOLTIPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETTOOLTIPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETTIPSIDE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETBUDDY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETBUDDY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_SETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TBM_GETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DL_BEGINDRAG">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DL_DRAGGING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DL_DROPPED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DL_CANCELDRAG">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_SETRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_GETRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_SETPOS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_GETPOS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_SETBUDDY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_GETBUDDY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_SETACCEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_GETACCEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_SETBASE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_GETBASE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_SETRANGE32">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_GETRANGE32">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_SETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_GETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_SETPOS32">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.UDM_GETPOS32">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PBM_SETRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PBM_SETPOS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PBM_DELTAPOS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PBM_SETSTEP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PBM_STEPIT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PBM_SETRANGE32">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PBM_GETRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PBM_GETPOS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PBM_SETBARCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PBM_SETBKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HKM_SETHOTKEY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HKM_GETHOTKEY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.HKM_SETRULES">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETBKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETBKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETITEMCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_INSERTITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_INSERTITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_DELETEITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_DELETEALLITEMS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETCALLBACKMASK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETCALLBACKMASK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_FINDITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_FINDITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETITEMRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETITEMPOSITION">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETITEMPOSITION">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETSTRINGWIDTHA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETSTRINGWIDTHW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_HITTEST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_ENSUREVISIBLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SCROLL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_REDRAWITEMS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_ARRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_EDITLABELA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_EDITLABELW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETEDITCONTROL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETCOLUMNA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETCOLUMNW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETCOLUMNA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETCOLUMNW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_INSERTCOLUMNA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_INSERTCOLUMNW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_DELETECOLUMN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETCOLUMNWIDTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETCOLUMNWIDTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_CREATEDRAGIMAGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETVIEWRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETTEXTCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETTEXTCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETTEXTBKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETTEXTBKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETTOPINDEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETCOUNTPERPAGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETORIGIN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_UPDATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETITEMSTATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETITEMSTATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETITEMTEXTA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETITEMTEXTW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETITEMTEXTA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETITEMTEXTW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETITEMCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SORTITEMS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETITEMPOSITION32">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETSELECTEDCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETITEMSPACING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETISEARCHSTRINGA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETISEARCHSTRINGW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETICONSPACING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETEXTENDEDLISTVIEWSTYLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETEXTENDEDLISTVIEWSTYLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETSUBITEMRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SUBITEMHITTEST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETCOLUMNORDERARRAY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETCOLUMNORDERARRAY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETHOTITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETHOTITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETHOTCURSOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETHOTCURSOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_APPROXIMATEVIEWRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETWORKAREAS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETWORKAREAS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETNUMBEROFWORKAREAS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETSELECTIONMARK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETSELECTIONMARK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETHOVERTIME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETHOVERTIME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETTOOLTIPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETTOOLTIPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SORTITEMSEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETBKIMAGEA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETBKIMAGEW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETBKIMAGEA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETBKIMAGEW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETSELECTEDCOLUMN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETTILEWIDTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETVIEW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETVIEW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_INSERTGROUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETGROUPINFO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETGROUPINFO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_REMOVEGROUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_MOVEGROUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_MOVEITEMTOGROUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETGROUPMETRICS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETGROUPMETRICS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_ENABLEGROUPVIEW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SORTGROUPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_INSERTGROUPSORTED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_REMOVEALLGROUPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_HASGROUP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETTILEVIEWINFO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETTILEVIEWINFO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETTILEINFO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETTILEINFO">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETINSERTMARK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETINSERTMARK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_INSERTMARKHITTEST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETINSERTMARKRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETINSERTMARKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETINSERTMARKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETINFOTIP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETSELECTEDCOLUMN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_ISGROUPVIEWENABLED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_GETOUTLINECOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_SETOUTLINECOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_CANCELEDITLABEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_MAPINDEXTOID">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LVM_MAPIDTOINDEX">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_INSERTITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_INSERTITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_DELETEITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_EXPAND">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETITEMRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETINDENT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SETINDENT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SETIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETNEXTITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SELECTITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SETITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SETITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_EDITLABELA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_EDITLABELW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETEDITCONTROL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETVISIBLECOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_HITTEST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_CREATEDRAGIMAGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SORTCHILDREN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_ENSUREVISIBLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SORTCHILDRENCB">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_ENDEDITLABELNOW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETISEARCHSTRINGA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETISEARCHSTRINGW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SETTOOLTIPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETTOOLTIPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SETINSERTMARK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SETITEMHEIGHT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETITEMHEIGHT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SETBKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SETTEXTCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETBKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETTEXTCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SETSCROLLTIME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETSCROLLTIME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SETINSERTMARKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETINSERTMARKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETITEMSTATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_SETLINECOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_GETLINECOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_MAPACCIDTOHTREEITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TVM_MAPHTREEITEMTOACCID">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_INSERTITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_SETIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_GETIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_GETITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_SETITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_DELETEITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_GETCOMBOCONTROL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_GETEDITCONTROL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_SETEXTENDEDSTYLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_GETEXTENDEDSTYLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_SETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_GETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_SETEXSTYLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_GETEXSTYLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_HASEDITCHANGED">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_INSERTITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_SETITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CBEM_GETITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_GETIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_SETIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_GETITEMCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_GETITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_GETITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_SETITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_SETITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_INSERTITEMA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_INSERTITEMW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_DELETEITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_DELETEALLITEMS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_GETITEMRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_GETCURSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_SETCURSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_HITTEST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_SETITEMEXTRA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_ADJUSTRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_SETITEMSIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_REMOVEIMAGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_SETPADDING">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_GETROWCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_GETTOOLTIPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_SETTOOLTIPS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_GETCURFOCUS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_SETCURFOCUS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_SETMINTABWIDTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_DESELECTALL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_HIGHLIGHTITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_SETEXTENDEDSTYLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_GETEXTENDEDSTYLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_SETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.TCM_GETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.ACM_OPENA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.ACM_OPENW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.ACM_PLAY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.ACM_STOP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MA_NOACTIVATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_FIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_GETCURSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_SETCURSEL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_GETMAXSELCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_SETMAXSELCOUNT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_GETSELRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_SETSELRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_GETMONTHRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_SETDAYSTATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_GETMINREQRECT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_SETCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_GETCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_SETTODAY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_GETTODAY">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_HITTEST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_SETFIRSTDAYOFWEEK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_GETFIRSTDAYOFWEEK">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_GETRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_SETRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_GETMONTHDELTA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_SETMONTHDELTA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_GETMAXTODAYWIDTH">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_SETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.MCM_GETUNICODEFORMAT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DTM_FIRST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DTM_GETSYSTEMTIME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DTM_SETSYSTEMTIME">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DTM_GETRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DTM_SETRANGE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DTM_SETFORMATA">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DTM_SETFORMATW">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DTM_SETMCCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DTM_GETMCCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DTM_GETMONTHCAL">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DTM_SETMCFONT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.DTM_GETMCFONT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PGM_SETCHILD">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PGM_RECALCSIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PGM_FORWARDMOUSE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PGM_SETBKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PGM_GETBKCOLOR">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PGM_SETBORDER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PGM_GETBORDER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PGM_SETPOS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PGM_GETPOS">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PGM_SETBUTTONSIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PGM_GETBUTTONSIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PGM_GETBUTTONSTATE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.PGM_GETDROPTARGET">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.BCM_GETIDEALSIZE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.BCM_SETIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.BCM_GETIMAGELIST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.BCM_SETTEXTMARGIN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.BCM_GETTEXTMARGIN">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SETCUEBANNER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_GETCUEBANNER">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_SHOWBALLOONTIP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.EM_HIDEBALLOONTIP">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_SETMINVISIBLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.CB_GETMINVISIBLE">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LM_HITTEST">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LM_GETIDEALHEIGHT">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LM_SETITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Messages.LM_GETITEM">
            <summary>
            Windows Constant[s]
            </summary>
        </member>
        <member name="T:Stone.WinUI.Renderers.Office2003BlueColorTable">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.Renderers.Office2003BlueColorTable.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonCheckedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonCheckedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonCheckedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonCheckedHighlight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonCheckedHighlightBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonPressedBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonPressedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonPressedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonPressedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonPressedHighlight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonPressedHighlightBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonSelectedBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonSelectedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonSelectedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonSelectedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonSelectedHighlight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ButtonSelectedHighlightBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.CheckBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.CheckPressedBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.CheckSelectedBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.GripDark">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.GripLight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ImageMarginGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ImageMarginGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ImageMarginGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ImageMarginRevealedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ImageMarginRevealedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ImageMarginRevealedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.MenuBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.MenuItemBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.MenuItemPressedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.MenuItemPressedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.MenuItemPressedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.MenuItemSelected">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.MenuItemSelectedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.MenuItemSelectedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.MenuStripGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.MenuStripGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.OverflowButtonGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.OverflowButtonGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.OverflowButtonGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.RaftingContainerGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.RaftingContainerGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.SeparatorDark">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.SeparatorLight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.StatusStripGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.StatusStripGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ToolStripBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ToolStripContentPanelGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ToolStripContentPanelGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ToolStripDropDownBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ToolStripGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ToolStripGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ToolStripGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ToolStripPanelGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003BlueColorTable.ToolStripPanelGradientEnd">
            <inheritdoc />
        </member>
        <member name="T:Stone.WinUI.OfficeColor">
            <summary>
            Color palated used by current <see cref="T:System.Windows.Forms.ToolStripRenderer"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.OfficeColor.#cctor">
            <summary>
            Initializes the <see cref="T:Stone.WinUI.OfficeColor"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.OfficeColor.InitColor">
            <summary>
            Total 56 colors
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColor.toolStripRenderer">
            <summary>
            Handles current ToolStripRenderer.
            </summary>
        </member>
        <member name="E:Stone.WinUI.OfficeColor.RandererChanged">
            <summary>
            Occurs when ToolStripManager Renderer changed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ColorTableName">
            <summary>
            Gets the name of the color table.
            </summary>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonCheckedGradientBegin">
            <summary>
            Gets the button checked gradient begin.
            </summary>
            <value>The button checked gradient begin.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonCheckedGradientEnd">
            <summary>
            Gets the button checked gradient end.
            </summary>
            <value>The button checked gradient end.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonCheckedGradientMiddle">
            <summary>
            Gets the button checked gradient middle.
            </summary>
            <value>The button checked gradient middle.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonCheckedHighlight">
            <summary>
            Gets the button checked highlight.
            </summary>
            <value>The button checked highlight.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonCheckedHighlightBorder">
            <summary>
            Gets the button checked highlight border.
            </summary>
            <value>The button checked highlight border.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonPressedBorder">
            <summary>
            Gets the button pressed border.
            </summary>
            <value>The button pressed border.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonPressedGradientBegin">
            <summary>
            Gets the button pressed gradient begin.
            </summary>
            <value>The button pressed gradient begin.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonPressedGradientEnd">
            <summary>
            Gets the button pressed gradient end.
            </summary>
            <value>The button pressed gradient end.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonPressedGradientMiddle">
            <summary>
            Gets the button pressed gradient middle.
            </summary>
            <value>The button pressed gradient middle.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonPressedHighlight">
            <summary>
            Gets the button pressed highlight.
            </summary>
            <value>The button pressed highlight.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonPressedHighlightBorder">
            <summary>
            Gets the button pressed highlight border.
            </summary>
            <value>The button pressed highlight border.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonSelectedBorder">
            <summary>
            Gets the button selected border.
            </summary>
            <value>The button selected border.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonSelectedGradientBegin">
            <summary>
            Gets the button selected gradient begin.
            </summary>
            <value>The button selected gradient begin.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonSelectedGradientEnd">
            <summary>
            Gets the button selected gradient end.
            </summary>
            <value>The button selected gradient end.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonSelectedGradientMiddle">
            <summary>
            Gets the button selected gradient middle.
            </summary>
            <value>The button selected gradient middle.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonSelectedHighlight">
            <summary>
            Gets the button selected highlight.
            </summary>
            <value>The button selected highlight.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ButtonSelectedHighlightBorder">
            <summary>
            Gets the button selected highlight border.
            </summary>
            <value>The button selected highlight border.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.CheckBackground">
            <summary>
            Gets the check background.
            </summary>
            <value>The check background.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.CheckPressedBackground">
            <summary>
            Gets the check pressed background.
            </summary>
            <value>The check pressed background.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.CheckSelectedBackground">
            <summary>
            Gets the check selected background.
            </summary>
            <value>The check selected background.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.GripDark">
            <summary>
            Gets the grip dark.
            </summary>
            <value>The grip dark.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.GripLight">
            <summary>
            Gets the grip light.
            </summary>
            <value>The grip light.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ImageMarginGradientBegin">
            <summary>
            Gets the image margin gradient begin.
            </summary>
            <value>The image margin gradient begin.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ImageMarginGradientEnd">
            <summary>
            Gets the image margin gradient end.
            </summary>
            <value>The image margin gradient end.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ImageMarginGradientMiddle">
            <summary>
            Gets the image margin gradient middle.
            </summary>
            <value>The image margin gradient middle.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ImageMarginRevealedGradientBegin">
            <summary>
            Gets the image margin revealed gradient begin.
            </summary>
            <value>The image margin revealed gradient begin.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ImageMarginRevealedGradientEnd">
            <summary>
            Gets the image margin revealed gradient end.
            </summary>
            <value>The image margin revealed gradient end.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ImageMarginRevealedGradientMiddle">
            <summary>
            Gets the image margin revealed gradient middle.
            </summary>
            <value>The image margin revealed gradient middle.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.MenuBorder">
            <summary>
            Gets the menu border.
            </summary>
            <value>The menu border.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.MenuItemBorder">
            <summary>
            Gets the menu item border.
            </summary>
            <value>The menu item border.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.MenuItemPressedGradientBegin">
            <summary>
            Gets the menu item pressed gradient begin.
            </summary>
            <value>The menu item pressed gradient begin.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.MenuItemPressedGradientEnd">
            <summary>
            Gets the menu item pressed gradient end.
            </summary>
            <value>The menu item pressed gradient end.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.MenuItemPressedGradientMiddle">
            <summary>
            Gets the menu item pressed gradient middle.
            </summary>
            <value>The menu item pressed gradient middle.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.MenuItemSelected">
            <summary>
            Gets the menu item selected.
            </summary>
            <value>The menu item selected.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.MenuItemSelectedGradientBegin">
            <summary>
            Gets the menu item selected gradient begin.
            </summary>
            <value>The menu item selected gradient begin.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.MenuItemSelectedGradientEnd">
            <summary>
            Gets the menu item selected gradient end.
            </summary>
            <value>The menu item selected gradient end.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.MenuStripGradientBegin">
            <summary>
            Gets the menu strip gradient begin.
            </summary>
            <value>The menu strip gradient begin.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.MenuStripGradientEnd">
            <summary>
            Gets the menu strip gradient end.
            </summary>
            <value>The menu strip gradient end.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.OverflowButtonGradientBegin">
            <summary>
            Gets the overflow button gradient begin.
            </summary>
            <value>The overflow button gradient begin.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.OverflowButtonGradientEnd">
            <summary>
            Gets the overflow button gradient end.
            </summary>
            <value>The overflow button gradient end.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.OverflowButtonGradientMiddle">
            <summary>
            Gets the overflow button gradient middle.
            </summary>
            <value>The overflow button gradient middle.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.RaftingContainerGradientBegin">
            <summary>
            Gets the rafting container gradient begin.
            </summary>
            <value>The rafting container gradient begin.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.RaftingContainerGradientEnd">
            <summary>
            Gets the rafting container gradient end.
            </summary>
            <value>The rafting container gradient end.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.SeparatorDark">
            <summary>
            Gets the separator dark.
            </summary>
            <value>The separator dark.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.SeparatorLight">
            <summary>
            Gets the separator light.
            </summary>
            <value>The separator light.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.StatusStripGradientBegin">
            <summary>
            Gets the status strip gradient begin.
            </summary>
            <value>The status strip gradient begin.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.StatusStripGradientEnd">
            <summary>
            Gets the status strip gradient end.
            </summary>
            <value>The status strip gradient end.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ToolStripBorder">
            <summary>
            Gets the tool strip border.
            </summary>
            <value>The tool strip border.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ToolStripContentPanelGradientBegin">
            <summary>
            Gets the tool strip content panel gradient begin.
            </summary>
            <value>The tool strip content panel gradient begin.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ToolStripContentPanelGradientEnd">
            <summary>
            Gets the tool strip content panel gradient end.
            </summary>
            <value>The tool strip content panel gradient end.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ToolStripDropDownBackground">
            <summary>
            Gets the tool strip drop down background.
            </summary>
            <value>The tool strip drop down background.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ToolStripGradientBegin">
            <summary>
            Gets the tool strip gradient begin.
            </summary>
            <value>The tool strip gradient begin.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ToolStripGradientEnd">
            <summary>
            Gets the tool strip gradient end.
            </summary>
            <value>The tool strip gradient end.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ToolStripGradientMiddle">
            <summary>
            Gets the tool strip gradient middle.
            </summary>
            <value>The tool strip gradient middle.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ToolStripPanelGradientBegin">
            <summary>
            Gets the tool strip panel gradient begin.
            </summary>
            <value>The tool strip panel gradient begin.</value>
        </member>
        <member name="P:Stone.WinUI.OfficeColor.ToolStripPanelGradientEnd">
            <summary>
            Gets the tool strip panel gradient end.
            </summary>
            <value>The tool strip panel gradient end.</value>
        </member>
        <member name="T:Stone.WinUI.PopupSizings">
            <summary>
            Flags of popup sizing directions.
            </summary>
        </member>
        <member name="F:Stone.WinUI.PopupSizings.None">
            <summary>
            Cannot resize.
            </summary>
        </member>
        <member name="F:Stone.WinUI.PopupSizings.Vertical">
            <summary>
            Resize in vertical only.
            </summary>
        </member>
        <member name="F:Stone.WinUI.PopupSizings.Horizontal">
            <summary>
            Resize in horizontal only.
            </summary>
        </member>
        <member name="F:Stone.WinUI.PopupSizings.BothSide">
            <summary>
            Resize both side.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Directions">
            <summary>
            Enumeration of direction.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Directions.None">
            <summary>
            None specific.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Directions.Up">
            <summary>
            Below to Top.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Directions.Down">
            <summary>
            Top to Bottom.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Directions.Left">
            <summary>
            From Right to Left.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Directions.Right">
            <summary>
            From Left to Right.
            </summary>
        </member>
        <member name="T:Stone.WinUI.RendererTypes">
            <summary>
            Types of render the control.
            </summary>
        </member>
        <member name="F:Stone.WinUI.RendererTypes.System3D">
            <summary>
            Use window default(Border3D) supported visual style.
            </summary>
        </member>
        <member name="F:Stone.WinUI.RendererTypes.OfficeXP">
            <summary>
            OfficeXP flat style.
            </summary>
        </member>
        <member name="F:Stone.WinUI.RendererTypes.Office2003">
            <summary>
            Office2003 style.
            </summary>
        </member>
        <member name="F:Stone.WinUI.RendererTypes.AeroGlass">
            <summary>
            Vista aero style.
            </summary>
        </member>
        <member name="F:Stone.WinUI.RendererTypes.Office2007">
            <summary>
            Office2007 style.
            </summary>
        </member>
        <member name="T:Stone.WinUI.MouseStates">
            <summary>
            Behavior of mouse state
            </summary>
        </member>
        <member name="F:Stone.WinUI.MouseStates.None">
            <summary>
            No action
            </summary>
        </member>
        <member name="F:Stone.WinUI.MouseStates.Down">
            <summary>
            Press down
            </summary>
        </member>
        <member name="F:Stone.WinUI.MouseStates.Hover">
            <summary>
            Hover button
            </summary>
        </member>
        <member name="F:Stone.WinUI.MouseStates.Disabled">
            <summary>
            Special flag for aero drawing only.
            </summary>
        </member>
        <member name="T:Stone.WinUI.TextRotations">
            <summary>
            Direction to draw text.
            </summary>
        </member>
        <member name="F:Stone.WinUI.TextRotations.Horizontal">
            <summary>
            Normal style.
            </summary>
        </member>
        <member name="F:Stone.WinUI.TextRotations.Vertical270">
            <summary>
            Bottom to Top.
            </summary>
        </member>
        <member name="F:Stone.WinUI.TextRotations.Vertical90">
            <summary>
            Top to Bottom.
            </summary>
        </member>
        <member name="T:Stone.WinUI.BoxStyles">
            <summary>
            Icon and EditBox style
            </summary>
        </member>
        <member name="F:Stone.WinUI.BoxStyles.None">
            <summary>
            UnEditable.
            </summary>
        </member>
        <member name="F:Stone.WinUI.BoxStyles.NumberBox">
            <summary>
            Numeric data.
            </summary>
        </member>
        <member name="F:Stone.WinUI.BoxStyles.DateBox">
            <summary>
            Date picker.
            </summary>
        </member>
        <member name="F:Stone.WinUI.BoxStyles.ListIndexBox">
            <summary>
            Data list index.
            </summary>
        </member>
        <member name="F:Stone.WinUI.BoxStyles.SearchBox">
            <summary>
            Custom search.
            </summary>
        </member>
        <member name="F:Stone.WinUI.BoxStyles.LookupBox">
            <summary>
            Searchable in list
            </summary>
        </member>
        <member name="F:Stone.WinUI.BoxStyles.TextBox">
            <summary>
            Free text box.
            </summary>
        </member>
        <member name="F:Stone.WinUI.BoxStyles.FileBox">
            <summary>
            Open file dialog box.
            </summary>
        </member>
        <member name="F:Stone.WinUI.BoxStyles.ColorBox">
            <summary>
            Choose color from plate.
            </summary>
        </member>
        <member name="F:Stone.WinUI.BoxStyles.TimeBox">
            <summary>
            Edit able time.
            </summary>
        </member>
        <member name="T:Stone.WinUI.LookupDisplayFormats">
            <summary>
            How to display text in the <see cref="T:Stone.WinUI.AsLookupBox"/>.
            </summary>
        </member>
        <member name="F:Stone.WinUI.LookupDisplayFormats.Both">
            <summary>
            Show both value and display member.
            </summary>
        </member>
        <member name="F:Stone.WinUI.LookupDisplayFormats.DisplayMemberOnly">
            <summary>
            Show description only.
            </summary>
        </member>
        <member name="F:Stone.WinUI.LookupDisplayFormats.ValueMemberOnly">
            <summary>
            Show value only.
            </summary>
        </member>
        <member name="T:Stone.WinUI.DisplayTextTypes">
            <summary>
            Type of text to display on button surface.
            </summary>
        </member>
        <member name="F:Stone.WinUI.DisplayTextTypes.SelectedColor">
            <summary>
            When use color picker mode.
            </summary>
        </member>
        <member name="F:Stone.WinUI.DisplayTextTypes.Text">
            <summary>
            Original text of the button.
            </summary>
        </member>
        <member name="T:Stone.WinUI.ButtonTypes">
            <summary>
            Button type flag
            </summary>
        </member>
        <member name="F:Stone.WinUI.ButtonTypes.PushButton">
            <summary>
            Default type.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ButtonTypes.ColorPicker">
            <summary>
            Drop down color picker.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ButtonTypes.Check">
            <summary>
            Like radio checked.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ButtonTypes.CommandLink">
            <summary>
            Vista button contain header, description.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ButtonTypes.Switch">
            <summary>
            Switch On or Off
            </summary>
        </member>
        <member name="T:Stone.WinUI.ButtonDrawStates">
            <summary>
            Button states.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ButtonDrawStates.None">
            <summary>
            No use this flag, but required for zero base.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ButtonDrawStates.Normal">
            <summary>
            State normal
            </summary>
        </member>
        <member name="F:Stone.WinUI.ButtonDrawStates.Hot">
            <summary>
            Hot state
            </summary>
        </member>
        <member name="F:Stone.WinUI.ButtonDrawStates.Press">
            <summary>
            Press state
            </summary>
        </member>
        <member name="F:Stone.WinUI.ButtonDrawStates.Disable">
            <summary>
            Disable state
            </summary>
        </member>
        <member name="F:Stone.WinUI.ButtonDrawStates.Focus">
            <summary>
            Focus or Enter state
            </summary>
        </member>
        <member name="T:Stone.WinUI.InputBoxTypes">
            <summary>
            Data type for InpubBox
            </summary>
        </member>
        <member name="F:Stone.WinUI.InputBoxTypes.Date">
            <summary>
            Show input as DateBox.
            </summary>
        </member>
        <member name="F:Stone.WinUI.InputBoxTypes.Number">
            <summary>
            Show input as NumberBox.
            </summary>
        </member>
        <member name="F:Stone.WinUI.InputBoxTypes.String">
            <summary>
            Show input as TextBox(Default).
            </summary>
        </member>
        <member name="T:Stone.WinUI.DropdownArrowStyle">
            <summary>
            Dropdown array styles.
            </summary>
        </member>
        <member name="F:Stone.WinUI.DropdownArrowStyle.None">
            <summary>
            Default, no dropdown.
            </summary>
        </member>
        <member name="F:Stone.WinUI.DropdownArrowStyle.DropdownButton">
            <summary>
            Show drop down menu when click any area.
            </summary>
        </member>
        <member name="F:Stone.WinUI.DropdownArrowStyle.SplitDropdown">
            <summary>
            Split area between button and dropdown arrow.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Corners">
            <summary>
            Corner Curve
            </summary>
        </member>
        <member name="F:Stone.WinUI.Corners.None">
            <summary>
            Curve None
            </summary>
        </member>
        <member name="F:Stone.WinUI.Corners.TopLeft">
            <summary>
            Curve Top-Left
            </summary>
        </member>
        <member name="F:Stone.WinUI.Corners.TopRight">
            <summary>
            Curve Top-Right
            </summary>
        </member>
        <member name="F:Stone.WinUI.Corners.BottomLeft">
            <summary>
            Curve Bottom-Left
            </summary>
        </member>
        <member name="F:Stone.WinUI.Corners.BottomRight">
            <summary>
            Curve Bottom-Right
            </summary>
        </member>
        <member name="F:Stone.WinUI.Corners.All">
            <summary>
            Curve All
            </summary>
        </member>
        <member name="T:Stone.WinUI.GripStyles">
            <summary>
            A handle style to display the user.
            </summary>
        </member>
        <member name="F:Stone.WinUI.GripStyles.None">
            <summary>
            No grip.
            </summary>
        </member>
        <member name="F:Stone.WinUI.GripStyles.Chain">
            <summary>
            O-Ring Style
            </summary>
        </member>
        <member name="F:Stone.WinUI.GripStyles.DashFlat">
            <summary>
            Many flat dash line.
            </summary>
        </member>
        <member name="F:Stone.WinUI.GripStyles.DotRaiseInner">
            <summary>
            Dot 3d raise inner.
            </summary>
        </member>
        <member name="F:Stone.WinUI.GripStyles.DotSunken">
            <summary>
            Dot sunken.
            </summary>
        </member>
        <member name="F:Stone.WinUI.GripStyles.DotTwice">
            <summary>
            Dot 2 level.
            </summary>
        </member>
        <member name="F:Stone.WinUI.GripStyles.LineStretch">
            <summary>
            Stretch line rectangle.
            </summary>
        </member>
        <member name="F:Stone.WinUI.GripStyles.LineSlash">
            <summary>
            Slash line.
            </summary>
        </member>
        <member name="F:Stone.WinUI.GripStyles.Indicator">
            <summary>
            Show arrow direction can slide to hidden control.
            </summary>
        </member>
        <member name="T:Stone.WinUI.GroupStyles">
            <summary>
            Grouper Style
            </summary>
        </member>
        <member name="F:Stone.WinUI.GroupStyles.Compact">
            <summary>
            Show header and expand button, no frame.
            </summary>
        </member>
        <member name="F:Stone.WinUI.GroupStyles.Default">
            <summary>
            Show frame border between header and body.
            </summary>
        </member>
        <member name="F:Stone.WinUI.GroupStyles.GroupBox">
            <summary>
            Draw border like group-box control.
            </summary>
        </member>
        <member name="T:Stone.WinUI.GradientModes">
            <summary>
            Gradient mode
            </summary>
        </member>
        <member name="F:Stone.WinUI.GradientModes.Horizontal">
            <summary>
            Left to right
            </summary>
        </member>
        <member name="F:Stone.WinUI.GradientModes.Vertical">
            <summary>
            Top to bottom
            </summary>
        </member>
        <member name="F:Stone.WinUI.GradientModes.ForwardDiagonal">
            <summary>
            Top-Left to Bottom-Right
            </summary>
        </member>
        <member name="F:Stone.WinUI.GradientModes.BackwardDiagonal">
            <summary>
            Top-Right to Bottom-Left
            </summary>
        </member>
        <member name="F:Stone.WinUI.GradientModes.None">
            <summary>
            No Gradient
            </summary>
        </member>
        <member name="T:Stone.WinUI.OfficeColors">
            <summary>
            Office color name.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonCheckedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is checked.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonCheckedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is checked.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonCheckedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is checked.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonCheckedHighlight">
            <summary>
            Gets the solid color used when the button is checked.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonCheckedHighlightBorder">
            <summary>
            Gets the border color to use with System.Windows.Forms.ProfessionalColorTable.ButtonCheckedHighlight.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonPressedBorder">
            <summary>
            Gets the border color to use with the System.Windows.Forms.ProfessionalColorTable.ButtonPressedGradientBegin,
            System.Windows.Forms.ProfessionalColorTable.ButtonPressedGradientMiddle,
            and System.Windows.Forms.ProfessionalColorTable.ButtonPressedGradientEnd
            colors.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is pressed.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is pressed.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is pressed.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonPressedHighlight">
            <summary>
            Gets the solid color used when the button is pressed.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonPressedHighlightBorder">
            <summary>
            Gets the border color to use with System.Windows.Forms.ProfessionalColorTable.ButtonPressedHighlight.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonSelectedBorder">
            <summary>
            Gets the border color to use with the System.Windows.Forms.ProfessionalColorTable.ButtonSelectedGradientBegin,
            System.Windows.Forms.ProfessionalColorTable.ButtonSelectedGradientMiddle,
            and System.Windows.Forms.ProfessionalColorTable.ButtonSelectedGradientEnd
            colors.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonSelectedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonSelectedHighlight">
            <summary>
            Gets the solid color used when the button is selected.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ButtonSelectedHighlightBorder">
            <summary>
            Gets the border color to use with System.Windows.Forms.ProfessionalColorTable.ButtonSelectedHighlight.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.CheckBackground">
            <summary>
            Gets the solid color to use when the button is checked and gradients are being used.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.CheckPressedBackground">
            <summary>
            Gets the solid color to use when the button is checked and selected and gradients are being used.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.CheckSelectedBackground">
            <summary>
            Gets the solid color to use when the button is checked and selected and gradients are being used.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.GripDark">
            <summary>
            Gets the color to use for shadow effects on the grip (move handle).
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.GripLight">
            <summary>
            Gets the color to use for highlight effects on the grip (move handle).
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ImageMarginGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the image margin of a System.Windows.Forms.ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ImageMarginGradientEnd">
            <summary>
            Gets the end color of the gradient used in the image margin of a System.Windows.Forms.ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ImageMarginGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the image margin of a System.Windows.Forms.ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ImageMarginRevealedGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the image margin of a System.Windows.Forms.ToolStripDropDownMenu
            when an item is revealed.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ImageMarginRevealedGradientEnd">
            <summary>
            Gets the end color of the gradient used in the image margin of a System.Windows.Forms.ToolStripDropDownMenu
            when an item is revealed.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ImageMarginRevealedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the image margin of a System.Windows.Forms.ToolStripDropDownMenu
            when an item is revealed.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.MenuBorder">
            <summary>
            Gets the color that is the border color to use on a System.Windows.Forms.MenuStrip.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.MenuItemBorder">
            <summary>
            Gets the border color to use with a System.Windows.Forms.ToolStripMenuItem.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.MenuItemPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when a top-level System.Windows.Forms.ToolStripMenuItem is pressed.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.MenuItemPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when a top-level System.Windows.Forms.ToolStripMenuItem is pressed.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.MenuItemPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when a top-level System.Windows.Forms.ToolStripMenuItem is pressed.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.MenuItemSelected">
            <summary>
            Gets the solid color to use when a System.Windows.Forms.ToolStripMenuItem 
            other than the top-level System.Windows.Forms.ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.MenuItemSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the System.Windows.Forms.ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.MenuItemSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the System.Windows.Forms.ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.MenuStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the System.Windows.Forms.MenuStrip.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.MenuStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the System.Windows.Forms.MenuStrip.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.OverflowButtonGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the System.Windows.Forms.ToolStripOverflowButton.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.OverflowButtonGradientEnd">
            <summary>
            Gets the end color of the gradient used in the System.Windows.Forms.ToolStripOverflowButton.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.OverflowButtonGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the System.Windows.Forms.ToolStripOverflowButton.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.RaftingContainerGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the System.Windows.Forms.ToolStripContainer.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.RaftingContainerGradientEnd">
            <summary>
            Gets the end color of the gradient used in the System.Windows.Forms.ToolStripContainer.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.SeparatorDark">
            <summary>
            Gets the color to use to for shadow effects on the System.Windows.Forms.ToolStripSeparator.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.SeparatorLight">
            <summary>
            Gets the color to use to for highlight effects on the System.Windows.Forms.ToolStripSeparator.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.StatusStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used on the System.Windows.Forms.StatusStrip.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.StatusStripGradientEnd">
            <summary>
            Gets the end color of the gradient used on the System.Windows.Forms.StatusStrip.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ToolStripBorder">
            <summary>
            Gets the border color to use on the bottom edge of the System.Windows.Forms.ToolStrip.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ToolStripContentPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the System.Windows.Forms.ToolStripContentPanel.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ToolStripContentPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the System.Windows.Forms.ToolStripContentPanel.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ToolStripDropDownBackground">
            <summary>
            Gets the solid background color of the System.Windows.Forms.ToolStripDropDown.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ToolStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the System.Windows.Forms.ToolStrip background.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ToolStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the System.Windows.Forms.ToolStrip background.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ToolStripGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the System.Windows.Forms.ToolStrip background.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ToolStripPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the System.Windows.Forms.ToolStripPanel.
            </summary>
        </member>
        <member name="F:Stone.WinUI.OfficeColors.ToolStripPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the System.Windows.Forms.ToolStripPanel.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsListIndexDropdown">
            <summary>
            Form List index dropdown.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListIndexDropdown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsListIndexDropdown"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListIndexDropdown.FinishSelect">
            <summary>
            Finish selected.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListIndexDropdown.SelectAt(System.Int32)">
            <summary>
            Select at specific index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Stone.WinUI.AsListIndexDropdown.AsComboListDropdown_Load(System.Object,System.EventArgs)">
            <summary>
            Dropdown load
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsListIndexDropdown.AsListIndexDropdown_Resize(System.Object,System.EventArgs)">
            <summary>
            Form resize
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsListIndexDropdown.listView1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the listView1 control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Stone.WinUI.AsListIndexDropdown.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListIndexDropdown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.AsListIndexDropdown.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsListIndexDropdown.CreateParams">
            <summary>
            Gets the create params.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsListIndexDropdown.ImageListIndex">
            <summary>
            Get or set <see cref="T:System.Windows.Forms.ImageList"/> for list index.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsListIndexDropdown.SelectedIndex">
            <summary>
            Get or set the SelectedIndex (int)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsListIndexDropdown.IndexString">
            <summary>
            Get or set index string for main language. 
            Separate each word by comma, value for 1st word begin from zero.
            <para>Syntax: [strIndex0][|foreColorIndex0], [strIndex1][|foreColorIndex1]</para>
            <para>Example: Active|Blue,InActive|Red,Unknown</para>
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsEditBoxDesigner">
            <summary>
            Designer for <see cref="T:Stone.WinUI.AsBaseEditBox"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditBoxDesigner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsEditBoxDesigner"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditBoxDesigner.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.ControlDesigner"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditBoxDesigner.service_SelectionChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectionChanged event of the service control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditBoxDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The <see cref="T:System.ComponentModel.IComponent"/> to associate the designer with. This component must always be an instance of, or derive from, <see cref="T:System.Windows.Forms.Control"/>.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditBoxDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            Allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor"/>.
            </summary>
            <param name="properties">The properties for the class of the component.</param>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value></value>
            <returns>
            The design-time action lists supported by the component associated with the designer.
            </returns>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxDesigner.SelectionRules">
            <summary>
            Gets the selection rules that indicate the movement capabilities of a component.
            </summary>
            <returns>
            A bitwise combination of <see cref="T:System.Windows.Forms.Design.SelectionRules"/> values.
            </returns>
        </member>
        <member name="M:Stone.WinUI.RendererUpDownButtonSystem3D.#ctor(Stone.WinUI.AsNumberBox.UpDownButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererUpDownButtonSystem3D"/> class.
            </summary>
            <param name="updown">The updown.</param>
        </member>
        <member name="M:Stone.WinUI.RendererUpDownButtonSystem3D.DrawButtonUp(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draws the button up.
            </summary>
            <param name="g">The g.</param>
            <param name="rectBtn">The rect BTN.</param>
            <param name="drawState">State of the draw.</param>
        </member>
        <member name="T:Stone.WinUI.RendererRadioButtonOfficeXP">
            <summary>
            Renderer radio button.
            </summary>
        </member>
        <member name="T:Stone.WinUI.RendererRadioButtonOffice2003">
            <summary>
            Randerer radio button.
            </summary>
        </member>
        <member name="T:Stone.WinUI.IRendererRadioButton">
            <summary>
            Interface for render radio button.
            </summary>
        </member>
        <member name="M:Stone.WinUI.IRendererRadioButton.DrawBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws background image.
            </summary>
            <param name="g">Device context</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererRadioButton.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws focus rectangle.
            </summary>
            <param name="g">Device context</param>
            <param name="rect">The rect.</param>
            <param name="showFocusCues">if set to <c>true</c> [show focus cues].</param>
        </member>
        <member name="M:Stone.WinUI.IRendererRadioButton.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the image.
            </summary>
            <param name="g">Device context</param>
            <param name="rect">Avaliable area to draw image.</param>
            <param name="boxRect">The box rect.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.IRendererRadioButton.DrawBox(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draws the box and check state.
            </summary>
            <param name="g">Device context</param>
            <param name="rect">The rect.</param>
            <param name="drawState">Draw state.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.IRendererRadioButton.DrawText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws the text.
            </summary>
            <param name="g">Device context</param>
            <param name="s">Text to draw</param>
            <param name="font">The font.</param>
            <param name="rect">Avaliable area to draw text.</param>
            <param name="boxRect">CheckBox rect.</param>
            <param name="rectImg">Image area</param>
            <param name="showKeyboardCues">Show keyboard cues</param>
        </member>
        <member name="P:Stone.WinUI.IRendererRadioButton.RadioButton">
            <summary>
            Gets the radio button control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererRadioButtonOffice2003.#ctor(Stone.WinUI.AsRadioButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererRadioButtonOffice2003"/> class.
            </summary>
            <param name="radioButton">The radio button.</param>
        </member>
        <member name="M:Stone.WinUI.RendererRadioButtonOffice2003.DrawBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws background image.
            </summary>
            <param name="g">Device context</param>
            <param name="rect">m_CheckBox rect.</param>
        </member>
        <member name="M:Stone.WinUI.RendererRadioButtonOffice2003.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws focus rectangle.
            </summary>
            <param name="g">Device context</param>
            <param name="rect">Button rect</param>
            <param name="showFocusCues">if set to <c>true</c> [show focus cues].</param>
        </member>
        <member name="M:Stone.WinUI.RendererRadioButtonOffice2003.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws image.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">Avaliable area to draw image.</param>
            <param name="boxRect">The box rect.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.RendererRadioButtonOffice2003.DrawBox(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draws the box and check state.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="drawState">Draw state.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.RendererRadioButtonOffice2003.DrawRadioBox(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draws the check box.
            </summary>
            <param name="g">The g.</param>
            <param name="boxRect">The box rect.</param>
            <param name="drawState">State of the draw.</param>
        </member>
        <member name="M:Stone.WinUI.RendererRadioButtonOffice2003.DrawText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws the text.
            </summary>
            <param name="g">Device context</param>
            <param name="s">Text to draw</param>
            <param name="font">The font.</param>
            <param name="rect">Avaliable area to draw text.</param>
            <param name="boxRect">CheckBox rect.</param>
            <param name="rectImg">Image area</param>
            <param name="showKeyboardCues">Show keyboard cues</param>
        </member>
        <member name="M:Stone.WinUI.RendererRadioButtonOffice2003.GetImageArea(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Size,System.Windows.Forms.TextImageRelation)">
            <summary>
            Gets the avaliable image area.
            </summary>
            <param name="clientRect">The client rect.</param>
            <param name="boxRect">The box rect.</param>
            <param name="imgSize">Size of the img.</param>
            <param name="textImageRelation">The text image relation.</param>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.RendererRadioButtonOffice2003.RadioButton">
            <summary>
            Gets the radio button control.
            </summary>
            <value></value>
        </member>
        <member name="M:Stone.WinUI.RendererRadioButtonOfficeXP.#ctor(Stone.WinUI.AsRadioButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererRadioButtonOfficeXP"/> class.
            </summary>
            <param name="radioButton">The radio button.</param>
        </member>
        <member name="M:Stone.WinUI.RendererRadioButtonOfficeXP.DrawRadioBox(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates)">
            <inheritdoc />
        </member>
        <member name="T:Stone.WinUI.RendererCheckBoxOffice2003">
            <summary>
            
            </summary>
        </member>
        <member name="T:Stone.WinUI.IRendererCheckBox">
            <summary>
            Interface for render checkbox.
            </summary>
        </member>
        <member name="M:Stone.WinUI.IRendererCheckBox.DrawBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws background image.
            </summary>
            <param name="g">Device context</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererCheckBox.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws focus rectangle.
            </summary>
            <param name="g">Device context</param>
            <param name="rect">The rect.</param>
            <param name="showFocusCues">if set to <c>true</c> [show focus cues].</param>
        </member>
        <member name="M:Stone.WinUI.IRendererCheckBox.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the image.
            </summary>
            <param name="g">Device context</param>
            <param name="rect">Avaliable area to draw image.</param>
            <param name="boxRect">The box rect.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.IRendererCheckBox.DrawBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CheckState,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draws the box and check state.
            </summary>
            <param name="g">Device context</param>
            <param name="rect">The rect.</param>
            <param name="state">Check state.</param>
            <param name="drawState">Draw state.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.IRendererCheckBox.DrawText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws the text.
            </summary>
            <param name="g">Device context</param>
            <param name="s">Text to draw</param>
            <param name="font">The font.</param>
            <param name="rect">Avaliable area to draw text.</param>
            <param name="boxRect">CheckBox rect.</param>
            <param name="rectImg">Image area</param>
            <param name="showKeyboardCues">Show keyboard cues</param>
        </member>
        <member name="P:Stone.WinUI.IRendererCheckBox.CheckBox">
            <summary>
            Gets the checkbox control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererCheckBoxOffice2003.#ctor(Stone.WinUI.AsCheckBox)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererCheckBoxOffice2003"/> class.
            </summary>
            <param name="checkbox">The checkbox.</param>
        </member>
        <member name="M:Stone.WinUI.RendererCheckBoxOffice2003.DrawBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws background image.
            </summary>
            <param name="g">Device context</param>
            <param name="rect">m_CheckBox rect.</param>
        </member>
        <member name="M:Stone.WinUI.RendererCheckBoxOffice2003.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws focus rectangle.
            </summary>
            <param name="g">Device context</param>
            <param name="rect">Button rect</param>
            <param name="showFocusCues">if set to <c>true</c> [show focus cues].</param>
        </member>
        <member name="M:Stone.WinUI.RendererCheckBoxOffice2003.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws image.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">Avaliable area to draw image.</param>
            <param name="boxRect">The box rect.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.RendererCheckBoxOffice2003.DrawBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CheckState,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draws the box and check state.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="state">The state.</param>
            <param name="drawState">Draw state.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.RendererCheckBoxOffice2003.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CheckState,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draws the check box.
            </summary>
            <param name="g">The g.</param>
            <param name="boxRect">The box rect.</param>
            <param name="state">The state.</param>
            <param name="drawState">State of the draw.</param>
        </member>
        <member name="M:Stone.WinUI.RendererCheckBoxOffice2003.DrawText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws the text.
            </summary>
            <param name="g">Device context</param>
            <param name="s">Text to draw</param>
            <param name="font">The font.</param>
            <param name="rect">Avaliable area to draw text.</param>
            <param name="boxRect">CheckBox rect.</param>
            <param name="rectImg">Image area</param>
            <param name="showKeyboardCues">Show keyboard cues</param>
        </member>
        <member name="M:Stone.WinUI.RendererCheckBoxOffice2003.GetImageArea(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Size,System.Windows.Forms.TextImageRelation)">
            <summary>
            Gets the avaliable image area.
            </summary>
            <param name="clientRect">The client rect.</param>
            <param name="boxRect">The box rect.</param>
            <param name="imgSize">Size of the img.</param>
            <param name="textImageRelation">The text image relation.</param>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.RendererCheckBoxOffice2003.CheckBox">
            <summary>
            Gets the checkbox control.
            </summary>
            <value></value>
        </member>
        <member name="T:Stone.WinUI.Design.AsNavigatorDesigner">
            <summary>
            Designer for <see cref="T:Stone.WinUI.AsNavigator"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorDesigner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsNavigatorDesigner"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorDesigner.Dispose(System.Boolean)">
            <summary>
            Dispose designer.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The <see cref="T:System.ComponentModel.IComponent"/> to associate with the designer.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorDesigner.CanParent(System.Windows.Forms.Control)">
            <summary>
            Indicates whether the specified control can be a child of the control managed by this designer.
            </summary>
            <param name="control">The <see cref="T:System.Windows.Forms.Control"/> to test.</param>
            <returns>
            true if the specified control can be a child of the control managed by this designer; otherwise, false.
            </returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorDesigner.GetHitTest(System.Drawing.Point)">
            <summary>
            Indicates whether a mouse click at the specified point should be handled by the control.
            </summary>
            <param name="point">A <see cref="T:System.Drawing.Point"/> indicating the position at which the mouse was clicked, in screen coordinates.</param>
            <returns>
            true if a click at the specified point is to be handled by the control; otherwise, false.
            </returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component will expose through a <see cref="T:System.ComponentModel.TypeDescriptor"/>.
            </summary>
            <param name="properties">An <see cref="T:System.Collections.IDictionary"/> that contains the properties for the class of the component.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorDesigner.AddBand">
            <summary>
            Add new band.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorDesigner.RemoveBand">
            <summary>
            Remove selected band.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorDesigner.serviceChange_ComponentRemoving(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorDesigner.service_SelectionChanged(System.Object,System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Stone.WinUI.Design.AsNavigatorDesigner.AllowControlLasso">
            <summary>
            Gets a value indicating whether selected controls will be re-parented.
            </summary>
            <value></value>
            <returns>true if the controls that were selected by lassoing on the designer's surface will be re-parented to this designer's control.
            </returns>
        </member>
        <member name="P:Stone.WinUI.Design.AsNavigatorDesigner.AssociatedComponents">
            <summary>
            Gets the collection of components associated with the component managed by the designer.
            </summary>
            <value></value>
            <returns>
            The components that are associated with the component managed by the designer.
            </returns>
        </member>
        <member name="P:Stone.WinUI.Design.AsNavigatorDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value></value>
            <returns>
            The design-time action lists supported by the component associated with the designer.
            </returns>
        </member>
        <member name="T:Stone.WinUI.AsPanel">
            <summary>
            Represent as Panel supported corner and gradient.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsPanel"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsPanel.ScrollControlIntoView(System.Windows.Forms.Control)">
            <summary>
            Scrolls the control into view on an autoscroll enabled.
            </summary>
            <param name="activeControl">The active control.</param>
        </member>
        <member name="M:Stone.WinUI.AsPanel.SetAutoScrollMargin(System.Int32,System.Int32)">
            <summary>
            Sets the auto scroll margin.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Stone.WinUI.AsPanel.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Resize"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsPanel.OnPaddingChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.PaddingChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsPanel.DrawBorder(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draw border around control.
            </summary>
            <param name="g"></param>
            <param name="graphPath"></param>
        </member>
        <member name="M:Stone.WinUI.AsPanel.GetPath(System.Drawing.Rectangle,System.Windows.Forms.BorderStyle,System.Int32)">
            <summary>
            Get graphics path from border style.
            </summary>
            <param name="fromArea">From area.</param>
            <param name="borderStyle">The border style.</param>
            <param name="borderWidth">Width of the border.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsPanel.setCurveWidth(System.Int32,Stone.WinUI.Corners)">
            <summary>
            Set curve width.
            </summary>
            <param name="curve"></param>
            <param name="curveMode"></param>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.AsPanel.ContentPanel">
            <summary>
            Gets the content panel.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPanel.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:Stone.WinUI.AsPanel.ColorStart">
            <summary>
            The primary background color used to paint the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPanel.ColorStop">
            <summary>
            The secondary background color used to paint the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPanel.GradientMode">
            <summary>
            The gradient direction used to paint the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPanel.AutoScroll">
            <summary>
            Gets or sets a value indicating whether the container enables the user to scroll to any controls placed outside of its visible boundaries.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPanel.BackgroundImage">
            <summary>
            Gets or sets the background image displayed in the control.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Drawing.Image"/> that represents the image to display in the background of the control.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Stone.WinUI.AsPanel.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout"/> enumeration.
            </summary>
            <value></value>
            <returns>
            One of the values of <see cref="T:System.Windows.Forms.ImageLayout"/> (<see cref="F:System.Windows.Forms.ImageLayout.Center"/> , <see cref="F:System.Windows.Forms.ImageLayout.None"/>, <see cref="F:System.Windows.Forms.ImageLayout.Stretch"/>, <see cref="F:System.Windows.Forms.ImageLayout.Tile"/>, or <see cref="F:System.Windows.Forms.ImageLayout.Zoom"/>). <see cref="F:System.Windows.Forms.ImageLayout.Tile"/> is the default value.
            </returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The specified enumeration value does not exist.
            </exception>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Stone.WinUI.AsPanel.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value></value>
            <returns>
            The default <see cref="T:System.Drawing.Size"/> of the control.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsPanel.HorizontalScroll">
            <summary>
            Gets the characteristics associated with the horizontal scroll bar.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPanel.VerticalScroll">
            <summary>
            Gets the characteristics associated with the vertical scroll bar.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPanel.BorderColor">
            <summary>
            Gets or Sets border color used to paint the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPanel.TabStop">
            <summary>
            Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.
            </summary>
            <value></value>
            <returns>true if the user can give the focus to the control using the TAB key; otherwise, false. The default is true.
            Note:
            This property will always return
            true for an instance of the <see cref="T:System.Windows.Forms.Form"/> class.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
            	<IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Stone.WinUI.AsPanel.DisplayRectangle">
            <summary>
            Gets the rectangle that represents the virtual display area of the control.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> that represents the display area of the control.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsPanel.VerticalScrollArea">
            <summary>
            Gets the vertical scrollbar area.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPanel.HorizontalScrollArea">
            <summary>
            Gets the horizontal scrollbar area.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPanel.BorderWidth">
            <summary>
            Gets or Sets width of the border used to paint the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPanel.RadiusCorner">
            <summary>
            Get or set the radius corner of the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPanel.RendererType">
            <summary>
            Get or set the render type of control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPanel.Corner">
            <summary>
            Gets or sets the corner to draw.
            </summary>
            <value>The corner.</value>
        </member>
        <member name="T:Stone.WinUI.AsGridDataChangedEventArgs">
            <summary>
            EventArgs when data has been changed.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridDataChangedEventArgs.#ctor">
            <summary>
            Initialized.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataChangedEventArgs.ColIndex">
            <summary>
            Get Column Index (int)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataChangedEventArgs.Field">
            <summary>
            Get field name.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataChangedEventArgs.RowIndex">
            <summary>
            Get Row Index (int)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataChangedEventArgs.RowView">
            <summary>
            Get <see cref="T:System.Data.DataRowView"/> of the row.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataChangedEventArgs.Value">
            <summary>
            Get the new <see cref="T:System.Object"/> value from user changing.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Forms.AsToolTipEditorForm">
            <summary>
            SuperToolTip Editor Form
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.AsToolTipEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.AsToolTipEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.AsToolTipEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.AsToolTipEditorForm.#ctor(Stone.WinUI.AsToolTip)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Forms.AsToolTipEditorForm"/> class.
            </summary>
            <param name="designToolTip">The design tool tip.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.AsToolTipEditorForm.panelHoverPreview_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            Preview tooltip
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.Forms.AsToolTipEditorForm.panelHoverPreview_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            Hide preview tooltip
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.Forms.AsToolTipEditorForm.panelHoverPreview_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paint test.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.Forms.AsToolTipEditorForm.linkLabel1_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Choose body image.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.Forms.AsToolTipEditorForm.linkLabel2_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Clear body image.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Stone.WinUI.Forms.AsToolTipEditorForm.ToolTipInfo">
            <summary>
            Gets or sets the tool tip info.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.AsToolTipEditorForm.ServiceProvider">
            <summary>
            Gets or sets the service provider.
            เอาไว้ใช้เรียก ImageEditor เพื่อจะได้เรียกใช้ Image ที่อยู่ใน Project ได้
            </summary>
        </member>
        <member name="T:Stone.WinUI.StyleButtonEditBox">
            <summary>
            Style of button in EditBox.
            </summary>
        </member>
        <member name="M:Stone.WinUI.StyleButtonEditBox.#ctor">
            <summary>
            Initializes the <see cref="T:Stone.WinUI.StyleButtonEditBox"/> class.
            </summary>
        </member>
        <member name="F:Stone.WinUI.StyleButtonEditBox.m_ButtonImage">
            <summary>
            Dictionary of button image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.StyleButtonEditBox.ButtonColor">
            <summary>
            Gets or sets the color of the button in all EditBox.
            </summary>
        </member>
        <member name="P:Stone.WinUI.StyleButtonEditBox.FunctionKey">
            <summary>
            Gets or sets the function key, default = F4.
            </summary>
        </member>
        <member name="P:Stone.WinUI.StyleButtonEditBox.TaxRate">
            <summary>
            Gets or sets the tax rate.
            </summary>
        </member>
        <member name="P:Stone.WinUI.StyleButtonEditBox.AsColorBox">
            <summary>
            Gets or sets the button image of <see cref="P:Stone.WinUI.StyleButtonEditBox.AsColorBox"/>
            </summary>
        </member>
        <member name="P:Stone.WinUI.StyleButtonEditBox.AsDateBox">
            <summary>
            Gets or sets the button image of <see cref="P:Stone.WinUI.StyleButtonEditBox.AsDateBox"/>
            </summary>
        </member>
        <member name="P:Stone.WinUI.StyleButtonEditBox.AsFileBox">
            <summary>
            Gets or sets the button image of <see cref="P:Stone.WinUI.StyleButtonEditBox.AsFileBox"/>
            </summary>
        </member>
        <member name="P:Stone.WinUI.StyleButtonEditBox.AsFileBoxExecute">
            <summary>
            Gets or sets the execute button image of <see cref="P:Stone.WinUI.StyleButtonEditBox.AsFileBox"/>
            </summary>
        </member>
        <member name="P:Stone.WinUI.StyleButtonEditBox.AsListIndexBox">
            <summary>
            Gets or sets the button image of <see cref="P:Stone.WinUI.StyleButtonEditBox.AsListIndexBox"/>
            </summary>
        </member>
        <member name="P:Stone.WinUI.StyleButtonEditBox.AsLookupBox">
            <summary>
            Gets or sets the button image of <see cref="P:Stone.WinUI.StyleButtonEditBox.AsLookupBox"/>
            </summary>
        </member>
        <member name="P:Stone.WinUI.StyleButtonEditBox.AsRangeLookupBox">
            <summary>
            Gets or sets the button image of <see cref="P:Stone.WinUI.StyleButtonEditBox.AsRangeLookupBox"/>
            </summary>
        </member>
        <member name="P:Stone.WinUI.StyleButtonEditBox.AsNumberBox">
            <summary>
            Gets or sets the button image of <see cref="P:Stone.WinUI.StyleButtonEditBox.AsNumberBox"/>
            </summary>
        </member>
        <member name="P:Stone.WinUI.StyleButtonEditBox.AsSearchBox">
            <summary>
            Gets or sets the button image of <see cref="P:Stone.WinUI.StyleButtonEditBox.AsSearchBox"/>
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsEditorProvider">
            <summary>
            Editor service provider.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditorProvider.#ctor(System.ComponentModel.IContainer,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsEditorProvider"/> class.
            </summary>
            <param name="cont">The cont.</param>
            <param name="provider">The provider.</param>
        </member>
        <member name="T:Stone.WinUI.Renderers.OfficeXPColorTable">
            <summary>
            Provide OfficeXP Theme colors
            </summary>
        </member>
        <member name="T:Stone.WinUI.Renderers.ProfessionalColorTableX">
            <summary>
            Provides colors used for Microsoft Office display elements.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Renderers.ProfessionalColorTableX.FromKnownColor(Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors)">
            <summary>
            Froms the color of the known.
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Renderers.ProfessionalColorTableX.#ctor">
            <summary>
            Initialize a new instance of the ProfessionalColorTable class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Renderers.ProfessionalColorTableX.InitColors(System.Collections.Generic.Dictionary{Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors,System.Drawing.Color}@)">
            <summary>
            Initialize a color Dictionary with defined colors
            </summary>
            <param name="rgbTable">Dictionary with defined colors</param>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ContextMenuItemText">
            <summary>
            Gets the context menu item text.
            </summary>
            <value>The context menu item text.</value>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.MenuItemText">
            <summary>
            Gets the text color of a top-level ToolStripMenuItem.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.StatusStripText">
            <summary>
            Gets the text color used on the StatusStrip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ButtonPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ButtonPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ButtonPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ButtonSelectedBorder">
            <summary>
            Gets the starting color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ButtonSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ButtonSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ButtonSelectedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ButtonSelectedHighlightBorder">
            <summary>
            Gets the border color to use with ButtonSelectedHighlight.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.CheckBackground">
            <summary>
            Gets the solid color to use when the check box is selected and gradients are being used.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.CheckSelectedBackground">
            <summary>
            Gets the solid color to use when the check box is selected and gradients are being used.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.GripDark">
            <summary>
            Gets the color to use for shadow effects on the grip or move handle.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.GripLight">
            <summary>
            Gets the color to use for highlight effects on the grip or move handle.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ImageMarginGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.MenuBorder">
            <summary>
            Gets the border color or a MenuStrip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.MenuItemBorder">
            <summary>
            Gets the border color to use with a ToolStripMenuItem.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.MenuItemPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.MenuItemPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.MenuItemPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.MenuItemSelected">
            <summary>
            Gets the solid color to use when a ToolStripMenuItem other than the top-level ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.MenuItemSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.MenuItemSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.MenuStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.MenuStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.OverflowButtonGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.OverflowButtonGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.OverflowButtonGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.RaftingContainerGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.RaftingContainerGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.SeparatorDark">
            <summary>
            Gets the color to use to for shadow effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.SeparatorLight">
            <summary>
            Gets the color to use to for highlight effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.StatusStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.StatusStripGradientEnd">
            <summary>
            Gets the end color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ToolStripBorder">
            <summary>
            Gets the border color to use on the bottom edge of the ToolStrip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ToolStripContentPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ToolStripContentPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ToolStripDropDownBackground">
            <summary>
            Gets the solid background color of the ToolStripDropDown.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ToolStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ToolStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ToolStripGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ToolStripPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ToolStripPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.UseProfessionalColors">
            <summary>
            Gets or sets a value indicating whether to use the extended colors.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.UseSystemColors">
            <summary>
            Gets or sets a value indicating whether to use <see cref="T:System.Drawing.SystemColors"/> 
            rather than <see cref="T:System.Drawing.Color"/> that match the current visual style.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.ProfessionalColorTableX.ColorTable">
            <summary>
            Gets the color table.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors">
            <summary>
            Gets or sets the KnownColors appearance of the ProfessionalColorTable.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ButtonPressedGradientBegin">
            <summary>
            The starting color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ButtonPressedGradientEnd">
            <summary>
            The end color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ButtonPressedGradientMiddle">
            <summary>
            The middle color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ButtonSelectedGradientBegin">
            <summary>
            The starting color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ButtonSelectedBorder">
            <summary>
            The border color to use with the ButtonSelectedGradientBegin,
            ButtonSelectedGradientMiddle,
            and ButtonSelectedGradientEnd colors.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ButtonSelectedGradientEnd">
            <summary>
            The end color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ButtonSelectedGradientMiddle">
            <summary>
            The middle color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ButtonSelectedHighlightBorder">
            <summary>
            The border color to use with ButtonSelectedHighlight.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.CheckBackground">
            <summary>
            The solid color to use when the check box is selected and gradients are being used.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.CheckSelectedBackground">
            <summary>
            The solid color to use when the check box is selected and gradients are being used.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ContextMenuItemText">
            <summary>
            The text color of a top-level ContextMenuItemText.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.GripDark">
            <summary>
            The color to use for shadow effects on the grip or move handle.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.GripLight">
            <summary>
            The color to use for highlight effects on the grip or move handle.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ImageMarginGradientBegin">
            <summary>
            The starting color of the gradient used in the image margin
            of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.MenuBorder">
            <summary>
            The border color or a MenuStrip.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.MenuItemBorder">
            <summary>
            The border color to use with a ToolStripMenuItem.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.MenuItemPressedGradientBegin">
            <summary>
            The starting color of the gradient used when a top-level
            ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.MenuItemPressedGradientEnd">
            <summary>
            The end color of the gradient used when a top-level
            ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.MenuItemPressedGradientMiddle">
            <summary>
            The middle color of the gradient used when a top-level
            ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.MenuItemText">
            <summary>
            The text color of a top-level ToolStripMenuItem.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.MenuItemSelected">
            <summary>
            The solid color to use when a ToolStripMenuItem other
            than the top-level ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.MenuItemSelectedGradientBegin">
            <summary>
            The starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.MenuItemSelectedGradientEnd">
            <summary>
            The end color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.MenuStripGradientBegin">
            <summary>
            The starting color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.MenuStripGradientEnd">
            <summary>
            The end color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.OverflowButtonGradientBegin">
            <summary>
            The starting color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.OverflowButtonGradientEnd">
            <summary>
            The end color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.OverflowButtonGradientMiddle">
            <summary>
            The middle color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.RaftingContainerGradientBegin">
            <summary>
            The starting color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.RaftingContainerGradientEnd">
            <summary>
            The end color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.SeparatorDark">
            <summary>
            The color to use to for shadow effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.SeparatorLight">
            <summary>
            The color to use to for highlight effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.StatusStripGradientBegin">
            <summary>
            The starting color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.StatusStripGradientEnd">
            <summary>
            The end color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.StatusStripText">
            <summary>
            The text color used on the StatusStrip.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ToolStripBorder">
            <summary>
            The border color to use on the bottom edge of the ToolStrip.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ToolStripContentPanelGradientBegin">
            <summary>
            The starting color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ToolStripContentPanelGradientEnd">
            <summary>
            The end color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ToolStripDropDownBackground">
            <summary>
            The solid background color of the ToolStripDropDown.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ToolStripGradientBegin">
            <summary>
            The starting color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ToolStripGradientEnd">
            <summary>
            The end color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ToolStripGradientMiddle">
            <summary>
            The middle color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ToolStripPanelGradientBegin">
            <summary>
            The starting color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.ToolStripPanelGradientEnd">
            <summary>
            The end color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors.LastKnownColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.StatusStripGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.StatusStripGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ButtonCheckedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ButtonCheckedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ButtonCheckedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ButtonPressedBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ButtonPressedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ButtonPressedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ButtonPressedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ButtonSelectedBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ButtonSelectedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ButtonSelectedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ButtonSelectedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.CheckBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.CheckPressedBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.CheckSelectedBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.GripDark">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.GripLight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ImageMarginGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ImageMarginGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ImageMarginGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ImageMarginRevealedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ImageMarginRevealedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ImageMarginRevealedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.MenuBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.MenuItemBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.MenuItemPressedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.MenuItemPressedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.MenuItemPressedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.MenuItemSelected">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.MenuItemSelectedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.MenuItemSelectedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.MenuStripGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.MenuStripGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.OverflowButtonGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.OverflowButtonGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.OverflowButtonGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.RaftingContainerGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.RaftingContainerGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.SeparatorDark">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.SeparatorLight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ToolStripBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ToolStripDropDownBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ToolStripGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ToolStripGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ToolStripGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ToolStripPanelGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.OfficeXPColorTable.ToolStripPanelGradientEnd">
            <inheritdoc />
        </member>
        <member name="T:Stone.WinUI.Renderers.Office2003SilverColorTable">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.Renderers.Office2003SilverColorTable.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonCheckedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonCheckedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonCheckedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonCheckedHighlight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonCheckedHighlightBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonPressedBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonPressedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonPressedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonPressedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonPressedHighlight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonPressedHighlightBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonSelectedBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonSelectedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonSelectedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonSelectedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonSelectedHighlight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ButtonSelectedHighlightBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.CheckBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.CheckPressedBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.CheckSelectedBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.GripDark">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.GripLight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ImageMarginGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ImageMarginGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ImageMarginGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ImageMarginRevealedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ImageMarginRevealedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ImageMarginRevealedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.MenuBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.MenuItemBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.MenuItemPressedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.MenuItemPressedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.MenuItemPressedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.MenuItemSelected">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.MenuItemSelectedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.MenuItemSelectedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.MenuStripGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.MenuStripGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.OverflowButtonGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.OverflowButtonGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.OverflowButtonGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.RaftingContainerGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.RaftingContainerGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.SeparatorDark">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.SeparatorLight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.StatusStripGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.StatusStripGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ToolStripBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ToolStripContentPanelGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ToolStripContentPanelGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ToolStripDropDownBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ToolStripGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ToolStripGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ToolStripGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ToolStripPanelGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003SilverColorTable.ToolStripPanelGradientEnd">
            <inheritdoc />
        </member>
        <member name="T:Stone.WinUI.AsLicense">
            <summary>
            Provides the license.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLicense.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsLicense"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLicense.Dispose">
            <summary>
            Disposes of the resources used by the license.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLicense.LicenseKey">
            <summary>
            Gets the license key granted to this component.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLicense.Trial">
            <summary>
            Get the indicator of trial mode.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLicense.Locked">
            <summary>
            Get the indicator of locked.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Forms.ColumnDragForm">
            <summary>
            Column dragging.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.ColumnDragForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.ColumnDragForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.ColumnDragForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.ColumnDragForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Forms.ColumnDragForm"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.ColumnDragForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            On paint.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.Forms.ColumnDragForm.Show(System.Drawing.Point)">
            <summary>
            Show while dragging.
            </summary>
            <param name="location"></param>
        </member>
        <member name="P:Stone.WinUI.Forms.ColumnDragForm.ColumnIndex">
            <summary>
            Get or set the moving Column Index.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.ColumnDragForm.ShowWithoutActivation">
            <summary>
            Always true.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Markup.MarkupText">
            <summary>
            Markup text to display in html style.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Markup.MarkupText.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Markup.MarkupText"/> class.
            </summary>
            <param name="renderAtControl">The control to render html.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Stone.WinUI.Markup.MarkupText.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Markup.MarkupText.OnHyperLinkClick(Stone.WinUI.Markup.HyperLinkEventArgs)">
            <summary>
            Raises the <see cref="E:HyperLinkClick"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.Markup.HyperLinkEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Stone.WinUI.Markup.MarkupText.mHtmlNameTable">
            <summary>
            A class level NameTable to attempt to speed up the XML/HTML reading.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Markup.MarkupText.m_Bounds">
            <summary>
            Area to draw
            </summary>
        </member>
        <member name="F:Stone.WinUI.Markup.MarkupText.m_StringFormat">
            <summary>
            <see cref="T:System.Drawing.StringFormat"/> to measure and draw.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Markup.MarkupText.ParseElement(System.String)">
            <summary>
            Converts the HTML tag to an TagTypes enumerated object.
            </summary>
            <param name="name">The HTML tag to convert.</param>
            <returns>The resulting <see cref="T:Stone.WinUI.Markup.TagTypes"/>.</returns>
            <remarks>
            This conversion is case insensitive and matches on the Tag attribute attached to the
            TagTypes enum members using System.Reflection.
            </remarks>
        </member>
        <member name="M:Stone.WinUI.Markup.MarkupText.BuildElementEnd(System.Xml.XmlTextReader,System.Collections.Stack)">
            <summary>
            Process an EndElement node type as defined by <see cref="T:Stone.WinUI.Markup.TagTypes"/>.
            </summary>
            <param name="xmlReader">The <see cref="T:System.Xml.XmlTextReader"/> used to process the <c>Element</c> node.</param>
            <param name="stack">The <see cref="T:System.Collections.Stack"/> used in parsing the HTML.</param>
            <returns>Returns the <see cref="T:Stone.WinUI.Markup.TagTypes"/> that was processed.</returns>
            <remarks>
            The XmlTextReader will complain about any mismatched EndElements so we don't need to worry
            about that here.
            </remarks>
        </member>
        <member name="M:Stone.WinUI.Markup.MarkupText.HitTest(System.Drawing.Point)">
            <summary>
            Hit test.
            </summary>
            <param name="pt">The pt.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Markup.MarkupText.Render(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Padding,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            Render text to html style.
            </summary>
            <param name="g">The g.</param>
            <param name="bounds">The bounds.</param>
            <param name="padding">Padding around string.</param>
            <param name="html">The HTML to render.</param>
            <param name="font">The font.</param>
            <param name="foreColor">Color of the fore.</param>
            <param name="backColor">Color of the back.</param>
            <param name="drawWithCache">if set to <c>true</c> [draw with cache].</param>
            <remarks>
            Dummy &lt;html&gt; root tags are added to <paramref name="html"/> to satisfy the <see cref="T:System.Xml.XmlTextReader"/> class.
            <para/>
            An <see cref="T:System.Xml.XmlTextWriter"/> is used to build the <see cref="P:Stone.WinUI.Markup.HyperLink.InnerHtml"/> property of the <see cref="T:Stone.WinUI.Markup.HyperLink"/> object.
            <para/>
            The only XML node types we are interested in are <see cref="F:System.Xml.XmlNodeType.Element"/> that represent the HTML start tag,
            <see cref="F:System.Xml.XmlNodeType.EndElement"/> that represent the end tag and <see cref="F:System.Xml.XmlNodeType.Element"/> that
            represents the text.
            <para/>
            A <see cref="T:System.Collections.Stack"/> object is used to parse the HTML document tree, the stack can only contain
            <see cref="T:Stone.WinUI.Markup.StackItem"/> objects, which contain sufficent information to render the part of the tree.
            <para/>
            The IMG tag is different from the rest as it is an empty tag (no end tag), so the stack processing
            needs to be different.
            </remarks>
        </member>
        <member name="M:Stone.WinUI.Markup.MarkupText.BuildElement(System.Xml.XmlTextReader,System.Collections.Stack)">
            <summary>
            Process an Element node type defined by <see cref="T:Stone.WinUI.Markup.TagTypes"/>.
            </summary>
            <param name="xmlReader">The <see cref="T:System.Xml.XmlTextReader"/> used to process the <c>Element</c> node.</param>
            <param name="stack">The <see cref="T:System.Collections.Stack"/> used in parsing the HTML.</param>
            <returns>
            Returns the <see cref="T:Stone.WinUI.Markup.TagTypes"/> that was processed.
            </returns>
            <remarks>
            Only a few attributes are processed but we attempt to maintain all attributes to be returned in the
            <see cref="P:Stone.WinUI.Markup.HyperLink.InnerHtml"/> property, refer to the default case in the switch statement.
            All branches that are not processed by lower methods end up in the default case.
            </remarks>
        </member>
        <member name="M:Stone.WinUI.Markup.MarkupText.BuildElementAnchor(System.Xml.XmlTextReader,System.Collections.Stack,Stone.WinUI.Markup.StackItem)">
            <summary>
            Processes the Anchor tag.
            </summary>
            <param name="xmlReader">The <see cref="T:System.Xml.XmlTextReader"/> used to process the <c>Element</c> node.</param>
            <param name="stack">The <see cref="T:System.Collections.Stack"/> used in parsing the HTML.</param>
            <param name="stackItem">The <see cref="T:Stone.WinUI.Markup.StackItem"/> that is at the top of the stack.</param>
            <exception cref="T:System.ArgumentException">Thrown when an attempt is made to nest anchor &lt;A&gt; tags is detected.</exception>
            <remarks>
            A <see cref="T:Stone.WinUI.Markup.StackItem"/> is added to the stack regardless of whether the link is correctly defined
            to simplify removing items from the stack when we get to the &lt;/A&gt; tag.
            </remarks>
        </member>
        <member name="M:Stone.WinUI.Markup.MarkupText.BuildElementFont(System.Xml.XmlTextReader,System.Collections.Stack,Stone.WinUI.Markup.StackItem)">
            <summary>
            Processes the Font tag.
            </summary>
            <param name="xmlReader">The <see cref="T:System.Xml.XmlTextReader"/> used to process the <c>Element</c> node.</param>
            <param name="stack">The <see cref="T:System.Collections.Stack"/> used in parsing the HTML.</param>
            <param name="stackItem">The <see cref="T:Stone.WinUI.Markup.StackItem"/> that is at the top of the stack.</param>
            <remarks>
            A <see cref="T:Stone.WinUI.Markup.StackItem"/> is added to the stack regardless of whether the link is correctly defined
            to simplify removing items from the stack when we get to the &lt;/FONT&gt; tag.
            </remarks>
        </member>
        <member name="M:Stone.WinUI.Markup.MarkupText.RenderString(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Padding,Stone.WinUI.Markup.StackItem,System.Drawing.PointF@)">
            <summary>
            Renders a String.
            </summary>
            <param name="g">The g.</param>
            <param name="bounds">The bounds.</param>
            <param name="padding">Padding around the string.</param>
            <param name="stackItem">A <see cref="T:Stone.WinUI.Markup.StackItem"/> that defines the string to be drawn.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
            <remarks>
            The string drawn by <c>RenderString</c> is the smallest string unit we deal with.
            <para/>
            The whole string is drawn with the same font attributes.  So although <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)"/>
            could handle multiple <see cref="T:System.Drawing.CharacterRange"/> objects here we'll only ever have one.
            <para/>
            </remarks>
        </member>
        <member name="M:Stone.WinUI.Markup.MarkupText.MeasureTextGdi(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32)">
            <summary>
            Measures text with gdi technic.
            </summary>
            <param name="g">The g.</param>
            <param name="s">The s.</param>
            <param name="font">The font.</param>
            <param name="maxWidth">Width of the max.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Markup.MarkupText.ContainsHtmlTag(System.String)">
            <summary>
            Determines the specified text contain HTML TAG.
            </summary>
            <param name="htmlText">The HTML text.</param>
        </member>
        <member name="M:Stone.WinUI.Markup.MarkupText.DrawTextGdi(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.SolidBrush,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draw text with gdi.
            </summary>
            <param name="g">The g.</param>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="br">The br.</param>
            <param name="pointF">The point F.</param>
            <param name="sizeF">The size F.</param>
        </member>
        <member name="E:Stone.WinUI.Markup.MarkupText.HyperLinkClick">
            <summary>
            Occurs when <see cref="T:Stone.WinUI.Markup.HyperLink"/> click.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.MarkupText.HyperLinks">
            <summary>
            Gets the list of hyperlink.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.MarkupText.HtmlNameTable">
            <summary>
            Gets a class level NameTable to attempt to speed up the XML/HTML reading.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.MarkupText.HasHyperLink">
            <summary>
            Gets a value indicating whether this instance has hyperlink[s].
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridHeaderStripEventArgs">
            <summary>
            Event args for header context strip.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridHeaderStripEventArgs.#ctor(System.Windows.Forms.ContextMenuStrip,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridHeaderStripEventArgs"/> class.
            </summary>
            <param name="colContext">The col context.</param>
            <param name="field">The field.</param>
        </member>
        <member name="P:Stone.WinUI.AsGridHeaderStripEventArgs.Cancel">
            <summary>
            Get or set the wheather to ignore when <b>true</b>, otherwise <b>false</b>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridHeaderStripEventArgs.HeaderStrip">
            <summary>
            Get the HeaderStrip (ContextMenuStrip)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridHeaderStripEventArgs.FieldName">
            <summary>
            Get the FieldName (string)
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridHeaderActionEventArgs">
            <summary>
            Event args for clicked at column of control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridHeaderActionEventArgs.#ctor(System.Int32,Stone.WinUI.AsGridViewColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridHeaderActionEventArgs"/> class.
            </summary>
            <param name="index"></param>
            <param name="col"></param>
        </member>
        <member name="P:Stone.WinUI.AsGridHeaderActionEventArgs.ColumnIndex">
            <summary>
            Gets the index of the column.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridHeaderActionEventArgs.Column">
            <summary>
            Gets the column.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridHeaderActionEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Stone.WinUI.AsGridHeaderActionEventArgs"/> is cancel.
            </summary>
            <value><c>true</c> if cancel; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Stone.WinUI.AsGridDataNewRowEventArgs">
            <summary>
            EventArgs for event BeforeAddNewRow and AddNewRow
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridDataNewRowEventArgs.#ctor">
            <summary>
            Initialized.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridDataNewRowEventArgs.#ctor(System.Int32,System.Data.DataRowView)">
            <summary>
            Innitialized with arguments.
            </summary>
            <param name="rowIndex"></param>
            <param name="rowView"></param>
        </member>
        <member name="P:Stone.WinUI.AsGridDataNewRowEventArgs.RowIndex">
            <summary>
            Get RowIndex (int)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataNewRowEventArgs.RowView">
            <summary>
            Get <see cref="T:System.Data.DataRowView"/> of the row.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataNewRowEventArgs.Cancel">
            <summary>
            Get or set the indicator to ignore(true) or accept(false).
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsMirror">
            <summary>
            Represent as mirror of control or image.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsMirror.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsMirror"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsMirror.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control"/> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.AsMirror.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Resize"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsMirror.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsMirror.m_SelectedControl_Invalidated(System.Object,System.Windows.Forms.InvalidateEventArgs)">
            <summary>
            Repaint when selected control invalidate.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsMirror.CropImage(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Crop the image at specific area.
            </summary>
            <param name="bmp">The BMP.</param>
            <param name="cropRect">The crop rect.</param>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.AsMirror.MirrorDirection">
            <summary>
            Gets or sets the mirror direction.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsMirror.AutoSizeMirror">
            <summary>
            Gets or Sets the size of control is dependency with reflection level.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsMirror.Image">
            <summary>
            Gets or sets the image to show in this mirror. Priority is SelectedControl, Image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsMirror.ImageTransparentColor">
            <summary>
            Get or set the transparent color on the image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsMirror.ReflectLevel">
            <summary>
            Gets or sets the mirror alpha from 0-255, default=90.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsMirror.SelectedControl">
            <summary>
            Gets or sets the control to draw mirror. Priority is SelectedControl, Image.
            </summary>
        </member>
        <member name="T:Stone.WinUI.StyleFormat">
            <summary>
            Standard display format.
            </summary>
        </member>
        <member name="M:Stone.WinUI.StyleFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.StyleFormat"/> class.
            </summary>
        </member>
        <member name="P:Stone.WinUI.StyleFormat.ShortDateFormat">
            <summary>
            Gets or Sets the short date format, default=dd/MM/yyyy
            <para>
            This format use in <see cref="T:Stone.WinUI.AsDateBox"/> when control receive focus 
            and grid column(<see cref="T:Stone.WinUI.AsGridViewColumn"/>, <see cref="T:Stone.WinUI.AsGridDataColumn"/>) when ColumnFormat = Date.
            </para>
            </summary>
            <value>The short date format.</value>
        </member>
        <member name="P:Stone.WinUI.StyleFormat.ShortStringDateFormat">
            <summary>
            Gets the short string date format, default=d MMM yyyy
            <para>This format use in <see cref="T:Stone.WinUI.AsDateBox"/> when control not focus.</para>
            </summary>
            <value>The short string date format.</value>
        </member>
        <member name="P:Stone.WinUI.StyleFormat.NumberFormat">
            <summary>
            Gets the number format, default={0:#,0.00}
            <para>
            This format use in <see cref="T:Stone.WinUI.AsNumberBox"/> when control not focus 
            and grid column(<see cref="T:Stone.WinUI.AsGridViewColumn"/>, <see cref="T:Stone.WinUI.AsGridDataColumn"/>) when ColumnFormat = Money.
            </para>
            </summary>
            <value>The number format.</value>
        </member>
        <member name="P:Stone.WinUI.StyleFormat.TimeFormat">
            <summary>
            Gets the time format, default=HH:mm
            <para>This format use in <see cref="T:Stone.WinUI.AsTimeBox"/>.</para>
            </summary>
            <value>The time format.</value>
        </member>
        <member name="P:Stone.WinUI.StyleFormat.LookupFormat">
            <summary>
            Gets the lookup format, default=DisplayMemberOnly
            <para>This format use in <see cref="T:Stone.WinUI.AsLookupBox"/> when control not focus.</para>
            </summary>
            <value>The lookup format.</value>
        </member>
        <member name="P:Stone.WinUI.StyleFormat.Culture">
            <summary>
            Gets the custom culture for user interface, default=en-US
            </summary>
            <value>The culture.</value>
        </member>
        <member name="P:Stone.WinUI.StyleFormat.Calendar">
            <summary>
            Gets the custom calendar for display datetime style, default=GregorianCalendar
            </summary>
            <value>The calendar.</value>
        </member>
        <member name="T:Stone.WinUI.QuickSearchedEventArgs">
            <summary>
            EventArgs for qucick search finished.
            </summary>
        </member>
        <member name="M:Stone.WinUI.QuickSearchedEventArgs.#ctor(System.String,System.Data.DataRowView)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.QuickSearchedEventArgs"/> class.
            </summary>
            <param name="field">Field name</param>
            <param name="selectedRow">Selected row</param>
        </member>
        <member name="P:Stone.WinUI.QuickSearchedEventArgs.Field">
            <summary>
            Gets the field name.
            </summary>
        </member>
        <member name="P:Stone.WinUI.QuickSearchedEventArgs.SelectedRow">
            <summary>
            Get the selected <see cref="T:System.Data.DataRowView"/> from user.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsBandCollectionEditor">
            <summary>
            Class created so we can force an invalidation/update 
            on the control when the column editor returns.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsBandCollectionEditor.#ctor(System.Type)">
            <summary>
            Default Constructor for custom column collection editor
            </summary>
            <param name="type"></param>
        </member>
        <member name="F:Stone.WinUI.Design.AsBandCollectionEditor.parent">
            <summary>
            Internal parent host control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsBandCollectionEditor.GetDisplayText(System.Object)">
            <summary>
            แสดงรายนามของสมาชิกใน Collection ด้วยรูปแบบชื่อที่กำหนดคือ Name, Text
            </summary>
            <param name="value">The list item for which to retrieve display text.</param>
            <returns>
            The display text for <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsBandCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit a value in collection editor
            </summary>
            <param name="context"></param>
            <param name="isp"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsBandCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get modal dialog.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsBandCollectionEditor.CreateCollectionForm">
            <summary>
            Creates a new form to display and edit the current collection
            </summary>
            <returns>An instance of CollectionEditor.CollectionForm to provide as the 
            user interface for editing the collection</returns>
        </member>
        <member name="T:Stone.WinUI.Design.AsContainerDesigner">
            <summary>
            Designer for <see cref="T:Stone.WinUI.AsContainer"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsContainerDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The <see cref="T:System.ComponentModel.IComponent"/> to associate with the designer.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsContainerDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component will expose through a <see cref="T:System.ComponentModel.TypeDescriptor"/>.
            </summary>
            <param name="properties">An <see cref="T:System.Collections.IDictionary"/> that contains the properties for the class of the component.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsContainerDesigner.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages and optionally routes them to the control.
            </summary>
            <param name="m">The <see cref="T:System.Windows.Forms.Message"/> to process.</param>
        </member>
        <member name="P:Stone.WinUI.Design.AsContainerDesigner.SelectionRules">
            <summary>
            Gets the selection rules that indicate the movement capabilities of a component.
            </summary>
            <value></value>
            <returns>
            A bitwise combination of <see cref="T:System.Windows.Forms.Design.SelectionRules"/> values.
            </returns>
        </member>
        <member name="T:Stone.WinUI.DataColorChangeEventArgs">
            <summary>
            EventArgs for <see cref="T:System.Drawing.Color"/> change.
            </summary>
        </member>
        <member name="T:Stone.WinUI.DataChangeEventArgs">
            <summary>
            Base EventArgs for Data change <see cref="T:System.String"/> in edit box.
            </summary>
        </member>
        <member name="M:Stone.WinUI.DataChangeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.DataChangeEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Stone.WinUI.DataChangeEventArgs.NewValue">
            <summary>
            Get new value <see cref="T:System.String"/> data.
            </summary>
        </member>
        <member name="P:Stone.WinUI.DataChangeEventArgs.Text">
            <summary>
            Get string display on text box.
            </summary>
        </member>
        <member name="P:Stone.WinUI.DataChangeEventArgs.Tag">
            <summary>
            Gets the extra object.
            </summary>
        </member>
        <member name="P:Stone.WinUI.DataChangeEventArgs.Cancel">
            <summary>
            Get or set flag to true if ignore changed, otherwise false.
            </summary>
        </member>
        <member name="M:Stone.WinUI.DataColorChangeEventArgs.#ctor">
            <summary>
            Innitialized.
            </summary>
        </member>
        <member name="P:Stone.WinUI.DataColorChangeEventArgs.NewValue">
            <summary>
            Get new value <see cref="T:System.Drawing.Color"/> data.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Helper.TString">
            <summary>
            String Helper.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Helper.TString.TrimSpace(System.String)">
            <summary>
            Trim all space to single space.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.TString.StripHtml(System.String)">
            <summary>
            Remove tag html from specific text.
            </summary>
            <param name="htmlText">The input string.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.TString.Match(System.String,System.String)">
            <summary>
            Matches the specified input.
            </summary>
            <param name="input">The input.</param>
            <param name="wordToMatching">The word to matching.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.TString.TruncateString(System.String,System.Int32,System.Drawing.Graphics,System.Drawing.Font)">
            <summary>
            Truncate a string.
            
            This function also handles truncation of multiline strings
            </summary>
            <param name="s"></param>
            <param name="width"></param>
            <param name="dc"></param>
            <param name="font"></param>
            <returns>Truncated string</returns>
        </member>
        <member name="M:Stone.WinUI.Helper.TString.MeasureMultiLineString(System.String,System.Drawing.Graphics,System.Drawing.Font)">
            <summary>
            Measure a multi line string.
            <para>Note. Multi line string contain char(13)</para>
            </summary>
            <param name="s"></param>
            <param name="dc"></param>
            <param name="font"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.TString.GetControlSize(System.IntPtr,System.Drawing.Font,System.String)">
            <summary>
            Get default control size from font and string.
            </summary>
            <param name="handle">Control Handle</param>
            <param name="font">Current font of the control</param>
            <param name="s">Current text of the control</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.TString.Compare(System.String,System.String)">
            <summary>
            Compare 2 string, use ignore-case.
            </summary>
            <param name="strA"></param>
            <param name="strB"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.TString.EscapeStringFilter(System.String)">
            <summary>
            Escapes the string before row filter to <see cref="T:System.Data.DataView"/>.
            </summary>
            <param name="s">Original word</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.TString.RemoveAtLast(System.String,System.String)">
            <summary>
            Remove once, start at last position of the original string.
            </summary>
            <param name="original">Original string</param>
            <param name="toRemove">string to remove</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.TString.Replace(System.String,System.String,System.String)">
            <summary>
            Replace string by Case-Insensitive.
            </summary>
            <param name="original">Original string.</param>
            <param name="oldValue">String to Replace.</param>
            <param name="newValue">Replace with new string.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.TString.Replace(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            Replace string by custom StringComparison.
            </summary>
            <param name="original">Original string.</param>
            <param name="oldValue">String to Replace.</param>
            <param name="newValue">Replace with new string.</param>
            <param name="comparisonType">Comparison mode.</param>
            <returns></returns>
        </member>
        <member name="T:Stone.WinUI.Helper.ResourceHelper">
            <summary>
            Resource Loader.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Helper.ResourceHelper.LoadImage(System.Object,System.String)">
            <summary>
            Get an image from embeded resouce [*new].
            </summary>
            <param name="sender">Source of assembly. Use keywords this.</param>
            <param name="fullQualifyResourceName">Example: SharedLib.checked.bmp</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.ResourceHelper.LoadIcon(System.Object,System.String)">
            <summary>
            Load icon from embed resource name.
            </summary>
            <param name="sender"></param>
            <param name="fullQualifyResourceName"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.ResourceHelper.LoadCursor(System.Object,System.String)">
            <summary>
            Load cursor from embed resource name.
            </summary>
            <param name="sender"></param>
            <param name="fullQualifyResourceName"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.ResourceHelper.LoadIcon(System.Object,System.String,System.Drawing.Size)">
            <summary>
            Load icon from embed resource with specify size.
            </summary>
            <param name="sender"></param>
            <param name="fullQualifyResourceName"></param>
            <param name="iconSize"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.ResourceHelper.LoadTextFile(System.Object,System.String)">
            <summary>
            Get text file from embeded resource.
            </summary>
            <param name="sender"></param>
            <param name="fullQualifyResourceName"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.ResourceHelper.LoadEmbeddedFile(System.Object,System.String)">
            <summary>
            Load embedded file from resource as stream.
            </summary>
            <param name="sender"></param>
            <param name="fullQualifyResourceName"></param>
            <returns></returns>
        </member>
        <member name="T:Stone.WinUI.AsBandCollection">
            <summary>
            Collection of <see cref="T:Stone.WinUI.AsBand"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBandCollection.#ctor(Stone.WinUI.AsNavigator)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsBandCollection"/> class.
            </summary>
            <param name="nav">The nav.</param>
        </member>
        <member name="M:Stone.WinUI.AsBandCollection.Add(Stone.WinUI.AsBand)">
            <summary>
            Add band to collection.
            </summary>
            <param name="band"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsBandCollection.AddRange(Stone.WinUI.AsBand[])">
            <summary>
            Add array of band to collection.
            </summary>
            <param name="bands"></param>
        </member>
        <member name="M:Stone.WinUI.AsBandCollection.Insert(System.Int32,Stone.WinUI.AsBand)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="band">The band.</param>
        </member>
        <member name="M:Stone.WinUI.AsBandCollection.Remove(Stone.WinUI.AsBand)">
            <summary>
            Removes the specified band.
            </summary>
            <param name="band">The band.</param>
        </member>
        <member name="M:Stone.WinUI.AsBandCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.
            -or-
            <paramref name="index"/> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.
            </exception>
        </member>
        <member name="M:Stone.WinUI.AsBandCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBandCollection.ClearMouseState">
            <summary>
            Clear mouse state of the all bands.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBandCollection.VisibleStack">
            <summary>
            Gets the number of un-hidden band in stack and not in footer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBandCollection.VisibleCount">
            <summary>
            Gets the number of all visible band.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBandCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Stone.WinUI.AsBand"/> with the specified text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBandCollection.VisibleBands">
            <summary>
            Gets all visible bands.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Markup.HyperLink">
            <summary>
            Represents the region of the controls edit area that is a defined as a link.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Markup.HyperLink.#ctor">
            <summary>
            Initialise a new instance of the <c>HyperLink</c> class.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.HyperLink.Bounds">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.RectangleF"/> that bounds the link.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.HyperLink.Id">
            <summary>
            Get or sets the HTML id of the &lt;A&gt; tag.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.HyperLink.InnerText">
            <summary>
            Gets or sets the InnerText of the &lt;A&gt; tag.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.HyperLink.InnerHtml">
            <summary>
            Gets or sets the InnerHtml of the &lt;A&gt; tag.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.HyperLink.Href">
            <summary>
            Gets or sets the href.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOfficeXP.#ctor(Stone.WinUI.AsTabControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererTabControlOfficeXP"/> class.
            </summary>
            <param name="tabControl">The tab.</param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOfficeXP.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw border around control.
            </summary>
            <param name="g">The g.</param>
            <param name="clientRect">The client rect.</param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOfficeXP.DrawTabHeader(System.Drawing.Graphics,System.Windows.Forms.TabPage,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Point[]@)">
            <summary>
            Draws the tab.
            </summary>
            <param name="g">Device Context</param>
            <param name="tabPage">The tab page.</param>
            <param name="index">The index.</param>
            <param name="headerRect">The header rect.</param>
            <param name="pageBodyRect">The page body rect.</param>
            <param name="selected">if set to <c>true</c> [selected].</param>
            <param name="hoted">if set to <c>true</c> [hoted].</param>
            <param name="foreColorIfDark">The fore color if dark.</param>
            <param name="ptsFocus">The point array to draw focus.</param>
            <returns>ForeColor</returns>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOfficeXP.DrawFrameTabActive(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Single)">
            <summary>
            Draw frame active tab.
            </summary>
            <param name="g"></param>
            <param name="rb">BorderRectangle</param>
            <param name="rd">DisplayRectangle</param>
            <param name="angle"></param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOfficeXP.DrawBorderTabActive(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draw border around active tab.
            </summary>
            <param name="g">The g.</param>
            <param name="rb">BorderRectangle</param>
            <param name="rt">TabHeader Rectangle</param>
            <param name="index">Selected Index</param>
        </member>
        <member name="T:Stone.WinUI.IRendererGrouper">
            <summary>
            Renderer for <see cref="T:Stone.WinUI.AsGrouper"/>
            </summary>
        </member>
        <member name="M:Stone.WinUI.IRendererGrouper.DrawGroupBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the group box.
            </summary>
            <param name="g">Device context</param>
            <param name="rectBorder">The rect border.</param>
            <param name="rectText">The rect text.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrouper.DrawPlusMinus(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws the plus minus.
            </summary>
            <param name="g">Device context</param>
            <param name="rectButton">The rect button plus/minus.</param>
            <param name="expanded">if set to <c>true</c> [expanded].</param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrouper.DrawHeaderText(System.Drawing.Graphics,System.Drawing.Rectangle,System.String)">
            <summary>
            Draws the header text.
            </summary>
            <param name="g">Device context</param>
            <param name="textRect">The text rect.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrouper.DrawLineCompact(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the line for compact style.
            </summary>
            <param name="g">Device context</param>
            <param name="rectLine">The rect line.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrouper.DrawDefault(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.MouseStates)">
            <summary>
            Draws the default style.
            </summary>
            <param name="g">Device context</param>
            <param name="rectHead">The rect head.</param>
            <param name="rectBody">The rect body.</param>
            <param name="headerVerticalState">The header state when vertical expand.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrouper.DrawDefaultHeaderHorizontal(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.MouseStates)">
            <summary>
            Draws the default header horizontal.
            </summary>
            <param name="g">Device context</param>
            <param name="rectBody">The rect body.</param>
            <param name="rectHeaderText">The rect header text.</param>
            <param name="headerHorizonState">The header state when horizontal expand.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrouper.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw border around the control.
            </summary>
            <param name="g">Device context</param>
            <param name="rectBorder">The rect border.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererGrouper.DrawHeaderImage(System.Drawing.Graphics,System.Drawing.Image)">
            <summary>
            Draws the header image in expand state.
            </summary>
            <param name="g">Device context</param>
            <param name="imgHeader">The header image</param>
        </member>
        <member name="P:Stone.WinUI.IRendererGrouper.Grouper">
            <summary>
            Gets the grouper.
            </summary>
            <value>The grouper.</value>
        </member>
        <member name="P:Stone.WinUI.IRendererGrouper.AutoBaseColor">
            <summary>
            Gets the default color when BaseColor is Transparent.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOffice2003.#ctor(Stone.WinUI.AsGrouper)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererGrouperOffice2003"/> class.
            </summary>
            <param name="grouper">The grouper.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOffice2003.DrawGroupBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the group box.
            </summary>
            <param name="g">Device context</param>
            <param name="rectBorder">The rect border.</param>
            <param name="rectText">The rect text.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOffice2003.DrawPlusMinus(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws the plus minus.
            </summary>
            <param name="g">Device context</param>
            <param name="rectButton">The rect button plus/minus.</param>
            <param name="expanded">if set to <c>true</c> [expanded].</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOffice2003.DrawHeaderText(System.Drawing.Graphics,System.Drawing.Rectangle,System.String)">
            <summary>
            Draws the header text.
            </summary>
            <param name="g">Device context</param>
            <param name="textRect">The text rect.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOffice2003.DrawLineCompact(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the line for compact style.
            </summary>
            <param name="g">Device context</param>
            <param name="rectLine">The rect line.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOffice2003.DrawDefault(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.MouseStates)">
            <summary>
            Draws the default style.
            </summary>
            <param name="g">Device context</param>
            <param name="rectHead">The rect head.</param>
            <param name="rectBody">The rect body.</param>
            <param name="headerVerticalState">The header state when vertical expand.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOffice2003.DrawDefaultHeaderHorizontal(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.MouseStates)">
            <summary>
            Draws the default header horizontal.
            </summary>
            <param name="g">Device context</param>
            <param name="rectBody">The rect body.</param>
            <param name="rectHeaderText">The rect header text.</param>
            <param name="headerHorizonState">The header state when horizontal expand.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOffice2003.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw border around the control.
            </summary>
            <param name="g">Device context</param>
            <param name="rectBorder">The rect border.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOffice2003.DrawImageHeaderHorizontal(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the image header horizontal.
            </summary>
            <param name="g">The g.</param>
            <param name="rectBody">The rect body.</param>
            <param name="rectHeaderText">The rect header text.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOffice2003.DrawHeaderImage(System.Drawing.Graphics,System.Drawing.Image)">
            <summary>
            Draws the header image in expand state.
            </summary>
            <param name="g">Device context</param>
            <param name="imgHeader">The header image</param>
        </member>
        <member name="P:Stone.WinUI.RendererGrouperOffice2003.Grouper">
            <summary>
            Gets the grouper.
            </summary>
        </member>
        <member name="P:Stone.WinUI.RendererGrouperOffice2003.AutoBaseColor">
            <summary>
            Gets the default color when BaseColor is Transparent.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperSystem3D.#ctor(Stone.WinUI.AsGrouper)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererGrouperSystem3D"/> class.
            </summary>
            <param name="grouper">The grouper.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperSystem3D.DrawGroupBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the group box.
            </summary>
            <param name="g">Device context</param>
            <param name="rectBorder">The rect border.</param>
            <param name="rectText">The rect text.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperSystem3D.DrawPlusMinus(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws the plus minus.
            </summary>
            <param name="g">Device context</param>
            <param name="rectButton">The rect button plus/minus.</param>
            <param name="expanded">if set to <c>true</c> [expanded].</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperSystem3D.DrawLineCompact(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the line for compact style.
            </summary>
            <param name="g">Device context</param>
            <param name="rectLine">The rect line.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperSystem3D.DrawDefault(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.MouseStates)">
            <summary>
            Draws the default style.
            </summary>
            <param name="g">Device context</param>
            <param name="rectHead">The rect head.</param>
            <param name="rectBody">The rect body.</param>
            <param name="headerVerticalState">The header state when vertical expand.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperSystem3D.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw border around the control.
            </summary>
            <param name="g">Device context</param>
            <param name="rectBorder">The rect border.</param>
        </member>
        <member name="P:Stone.WinUI.RendererGrouperSystem3D.AutoBaseColor">
            <summary>
            Gets the default color when BaseColor is Transparent.
            </summary>
        </member>
        <member name="T:Stone.WinUI.IRendererNavigator">
            <summary>
            Renderer for <see cref="T:Stone.WinUI.AsNavigator"/>
            </summary>
        </member>
        <member name="M:Stone.WinUI.IRendererNavigator.DrawSplitter(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the splitter.
            </summary>
            <param name="g">Device context</param>
            <param name="rectBody">The rect body.</param>
            <param name="rectSplitter">The rect splitter.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererNavigator.DrawBand(System.Drawing.Graphics,Stone.WinUI.AsBand,System.Boolean,System.Drawing.SolidBrush,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>
            Draws the band.
            </summary>
            <param name="g">Device context</param>
            <param name="band">The band.</param>
            <param name="selected">Band is selected</param>
            <param name="textBrush">The text brush.</param>
            <param name="font">The font.</param>
            <param name="sf">The sf.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererNavigator.DrawFooterBand(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the footer band.
            </summary>
            <param name="g">Device context</param>
            <param name="rectFooterBand">The rect footer band.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererNavigator.DrawMoreOption(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.MouseStates)">
            <summary>
            Draws the more option button.
            </summary>
            <param name="g">Device context</param>
            <param name="rectMoreOption">The rect more option.</param>
            <param name="state">The state.</param>
        </member>
        <member name="P:Stone.WinUI.IRendererNavigator.Navigator">
            <summary>
            Gets the navigator.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorSystem3D.#ctor(Stone.WinUI.AsGrouper)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererNavigatorSystem3D"/> class.
            </summary>
            <param name="navigator">The navigator.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorSystem3D.DrawSplitter(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the splitter.
            </summary>
            <param name="g">The g.</param>
            <param name="rectBody">The rect body.</param>
            <param name="rectSpliter">The rect spliter.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorSystem3D.DrawBand(System.Drawing.Graphics,Stone.WinUI.AsBand,System.Boolean,System.Drawing.SolidBrush,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>
            Draws the band.
            </summary>
            <param name="g">Device context</param>
            <param name="band">The band.</param>
            <param name="selected">Band is selected</param>
            <param name="textBrush">The text brush.</param>
            <param name="font">The font.</param>
            <param name="sf">The sf.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorSystem3D.DrawFooterBand(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the footer band.
            </summary>
            <param name="g">Device context</param>
            <param name="rectFooterBand">The rect footer band.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorSystem3D.DrawMoreOption(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.MouseStates)">
            <summary>
            Draws the more option button.
            </summary>
            <param name="g">Device context</param>
            <param name="rectMoreOption">The rect more option.</param>
            <param name="state">The state.</param>
        </member>
        <member name="P:Stone.WinUI.RendererNavigatorSystem3D.Navigator">
            <summary>
            Gets the navigator.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridTextLinkClickEventArgs">
            <summary>
            EventArgs for cell TextLink click.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridTextLinkClickEventArgs.#ctor">
            <summary>
            Initialized.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridTextLinkClickEventArgs.Field">
            <summary>
            Get the field name of column clicked.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridTextLinkClickEventArgs.RowIndex">
            <summary>
            Gets the row index.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridTextLinkClickEventArgs.RowView">
            <summary>
            Get the current <see cref="T:System.Data.DataRowView"/> on row clicked.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridTextLinkClickEventArgs.Text">
            <summary>
            Get the current text of cell clicked.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridDrawHeaderEventArgs">
            <summary>
            Custom draw column header event args.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridDrawHeaderEventArgs.#ctor(System.Drawing.Graphics,Stone.WinUI.AsGridViewColumn,System.Int32,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridDrawHeaderEventArgs"/> class.
            </summary>
            <param name="g">The g.</param>
            <param name="col">The col.</param>
            <param name="colIndex">Index of the col.</param>
            <param name="font">The font.</param>
            <param name="foreColor">Color of the fore.</param>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawHeaderEventArgs.Graphics">
            <summary>
            Get the Graphics.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawHeaderEventArgs.ColumnHeader">
            <summary>
            Gets the column header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawHeaderEventArgs.Index">
            <summary>
            Get the column index.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawHeaderEventArgs.Font">
            <summary>
            Get the font to draw column header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawHeaderEventArgs.ForeColor">
            <summary>
            Get ForeColor to draw column header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawHeaderEventArgs.DrawBackground">
            <summary>
            Get or set the wheather to draw background state by system(true) or custom(false).
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawHeaderEventArgs.DrawImageHeader">
            <summary>
            Get or set the wheather to draw image heaer or not.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawHeaderEventArgs.DrawText">
            <summary>
            Get or set the wheather to draw column text header or not.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Forms.WaitForm">
            <summary>
            Wait dialog form.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.WaitForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Forms.WaitForm"/> class.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.WaitForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.WaitForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.WaitForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.WaitForm.Text">
            <summary>
            Get or set the string to show in center form.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.WaitForm.ProgressBar">
            <summary>
            Get or set the progress bar indicator.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsNotifyBar">
            <summary>
            Represent as NotifyBar at top or bottom position.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNotifyBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsNotifyBar"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNotifyBar.Dispose(System.Boolean)">
            <summary>
            Release resource.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.AsNotifyBar.OnExpandChanged(Stone.WinUI.AsExpandEventArgs)">
            <summary>
            Raises the <see cref="E:ExpandChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsExpandEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNotifyBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNotifyBar.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNotifyBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNotifyBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="E:Stone.WinUI.AsNotifyBar.ExpandChanged">
            <summary>
            Occurs when expand state changed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNotifyBar.LeftContextMenuStrip">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Forms.ContextMenuStrip"/> for left mouse click.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNotifyBar.ContextRenderMode">
            <summary>
            Get right format of context render mode.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNotifyBar.HeaderImage">
            <summary>
            Get or set image at header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNotifyBar.HoverForeColor">
            <summary>
            Gets or sets the fore color when mouse hover.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNotifyBar.HoverBackColor">
            <summary>
            Gets or sets the back color when mouse hover.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNotifyBar.Expand">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Stone.WinUI.AsNotifyBar"/> is expand.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNotifyBar.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value></value>
            <returns>
            The default <see cref="T:System.Drawing.Size"/> of the control.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsNotifyBar.IsMouseHover">
            <summary>
            Gets or sets a value indicating whether this instance is mouse hover.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsContainer">
            <summary>
            Represent as Scrollable control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsContainer"/> class.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Forms.NavigatorOptionForm">
            <summary>
            Grid Column Chooser.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.NavigatorOptionForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Forms.NavigatorOptionForm"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.NavigatorOptionForm.NavigatorOptionForm_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the NavigatorOption Form.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.NavigatorOptionForm.Localize">
            <summary>
            Localizes resource of this instance.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.NavigatorOptionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.NavigatorOptionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.NavigatorOptionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.NavigatorOptionForm.DataTableBands">
            <summary>
            Gets or private sets the data table bands.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.NavigatorOptionForm.SelectedBandText">
            <summary>
            Gets or sets selected band text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.NavigatorOptionForm.Bands">
            <summary>
            Gets or sets the column collection.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsRangeLookupBox">
            <summary>
            Represent as range lookup box.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsBaseEditBox">
            <summary>
            Base class of Editable TextBox.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsBaseEditBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.Dispose(System.Boolean)">
            <summary>
            Release resource.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsBaseEditBox.internalValueChanged">
            <summary>
            Flag to know old date value equal new date value?
            This flag reset to false when focused.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsBaseEditBox.btnEdit">
            <summary>
            Button for the box.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsBaseEditBox.popupTipTimer">
            <summary>
            PopupTip timer
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsBaseEditBox.textEdit">
            <summary>
            Text box from base control.
            Event: Enter->KeyDown->KeyPress->TextChanged->Leave.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.OnAfterDataChanged">
            <summary>
            Raised event AfterDataChanged. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.OnAfterKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:AfterKeyDown"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.OnAfterTextChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:AfterTextChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.OnButtonClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ButtonClick"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.OnButtonEditClick">
            <summary>
            Occur when click button or press <see cref="P:Stone.WinUI.AsBaseEditBox.FunctionKey"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Occur after <see cref="P:Stone.WinUI.AsBaseUserControl.RendererType"/> changed.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raised on visual style changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Raised on RightToLeft Changed.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.LoadDefaultButtonImage">
            <summary>
            Load default image to button of control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.PerformClick">
            <summary>
            Operate the button click by coding.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.Focus">
            <summary>
            Set input focus to the text box control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.Clear">
            <summary>
            Clear value and text.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.GetValue">
            <summary>
            Gets the real type of current value.
            <para>!Caution! Do not use this method if casting from dervided class to save back to database.</para>
            <para>Use property <see cref="P:Stone.WinUI.AsBaseEditBox.Value"/> instead.</para>
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.SetValue(System.Object)">
            <summary>
            Set value from <see cref="T:System.Object"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.SetValue(System.Data.DataRow)">
            <summary>
            Set value from <see cref="T:System.Data.DataRow"/>.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.SetValue(System.Data.DataRowView)">
            <summary>
            Set value from <see cref="T:System.Data.DataRowView"/>.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.SetMaxLength(System.Data.DataRow)">
            <summary>
            Set text max length that edit box can type in.
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.SetAutoComplete(System.Windows.Forms.AutoCompleteMode,System.Windows.Forms.AutoCompleteSource,System.Windows.Forms.AutoCompleteStringCollection)">
            <summary>
            Sets the auto complete.
            </summary>
            <param name="mode">The mode.</param>
            <param name="source">The source.</param>
            <param name="sourceList">The string collection.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.OnCreateControl">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.OnResize(System.EventArgs)">
            <summary>
            Raised on resized.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.OnFontChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.FontChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.OnEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Enter"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.btnEdit_Click(System.Object,System.EventArgs)">
            <summary>
            Button edit Click and raise to devired class.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.textEdit_GotFocus(System.Object,System.EventArgs)">
            <summary>
            Devired class will be implement to show display data.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.textEdit_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle key down event in textBox and send to my event "AfterKeyDown"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.textEdit_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the TextChanged event of the textEdit control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.textEdit_ReadOnlyChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ReadOnlyChanged event of the textEdit control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.SetControlLayout">
            <summary>
            Set the control layout.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.ResetOldValueToCurrent">
            <summary>
            Sets old value to equal current value.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.ShouldSerializeMargin">
            <summary>
            Should serialize margin.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.ShouldSerializeButtonColor">
            <summary>
            Shoulds the color of the serialize button.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.SelectAll">
            <summary>
            Select all text.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.SelectText(System.Int32,System.Int32)">
            <summary>
            Select text from x to n.. of text, or select all
            </summary>
            <param name="start"></param>
            <param name="length"></param>
        </member>
        <member name="M:Stone.WinUI.AsBaseEditBox.SetDisplayPoint(System.Drawing.Point@,System.Int32,System.Int32)">
            <summary>
            Set display point for drop down or combo.
            </summary>
            <param name="point"></param>
            <param name="dropdownWidth"></param>
            <param name="dropdownHeight"></param>
        </member>
        <member name="E:Stone.WinUI.AsBaseEditBox.AfterKeyDown">
            <summary>
            Occurs when key down in the control.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsBaseEditBox.AfterTextChanged">
            <summary>
            Occurs when text changed.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsBaseEditBox.ButtonClick">
            <summary>
            Occurs when click button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.AutoSize">
            <summary>
            This is not meaning for this control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.AutoHeight">
            <summary>
            Gets or Sets the text box control automatic adjust height with current font.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.BackgroundImage">
            <summary>
            This is not meaning for this control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.BackgroundImageLayout">
            <summary>
            This is not meaning for this control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.LastSetValueIsValid">
            <summary>
            Get or protected set the indicator lastest times 
            data input is valid or not.
            The flag will be reset to false after <see cref="M:Stone.WinUI.AsBaseEditBox.OnEnter(System.EventArgs)"/> event.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.RequiredAlertText">
            <summary>
            Gets or sets the alert text when the control is required and empty.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.AutoBinding">
            <summary>
            Get or set the indicator to automatic bind data while form loading.
            If set to false the control must be bind data manually.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.BorderStyle">
            <summary>
            This is not meaning for this control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.ButtonColor">
            <summary>
            Gets or sets the button color.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.DefaultButtonColor">
            <summary>
            Gets the default color of the button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.InternalDefaultButtonColor">
            <summary>
            Gets the color of the internal default button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.ComboBoxStyle">
            <summary>
            Gets or sets the control to show as combox box style when true, default is false.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.BackColor">
            <summary>
            Back color of text box.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.ForeColor">
            <summary>
            Text color in text box control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.IsEmpty">
            <summary>
            Gets a value indicating whether this value is empty.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.MultiLine">
            <summary>
            Get or set text box multiline.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.Margin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.LabelText">
            <summary>
            Get the label text for the EditBox.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.RequiredFieldColor">
            <summary>
            Gets or sets the back color when <see cref="P:Stone.WinUI.AsBaseEditBox.Required"/> = true.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.Required">
            <summary>
            Gets or Sets the the wheather control need to input some value.
            This flag need to implement in your project.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.PromptText">
            <summary>
            Gets or sets the short message to guide user when the control text is empty.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.Label">
            <summary>
            Get or set the <see cref="P:Stone.WinUI.AsBaseEditBox.Label"/> of the edit box.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.Field">
            <summary>
            Gets or sets column name of the <see cref="T:System.Data.DataColumn"/> to mapping with this control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.ShowButton">
            <summary>
            Get or set the wheather inner button to show when true, otherwise hide.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.Text">
            <summary>
            Gets or Sets any value to the text box but NOT supported in design mode, if need use <c>SetValue()</c> instead.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.FunctionKey">
            <summary>
            Get or set the function key for button shortcut, default=F4.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.ShowData">
            <summary>
            Get or set the indicator to show data or mask with *(asterrisk) character.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.TextAlign">
            <summary>
            Get or set text alignment in textbox.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.ReadOnly">
            <summary>
            The control cannot edit when set to true.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.Value">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.ValueChanged">
            <summary>
            Get the wheather value changed from user.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.DefaultSize">
            <summary>
            Override Default size.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.ButtonImage">
            <summary>
            Get or set the new image(17x19) for button surface.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.Focused">
            <summary>
            Gets a value indicating whether the control has input focus.
            </summary>
            <value></value>
            <returns>true if the control has focus; otherwise, false.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsBaseEditBox.AutoCompleteCustomSource">
            <summary>
            Gets or sets the auto complete custom source.
            </summary>
            <value>The auto complete custom source.</value>
        </member>
        <member name="M:Stone.WinUI.AsRangeLookupBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsRangeLookupBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsRangeLookupBox.Dispose(System.Boolean)">
            <summary>
            Release resource.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.AsRangeLookupBox.GetValue">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsRangeLookupBox.OnButtonEditClick">
            <summary>
            Occur when click button or press <see cref="P:Stone.WinUI.AsBaseEditBox.FunctionKey"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.DataSource">
            <summary>
            Get or set <see cref="T:System.Data.DataTable"/> as DataSource.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.DisplayField">
            <summary>
            Get or set field name to display as description.
            <para>Patterns: FieldName|TextHeader</para>
            <para>Examples: NameMain|Description</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.ValueField">
            <summary>
            Get or set field name to display as value.
            <para>Patterns: FieldName|TextHeader</para>
            <para>Examples: Code|Code</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.DialogCustomWidth">
            <summary>
            Get or set dialog width when drop down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.IntegralWidth">
            <summary>
            Get or set the dialog dropdown width equal the combo.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.ItemHeight">
            <summary>
            Gets or sets the height of the item, default=20.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.AutoLoadMaster">
            <summary>
            Get or set flag to auto load data from specific table name(<see cref="P:Stone.WinUI.AsRangeLookupBox.MasterTable"/>).
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.BaseColorGrid">
            <summary>
            Gets or sets the color of the grid view when dropdown(Empty=Automatic color).
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.DefaultButtonColor">
            <summary>
            Gets the default color of the button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.MasterTable">
            <summary>
            Get or set master table name.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.MasterTableCriteria">
            <summary>
            Get or set the criteria for <see cref="P:Stone.WinUI.AsRangeLookupBox.MasterTable"/>.
            The criteria must begin with 'Where' keyword.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.ManualQuery">
            <summary>
            Get or set custom query.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.ReadOnly">
            <summary>
            Get or set the control is read only.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.RowFilter">
            <summary>
            Get or set custom row filter string.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.ManualColumns">
            <summary>
            Get or set custom list of <see cref="T:Stone.WinUI.AsGridViewColumn"/> to display in dropdown.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.IsEmpty">
            <summary>
            Gets a value indicating whether this value is empty.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.ValueChanged">
            <summary>
            Get the wheather value changed from user.
            </summary>
            <value></value>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupBox.Value">
            <summary>
            Gets or sets the current value.
            </summary>
            <value></value>
        </member>
        <member name="T:Stone.WinUI.Design.TabPagesEditor">
            <summary>
            Collection Editor for <see cref="P:Stone.WinUI.AsTabControl.TabPages"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.TabPagesEditor.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.TabPagesEditor"/> class.
            </summary>
            <param name="type">The type of the collection for this editor to edit.</param>
        </member>
        <member name="M:Stone.WinUI.Design.TabPagesEditor.CreateNewItemTypes">
            <summary>
            Gets the data types that this collection editor can contain.
            </summary>
            <returns>
            An array of data types that this collection can contain.
            </returns>
        </member>
        <member name="M:Stone.WinUI.Design.TabPagesEditor.GetDisplayText(System.Object)">
            <summary>
            Retrieves the display text for the given list item.
            </summary>
            <param name="value">The list item for which to retrieve display text.</param>
            <returns>
            The display text for <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:Stone.WinUI.Design.TabPagesEditor.CreateCollectionForm">
            <summary>
            Creates a new form to display and edit the current collection.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm"/> to provide as the user interface for editing the collection.
            </returns>
        </member>
        <member name="M:Stone.WinUI.Design.TabPagesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the edit style used by the <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> enumeration value indicating the provided editing style. If the method is not supported in the specified context, this method will return the <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/> identifier.
            </returns>
        </member>
        <member name="T:Stone.WinUI.Design.AsNavigatorActionList">
            <summary>
            Action list for <see cref="T:Stone.WinUI.AsNavigator"/>
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsNavigatorActionList"/> class.
            </summary>
            <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList"/>.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorActionList.SetProperty(System.String,System.Object)">
            <summary>
            Sets the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorActionList.GetProperty``1(System.String)">
            <summary>
            Gets the property.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorActionList.InvokeEditBandsDialog">
            <summary>
            Invoke to edit band collection.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorActionList.AddBand">
            <summary>
            Add new band
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorActionList.RemoveBand">
            <summary>
            Remove selected band
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorActionList.InvokeAbout">
            <summary>
            Show About form.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsNavigatorActionList.GetSortedActionItems">
            <summary>
            Get Sorted Action Items.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.Design.AsNavigatorActionList.Designer">
            <summary>
            Gets the designer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsNavigatorActionList.BaseColor">
            <summary>
            Gets or sets the color of the base.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsNavigatorActionList.HeaderFont">
            <summary>
            Gets or sets the header font.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsNavigatorActionList.RendererType">
            <summary>
            Gets or sets the type of the renderer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsNavigatorActionList.SelectionBandColor">
            <summary>
            Gets or sets the color of selected band.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsNavigatorActionList.HeaderForeColor">
            <summary>
            Gets or sets the header fore color.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsNavigatorActionList.Dock">
            <summary>
            Gets or sets the dock.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsNavigatorActionList.ShowBottomBand">
            <summary>
            Gets or sets a value indicating whether show bottom band.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsNavigatorActionList.ShowMoreOptions">
            <summary>
            Gets or sets a value indicating whether show more option button.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsLoadingDesigner">
            <summary>
            Designer for <see cref="T:Stone.WinUI.AsLoading"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsLoadingDesigner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsLoadingDesigner"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsLoadingDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor"/>.
            </summary>
            <param name="properties">An <see cref="T:System.Collections.IDictionary"/> containing the properties for the class of the component.</param>
        </member>
        <member name="T:Stone.WinUI.EditKeyModes">
            <summary>
            Key stroke to edit mode.
            </summary>
        </member>
        <member name="F:Stone.WinUI.EditKeyModes.EditOnEnter">
            <summary>
            On press return.
            </summary>
        </member>
        <member name="F:Stone.WinUI.EditKeyModes.EditOnF2">
            <summary>
            On press F2.
            </summary>
        </member>
        <member name="T:Stone.WinUI.ActiveIndicators">
            <summary>
            Style of active indicator to show at row and column header.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ActiveIndicators.None">
            <summary>
            Not show indicator.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ActiveIndicators.Arrow">
            <summary>
            Draw arrow indicator.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ActiveIndicators.ArrowOnEditMode">
            <summary>
            Draw arrow indicator in edit mode only, this value effective in <see cref="T:Stone.WinUI.AsGridData"/>.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ActiveIndicators.FontBold">
            <summary>
            Draw font bold.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ActiveIndicators.FontBoldOnEditMode">
            <summary>
            Draw font bold in edit mode only, this value effective in <see cref="T:Stone.WinUI.AsGridData"/>.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ActiveIndicators.Highlight">
            <summary>
            Fill color header.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ActiveIndicators.HighlightOnEditMode">
            <summary>
            Fill color header in edit mode only, this value effective in <see cref="T:Stone.WinUI.AsGridData"/>.
            </summary>
        </member>
        <member name="T:Stone.WinUI.RowGroupTypes">
            <summary>
            RowGroup type after sort column.
            </summary>
        </member>
        <member name="F:Stone.WinUI.RowGroupTypes.None">
            <summary>
            Disable feature.
            </summary>
        </member>
        <member name="F:Stone.WinUI.RowGroupTypes.GroupOnly">
            <summary>
            Show text grouping only.
            </summary>
        </member>
        <member name="F:Stone.WinUI.RowGroupTypes.GroupAndCount">
            <summary>
            Show text grouping and count item.
            </summary>
        </member>
        <member name="T:Stone.WinUI.ListStates">
            <summary>
            State of the list control.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ListStates.None">
            <summary>
            list control is in normal state
            </summary>
        </member>
        <member name="F:Stone.WinUI.ListStates.Selecting">
            <summary>
            an item is selected in list control.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ListStates.ColumnSelect">
            <summary>
            a column is selected in list control.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ListStates.ColumnResizing">
            <summary>
            a column is being selected in list control.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ListStates.ColumnMoving">
            <summary>
            a column moving.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ListStates.Filtered">
            <summary>
            a column has been filter and success.
            </summary>
        </member>
        <member name="T:Stone.WinUI.ListRegions">
            <summary>
            Region area name meaning.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ListRegions.Header">
            <summary>
            Header Area (Column Header)
            </summary>
        </member>
        <member name="F:Stone.WinUI.ListRegions.Client">
            <summary>
            Client Area (Items)
            </summary>
        </member>
        <member name="F:Stone.WinUI.ListRegions.NonClient">
            <summary>
            Non Client Area (Potentitally not on surface)
            </summary>
        </member>
        <member name="F:Stone.WinUI.ListRegions.HeaderNoneColumn">
            <summary>
            Header Area but not column.
            </summary>
        </member>
        <member name="T:Stone.WinUI.GridLineStyles">
            <summary>
            Style of grid lines in client area
            </summary>
        </member>
        <member name="F:Stone.WinUI.GridLineStyles.None">
            <summary>
            Do not show a grid at all
            </summary>
        </member>
        <member name="F:Stone.WinUI.GridLineStyles.Dashed">
            <summary>
            Dashed line grid
            </summary>
        </member>
        <member name="F:Stone.WinUI.GridLineStyles.Solid">
            <summary>
            Solid grid line
            </summary>
        </member>
        <member name="T:Stone.WinUI.GridLines">
            <summary>
            Grid Line direction
            </summary>
        </member>
        <member name="F:Stone.WinUI.GridLines.Both">
            <summary>
            Horizontal and Vertical lines
            </summary>
        </member>
        <member name="F:Stone.WinUI.GridLines.VeritalOnly">
            <summary>
            Vertical Grid
            </summary>
        </member>
        <member name="F:Stone.WinUI.GridLines.HorizontalOnly">
            <summary>
            Horizontal Grid
            </summary>
        </member>
        <member name="T:Stone.WinUI.GridTypes">
            <summary>
            Grid type
            </summary>
            <remarks>
            Normal grid shows lines regardless if items exist or not.  If you choose DataExitsOnly the lines will
            only show if there are items present.
            </remarks>
        </member>
        <member name="F:Stone.WinUI.GridTypes.AlwaysPresent">
            <summary>
            Normal lines always present
            </summary>
        </member>
        <member name="F:Stone.WinUI.GridTypes.DataExitsOnly">
            <summary>
            Horizontal Lines only present when items exist
            </summary>
        </member>
        <member name="T:Stone.WinUI.ColumnStates">
            <summary>
            Column press state enumerations
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnStates.Normal">
            <summary>
            Column is in normal state
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnStates.Pressed">
            <summary>
            Column is showing pressed state
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnStates.Hot">
            <summary>
            Mouse cursor is over column header, but not pressed
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnStates.ContextPressed">
            <summary>
            Press at column context of column.
            </summary>
        </member>
        <member name="T:Stone.WinUI.ColumnFormats">
            <summary>
            Format to display on each column.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnFormats.Text">
            <summary>
            Alphanumeric and string.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnFormats.Money">
            <summary>
            Number and money.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnFormats.Date">
            <summary>
            Short date.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnFormats.DataIndex">
            <summary>
            String Collection Index (Example:xx,yy,zz)
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnFormats.CheckBox">
            <summary>
            Show tick box
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnFormats.Time">
            <summary>
            Time format 23:50
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnFormats.ImageListIndex">
            <summary>
            Show <see cref="T:System.Drawing.Image"/> 
            from <see cref="P:Stone.WinUI.AsGridViewColumn.ImageListIndex"/>, 
            use zero-base to get image from index(int).
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnFormats.ImageFromPath">
            <summary>
            Show <see cref="T:System.Drawing.Image"/> 
            from local or network path(string).
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnFormats.Color">
            <summary>
            Show color rectangle area.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnFormats.TextLink">
            <summary>
            Present as LinkLabel.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnFormats.Image">
            <summary>
            Show <see cref="T:System.Drawing.Image"/> from byte array.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ColumnFormats.Button">
            <summary>
            Show button.
            </summary>
        </member>
        <member name="T:Stone.WinUI.FooterTypes">
            <summary>
            Types of footers
            </summary>
        </member>
        <member name="F:Stone.WinUI.FooterTypes.None">
            <summary>
            Nothing
            </summary>
        </member>
        <member name="F:Stone.WinUI.FooterTypes.Summary">
            <summary>
            Show summary.
            </summary>
        </member>
        <member name="F:Stone.WinUI.FooterTypes.Average">
            <summary>
            Show average.
            </summary>
        </member>
        <member name="F:Stone.WinUI.FooterTypes.Count">
            <summary>
            Show count.
            </summary>
        </member>
        <member name="F:Stone.WinUI.FooterTypes.Text">
            <summary>
            Show custom text.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridViewColumn">
            <summary>
            Column header of <see cref="T:Stone.WinUI.AsGridView"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumn.#ctor">
            <summary>
            Innitialized new instance of column header.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumn.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumn.invalidate">
            <summary>
            Invalidate the parent.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumn.invalidateColumn(System.Boolean)">
            <summary>
            Invalidate column header.
            </summary>
            <param name="wholeColumn">True = repaint whole column, otherwise only header area.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumn.ToString">
            <summary>
            Return string that represent the column header.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumn.ImageListIndexRefresh">
            <summary>
            Refresh internal image list.
            Call this after modify(add/remove)<see cref="P:Stone.WinUI.AsGridViewColumn.ImageListIndex"/> by code at run-time.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumn.ShouldSerializeImagePadding">
            <summary>
            Should serialize image padding.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ShowToggleCheckbox">
            <summary>
            Get or set the header to show toggle check box, for checkbox column only.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.LastToggleCheckbox">
            <summary>
            Get or set(internal, protected) last state from method ToggleCheckbox
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.Spring">
            <summary>
            Get or set the column will be fixed size or spring.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.Grid">
            <summary>
            Get the <see cref="T:Stone.WinUI.AsGridView"/> parent that column is belong to.  
            Set property can access for internal, protected only.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.TextRotation">
            <summary>
            Get or set the angle to draw text, default is left to right.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ColumnFormat">
            <summary>
            Get or set the pre-define format to display value from each data type.
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ColumnTop">
            <summary>
            Gets or sets the column top.
            </summary>
            <value>The column top.</value>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ContextMenuStrip">
            <summary>
            Get or set the ContextMenuStrip on this column.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.IndexString">
            <summary>
            Get or set index string for main language.  
            Separate each word by comma, value for 1st word begin from zero.
            <para>
            <example>Syntax: [strIndex0][|foreColorIndex0], [strIndex1][|foreColorIndex1]</example>
            <code>
            IndexString = "Active|Blue,InActive|Red,Unknown";
            </code>
            </para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.NameComponent">
            <summary>
            Gets name of the component.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.DecimalDigit">
            <summary>
            Gets or sets the decimal digit to display.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.FilterActive">
            <summary>
            Get the column is filtering data or not.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.FixedWidth">
            <summary>
            Get or set the column is fixed width and not allow resize.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.UdfFilterString">
            <summary>
            Get or set user define filter string when click column header strip.
            Separate each string with char '|'
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ClickAt">
            <summary>
            Get or set location of mouse clicked in column header area.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.FillColumnBackColor">
            <summary>
            Fill whole column with specific color from <see cref="P:Stone.WinUI.AsGridViewColumn.BackColor"/>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.Field">
            <summary>
            Get or set the field name from datasource to mapped with the <see cref="T:System.Data.DataColumn"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.TextFormat">
            <summary>
            Get or set the custom format string to display in the column(Money, Date, Time).
            <para>
            <example>
            <para>"(###) ### - ####", (123) 456 - 7890</para>
            <para>"$#,##0.00; ($#,##0.00); Zero", Positive; Negative; ZERO</para>
            <para>"HH:mm", 23:50</para>
            <para>"dd-MM-yyyy", 31-12-2000</para>
            </example>
            </para>
            </summary>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.NagativeInRed">
            <summary>
            Gets or sets a value indicating whether to display number with red when negative, otherwise default text color.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ShowZero">
            <summary>
            Gets or sets a value indicating whether to show zero when true, otherwise display blank.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.Image">
            <summary>
            Get or set the <see cref="T:System.Drawing.Image"/> to show in header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ImageTransparentColor">
            <summary>
            Get or set the transparent color on the header's image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ImagePadding">
            <summary>
            Get or set the <see cref="T:System.Windows.Forms.Padding"/> around image header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ListOfImageList">
            <summary>
            Internal list of image list.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ImageListIndex">
            <summary>
            Get or set <see cref="T:System.Windows.Forms.ImageList"/> 
            to show <see cref="P:Stone.WinUI.AsGridViewColumn.Image"/> from index of Int32.
            This resource can be use for <see cref="T:Stone.WinUI.ColumnFormats"/> = ImageListIndex.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.TextAlign">
            <summary>
            Get or set the text alignement in column header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.FooterAlign">
            <summary>
            Gets or Sets the footer content alignment
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.FooterType">
            <summary>
            Footer format to display on each column.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.FooterText">
            <summary>
            Text to display on footer column.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.MaxWidth">
            <summary>
            Get or set maximum column width, default 0 = unlimited.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.BackColor">
            <summary>
            Get or set back color of column header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.SortState">
            <summary>
            Get the last sort state.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ColumnState">
            <summary>
            Get the column states.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.DataAlign">
            <summary>
            Gets or Sets the data content alignment.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ToolTipText">
            <summary>
            Get or set some description to show in ballon tip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.Tag">
            <summary>
            Get or set the extra object.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.TableName">
            <summary>
            Get or set table name to programming load.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.Text">
            <summary>
            Get or Set the column header text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ReadOnly">
            <summary>
            This is not meaning for this control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ShowData">
            <summary>
            Get or set the indicator to show data or mask with *(asterrisk) character.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.Visible">
            <summary>
            Get or set the column is show or hide.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.Bounds">
            <summary>
            Get the rectangle of column header.  
            Set Property can access for internal, protected only.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ButtonText">
            <summary>
            Gets or sets the button text when <see cref="P:Stone.WinUI.AsGridViewColumn.ColumnFormat"/> = Button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.ButtonBounds">
            <summary>
            Get the area at top of column header for column menu strip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumn.Width">
            <summary>
            Get or set column width.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Forms.GridColorColumnForm">
            <summary>
            Set color of grid column.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.GridColorColumnForm.#ctor(Stone.WinUI.AsGridViewColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Forms.GridColorColumnForm"/> class.
            </summary>
            <param name="col"></param>
        </member>
        <member name="M:Stone.WinUI.Forms.GridColorColumnForm.Localize">
            <summary>
            Localizes resource of this instance.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.GridColorColumnForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.GridColorColumnForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.GridColorColumnForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.GridColorColumnForm.SelectedColor">
            <summary>
            Get selected color.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.GridColorColumnForm.FillBackColorData">
            <summary>
            Get fill back color of column.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsListView">
            <summary>
            Provide a base ListView control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsListView"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ListView.DrawItem"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.DrawListViewItemEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Stone.WinUI.AsListView.RendererType">
            <summary>
            Get or set theme of the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsListView.SelectionBackColor">
            <summary>
            Gets or sets the color of the selection back.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererUpDownButtonOfficeXP.#ctor(Stone.WinUI.AsNumberBox.UpDownButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererUpDownButtonOfficeXP"/> class.
            </summary>
            <param name="updown">The updown.</param>
        </member>
        <member name="T:Stone.WinUI.IRendererButton">
            <summary>
            Interface for render button.
            </summary>
        </member>
        <member name="M:Stone.WinUI.IRendererButton.DrawArrowDropdown(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Draws arrow dropdown.
            </summary>
            <param name="g">The g.</param>
            <param name="arrowColor">Color of the arrow.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="highlight">if set to <c>true</c> [highlight].</param>
        </member>
        <member name="M:Stone.WinUI.IRendererButton.DrawBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws background image.
            </summary>
            <param name="g">Device context</param>
            <param name="butRect">Button rect.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererButton.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws focus rectangle.
            </summary>
            <param name="g">Device context</param>
            <param name="butRect">Button rect</param>
            <param name="showFocusCues">if set to <c>true</c> [show focus cues].</param>
        </member>
        <member name="M:Stone.WinUI.IRendererButton.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws the image.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">Avaliable area to draw image.</param>
            <param name="pressed">if set to <c>true</c> [pressed].</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.IRendererButton.DrawButtonSurface(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draw button surface.
            </summary>
            <param name="g">The g.</param>
            <param name="butRect">Button area.</param>
            <param name="dropdownRect">The dropdown rect.</param>
            <param name="parentBackColor">Color of the parent back.</param>
            <param name="isDefault">if set to <c>true</c> [is default].</param>
            <param name="inEditBox">if set to <c>true</c> [in edit box].</param>
            <param name="comboBoxStyle">if set to <c>true</c> [combo box style].</param>
            <param name="pressSplitDropdown">if set to <c>true</c> [press split dropdown].</param>
            <param name="hoverSplitDropdown">if set to <c>true</c> [hover split dropdown].</param>
            <param name="drawState">State of the draw.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererButton.DrawColorSelected(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draws the color selected.
            </summary>
            <param name="g">Device context</param>
            <param name="butRect">Button rect exclude arrow dropdown area.</param>
            <param name="drawState">Button draw state.</param>
        </member>
        <member name="M:Stone.WinUI.IRendererButton.DrawCommandLinkText(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates,System.Boolean)">
            <summary>
            Draws command link text.
            </summary>
            <param name="g">Device context</param>
            <param name="butRect">Button rect.</param>
            <param name="rectImage">Image rect.</param>
            <param name="drawState">Button draw state.</param>
            <param name="showKeyboardCues">if set to <c>true</c> [show keyboard cues].</param>
        </member>
        <member name="M:Stone.WinUI.IRendererButton.DrawCommandLinkOutline(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the command link outline.
            </summary>
            <param name="g">Device context</param>
            <param name="butRect">Button rect</param>
        </member>
        <member name="M:Stone.WinUI.IRendererButton.DrawText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates,System.Boolean)">
            <summary>
            Draws the text.
            </summary>
            <param name="g">Device context</param>
            <param name="s">Text to draw</param>
            <param name="font">The font.</param>
            <param name="rect">Avaliable area to draw text.</param>
            <param name="rectImg">Image area</param>
            <param name="drawState">Draw state button.</param>
            <param name="showKeyboardCues">Show keyboard cues</param>
        </member>
        <member name="P:Stone.WinUI.IRendererButton.Button">
            <summary>
            Gets the button.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsBandDesigner">
            <summary>
            Designer for <see cref="T:Stone.WinUI.AsBand"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsBandDesigner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsBandDesigner"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsBandDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component will expose through a <see cref="T:System.ComponentModel.TypeDescriptor"/>.
            </summary>
            <param name="properties">An <see cref="T:System.Collections.IDictionary"/> that contains the properties for the class of the component.</param>
        </member>
        <member name="P:Stone.WinUI.Design.AsBandDesigner.SelectionRules">
            <summary>
            Gets the selection rules that indicate the movement capabilities of a component.
            </summary>
            <returns>
            A bitwise combination of <see cref="T:System.Windows.Forms.Design.SelectionRules"/> values.
            </returns>
        </member>
        <member name="T:Stone.WinUI.AsGridRowActivateEventArgs">
            <summary>
            Event args for enter or double click in row of control.
            And Event selected index changed.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridRowActivateEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridRowActivateEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridRowActivateEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridRowActivateEventArgs"/> class with specify index.
            </summary>
            <param name="rowIndex">Index of the row.</param>
        </member>
        <member name="P:Stone.WinUI.AsGridRowActivateEventArgs.RowIndex">
            <summary>
            Gets the index of the row.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridRowActivateEventArgs.RowView">
            <summary>
            Gets the row view.
            </summary>
            <value>The row view.</value>
        </member>
        <member name="P:Stone.WinUI.AsGridRowActivateEventArgs.IsRowGroup">
            <summary>
            Gets the value indicating whether is row group.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridColumnTopCollection">
            <summary>
            Top column collections of <see cref="T:Stone.WinUI.AsGridView"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridColumnTopCollection.#ctor(Stone.WinUI.AsGridView)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridColumnTopCollection"/> class.
            </summary>
            <param name="parentGrid">The parent grid.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridColumnTopCollection.Add(Stone.WinUI.AsGridColumnTop)">
            <summary>
            Add column header to collection.
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridColumnTopCollection.Add(System.String,System.Int32,System.Int32)">
            <summary>
            Add column top header by specify arguments.
            </summary>
            <param name="colText">The col text.</param>
            <param name="start">Start column(zero base)</param>
            <param name="stop">Stop column(zero base)</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridColumnTopCollection.AddRange(Stone.WinUI.AsGridColumnTop[])">
            <summary>
            Add array of column header to collection.
            </summary>
            <param name="cols"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridColumnTopCollection.InsertItem(System.Int32,Stone.WinUI.AsGridColumnTop)">
            <summary>
            Insert an element into the collection at the specified index.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnTopCollection.Grid">
            <summary>
            Get the <see cref="T:Stone.WinUI.AsGridView"/> control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnTopCollection.Item(System.Int32)">
            <summary>
            Get the column from index, use zero base.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnTopCollection.Item(System.Int32,System.Int32,System.String)">
            <summary>
            Gets the <see cref="T:Stone.WinUI.AsGridColumnTop"/> with the specified.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsTimeBox">
            <summary>
            Represent as time edit box.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTimeBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsTimeBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTimeBox.Dispose(System.Boolean)">
            <summary>
            Release resource.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="F:Stone.WinUI.AsTimeBox.m_OldValue">
            <summary>
            Old date before change, keep last value on leave finished.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsTimeBox.m_Value">
            <summary>
            Keep time selected in this control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTimeBox.ResetOldValueToCurrent">
            <summary>
            Sets old value to equal current value.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTimeBox.OnLeave(System.EventArgs)">
            <summary>
            On leave control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTimeBox.GetValue">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTimeBox.SetValue(System.Object)">
            <summary>
            Set value from <see cref="T:System.Object"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsTimeBox.SetValue(System.DateTime)">
            <summary>
            Set value by datetime
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsTimeBox.Clear">
            <summary>
            Clear value and text.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsTimeBox.BeforeDataChange">
            <summary>
            Occur before data change.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsTimeBox.AfterDataChanged">
            <summary>
            Occur when leave the control and data changed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTimeBox.Value">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTimeBox.ValueChanged">
            <summary>
            Get the wheather value changed from user.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTimeBox.ShowButton">
            <summary>
            This is not meaning for this control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTimeBox.FunctionKey">
            <summary>
            Get or set the function key for button shortcut, default=F4.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTimeBox.IsEmpty">
            <summary>
            Gets a value indicating whether this value is empty.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTimeBox.TextFormat">
            <summary>
            Gets or sets the custom format to display time.(Example: HH:mm:ss)
            <para>Leave blank = HH:mm</para>
            <example>HH:mm:ss</example>
            </summary>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="T:Stone.WinUI.Helper.Converts">
            <summary>
            Convert from valueType1 to valueType2
            </summary>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ToTextFormatFlag(System.Drawing.ContentAlignment)">
            <summary>
            Convert the alignment to text format flag.
            </summary>
            <param name="alignment">The alignment.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ToGdiAlign(System.Drawing.StringFormat,System.Drawing.ContentAlignment)">
            <summary>
            Convert <see cref="T:System.Drawing.ContentAlignment"/> to <see cref="T:System.Drawing.StringFormat"/> Alignment and LineAlignment.
            </summary>
            <param name="sf">Source of StringFormat.</param>
            <param name="alignment">The alignment.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.StreamToArray(System.IO.Stream,System.Int32)">
            <summary>
            Reads data from a stream until the end is reached. The
            data is returned as a byte array.
            <para>Throw error if any of the underlying IO calls fail.</para>
            </summary>
            <param name="stream">The stream to read data from</param>
            <param name="initialLength">The initial buffer length, if not know leave zero.</param>
            <exception cref="T:System.IO.IOException"></exception>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ColorToString(System.Drawing.Color)">
            <summary>
            Convert color to short string, only name or value.
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ToFileSize(System.Int64)">
            <summary>
            Convert byte length to human readable file size.
            </summary>
            <param name="byteLength">Length of the byte.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ToColor(System.String)">
            <summary>
            Convert string to color if false return Color.Empty
            </summary>
            <param name="strColor"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ShortTime(System.DateTime)">
            <summary>
            Convert time to string format 23:59
            </summary>
            <param name="dt">Time to convert</param>
            <returns>String time.</returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ShortTime(System.String)">
            <summary>
            Convert string date-time to time format.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ShortDate(System.DateTime)">
            <summary>
            Convert to short date by date value dd/mm/yyyy
            </summary>
            <param name="dt">Date value</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ShortDate(System.String)">
            <summary>
            Convert to short date by string date. dd/mm/yyyy
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ShortStringDate(System.DateTime)">
            <summary>
            Convert date to to dd MMMM yyyy
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ShortStringDate(System.String)">
            <summary>
            Convert date to to dd MM yyyy
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.GetMonthName(System.Int32,System.Boolean)">
            <summary>
            Gets the month name from specify index(January=1).
            </summary>
            <param name="monthIndex">Index of the month.</param>
            <param name="fullName">if set to <c>true</c> [full name].</param>
            <returns>Month name from current user interface culture.</returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.DeleteTime(System.String@)">
            <summary>
            [Internal] Delete time from date string.
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ToSQLDate(System.DateTime)">
            <summary>
            Convert specific <see cref="T:System.DateTime"/> to SQL string date for query.
            <para>Return string format '2017-12-31'</para>
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.IndexToString(System.String[],System.String)">
            <summary>
            Convert string array to single value from index string.
            </summary>
            <param name="sArr"></param>
            <param name="indexString"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.IndexToString(System.String,System.Int32)">
            <summary>
            Convert index(int) value from string(comma delimited) to string.
            </summary>
            <param name="s"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.IndexToString(System.String,System.String,System.Drawing.Color@)">
            <summary>
            Convert index(int) value from string(comma delimited) to string.
            </summary>
            <param name="s"></param>
            <param name="indexString"></param>
            <param name="indexColor">Return color if get value, otherwise return Color.Empty</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.IndexToString(System.String,System.String)">
            <summary>
            Convert index(string) value from string(comma delimited) to string.
            </summary>
            <param name="s"></param>
            <param name="indexString"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.DoubleToString(System.Double,System.Int32)">
            <summary>
            Convert double to string format(#,###.00).
            </summary>
            <param name="d"></param>
            <param name="digit"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.DoubleToString(System.String,System.Int32)">
            <summary>
            Convert string(money) value to string format(#,###.00).
            </summary>
            <param name="s"></param>
            <param name="digit"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ToDouble(System.String)">
            <summary>
            Convert string to double.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ImageToBytes(System.Drawing.Image)">
            <summary>
            Convert Image to byte array.
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.BytesToImage(System.Byte[])">
            <summary>
            Convert byte array to image.
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ToDate(System.String,System.DateTime@)">
            <summary>
            Validate string value and convert to output datetime.
            </summary>
            <param name="s"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.Converts.ToTime(System.String,System.DateTime,System.DateTime@)">
            <summary>
            Validate time from string.
            </summary>
            <param name="s">String of time from user input.</param>
            <param name="oldDateTime">Old DateTime</param>
            <param name="outTime">Out DateTime for return true.</param>
            <returns></returns>
        </member>
        <member name="T:Stone.WinUI.Helper.Converts.ColorFormat">
            <summary>
            Enum of color format.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Helper.Converts.ColorFormat.NamedColor">
            <summary>
            Name color format.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Helper.Converts.ColorFormat.aRGBColor">
            <summary>
            Integer ARGB format.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Helper.ControlHelper">
            <summary>
            Helper Control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Helper.ControlHelper.UIThread(System.Windows.Forms.Control,System.Windows.Forms.MethodInvoker)">
            <summary>
            Runs code in UI thread asynchronously with BeginInvoke.
            </summary>
            <param name="control"></param>
            <param name="method">the code, like "delegate { this.Text = "new text"; }"</param>
            <remarks>From: http://www.codeproject.com/KB/cs/AvoidingInvokeRequired.aspx</remarks>
        </member>
        <member name="M:Stone.WinUI.Helper.ControlHelper.UIThreadInvoke(System.Windows.Forms.Control,System.Windows.Forms.MethodInvoker)">
            <summary>
            Runs code in UI thread synchronously with Invoke.
            </summary>
            <param name="control"></param>
            <param name="method">the code, like "delegate { this.Text = "new text"; }"</param>
            <remarks>From: http://www.codeproject.com/KB/cs/AvoidingInvokeRequired.aspx</remarks>
        </member>
        <member name="M:Stone.WinUI.Helper.ControlHelper.ChangeRendererType(System.Windows.Forms.Control,Stone.WinUI.RendererTypes)">
            <summary>
            Changes the <see cref="T:Stone.WinUI.RendererTypes"/> of all child controls.
            </summary>
            <param name="ctl">The container control.</param>
            <param name="renderType">Type of the render.</param>
        </member>
        <member name="T:Stone.WinUI.HScrollBarBasic">
            <summary>
            Horizontal scroll bar.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsHScrollBar">
            <summary>
            Represent as managed horizontal scroll bar.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsVScrollBar">
            <summary>
            Represent as managed vertical scroll bar control.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsScrollBarBase">
            <summary>
            Abstract scrollbar control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsScrollBarBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsScrollBarBase"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsScrollBarBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsScrollBarBase.BaseColor">
            <summary>
            Gets or sets the color of the control.
            <para>This property effect for <see cref="F:Stone.WinUI.RendererTypes.AeroGlass"/> or above.</para>
            </summary>
            <value>The color of the base.</value>
        </member>
        <member name="P:Stone.WinUI.AsScrollBarBase.LargeChange">
            <summary>
            Gets or sets the large change.
            </summary>
            <value>The large change.</value>
        </member>
        <member name="P:Stone.WinUI.AsScrollBarBase.SmallChange">
            <summary>
            Gets or sets the small change.
            </summary>
            <value>The small change.</value>
        </member>
        <member name="P:Stone.WinUI.AsScrollBarBase.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:Stone.WinUI.AsScrollBarBase.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:Stone.WinUI.AsScrollBarBase.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Stone.WinUI.AsScrollBarBase.IsVertical">
            <summary>
            Gets a value indicating whether this instance is vertical.
            </summary>
            <value>
            	<c>true</c> if this instance is vertical; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.clickedBarRectangle">
            <summary>
            The clicked channel rectangle.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.thumbRectangle">
            <summary>
            The thumb rectangle.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.topArrowRectangle">
            <summary>
            The top arrow rectangle.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.bottomArrowRectangle">
            <summary>
            The bottom arrow rectangle.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.channelRectangle">
            <summary>
            The channel rectangle.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.topArrowClicked">
            <summary>
            Indicates if top arrow was clicked.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.bottomArrowClicked">
            <summary>
            Indicates if bottom arrow was clicked.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.topBarClicked">
            <summary>
            Indicates if channel rectangle above the thumb was clicked.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.bottomBarClicked">
            <summary>
            Indicates if channel rectangle under the thumb was clicked.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.thumbClicked">
            <summary>
            Indicates if the thumb was clicked.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.thumbState">
            <summary>
            The state of the thumb.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.topButtonState">
            <summary>
            The state of the top arrow.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.bottomButtonState">
            <summary>
            The state of the bottom arrow.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.minimum">
            <summary>
            The scrollbar value minimum.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.maximum">
            <summary>
            The scrollbar value maximum.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.smallChange">
            <summary>
            The small change value.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.largeChange">
            <summary>
            The large change value.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.m_Value">
            <summary>
            The value of the scrollbar.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.thumbBottomLimitBottom">
            <summary>
            The bottom limit for the thumb bottom.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.thumbBottomLimitTop">
            <summary>
            The bottom limit for the thumb top.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.thumbTopLimit">
            <summary>
            The top limit for the thumb top.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.thumbPosition">
            <summary>
            The current position of the thumb.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.trackPosition">
            <summary>
            The track position.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.progressTimer">
            <summary>
            The progress timer for moving the thumb.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.contextMenu">
            <summary>
            Context menu strip.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.tsmiScrollHere">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.tsmiTop">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.tsmiBottom">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.tsmiLargeUp">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.tsmiLargeDown">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.tsmiSmallUp">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.tsmiSmallDown">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsVScrollBar"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control"/> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.ShouldSerializeMargin">
            <summary>
            Shoulds the serialize margin.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.ResetMargin">
            <summary>
            Resets the margin.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.PerformScroll(System.Boolean)">
            <summary>
            Performs scroll with <see cref="P:Stone.WinUI.AsVScrollBar.SmallChange"/> value.
            </summary>
            <param name="increase">if set to <c>true</c> value will be increase, otherwise false.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.PerformScroll(System.Int32)">
            <summary>
            Performs scroll with specific value.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Stone.WinUI.AsVScrollBar.orientation">
            <summary>
            The scroll orientation in scroll events.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Raises the <see cref="E:Stone.WinUI.AsVScrollBar.Scroll"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.OnValueChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ValueChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the control.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains information about the control to paint.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.GetValue(System.Drawing.Point)">
            <summary>
            Get value from mouse point.
            </summary>
            <param name="ptMouse"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Resize"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Occur after <see cref="P:Stone.WinUI.AsBaseControl.RendererType"/> changed.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.ToScrollBarState(Stone.WinUI.ScrollBarStates)">
            <summary>
            Convert from the state of the scroll bar.
            </summary>
            <param name="state">The state.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.SetValue(System.Int32,System.Windows.Forms.ScrollEventType)">
            <summary>
            Sets the new value and raise event OnScroll and OnValueChange
            </summary>
            <param name="newValue">The new value.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.SetUpScrollBar">
            <summary>
            Sets up the scrollbar.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.ResetScrollStatus">
            <summary>
            Resets the scroll status of the scrollbar.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.GetValue(System.Boolean,System.Boolean)">
            <summary>
            Calculates the new value of the scrollbar.
            </summary>
            <param name="smallIncrement">true for a small change, false otherwise.</param>
            <param name="up">true for up movement, false otherwise.</param>
            <returns>The new scrollbar value.</returns>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.GetArrowTriangle(System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Gets the arrow triangle.
            </summary>
            <param name="rectButton">The rect button.</param>
            <param name="arrowUp">if set to <c>true</c> [arrow up].</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.GetArrowTriangle(System.Drawing.Rectangle,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Gets the arrow triangle.
            </summary>
            <param name="rectButton">The rect button.</param>
            <param name="arrowUp">if set to <c>true</c> [arrow up].</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.GetThumbPosition">
            <summary>
            Calculates the new thumb position.
            </summary>
            <returns>The new thumb position.</returns>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.GetThumbSize">
            <summary>
            Calculates the height of the thumb.
            </summary>
            <returns>The height of the thumb.</returns>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.EnableTimer">
            <summary>
            Enables the timer.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.StopTimer">
            <summary>
            Stops the progress timer.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.ChangeThumbPosition(System.Int32)">
            <summary>
            Changes the position of the thumb.
            </summary>
            <param name="position">The new position.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.progressTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the progressTimer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.ProgressThumb(System.Boolean)">
            <summary>
            Controls the movement of the thumb.
            </summary>
            <param name="enableTimer">true for enabling the timer, false otherwise.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.ChangeContextMenuItems">
            <summary>
            Changes the displayed text of the context menu items dependent of the current layout.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.InitializeComponent">
            <summary>
            Initializes the context menu.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.tsmiScrollHere_Click(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.tsmiTop_Click(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.tsmiBottom_Click(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.tsmiLargeUp_Click(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.tsmiLargeDown_Click(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.tsmiSmallUp_Click(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Stone.WinUI.AsVScrollBar.tsmiSmallDown_Click(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="E:Stone.WinUI.AsVScrollBar.Scroll">
            <summary>
            Occurs when the scrollbar scrolled.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsVScrollBar.ValueChanged">
            <summary>
            Occurs when value changed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsVScrollBar.Margin">
            <summary>
            Gets or sets the space between controls.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Windows.Forms.Padding"/> representing the space between controls.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsVScrollBar.BaseColor">
            <summary>
            Gets or sets the color of the control.
            <para>This property effect for <see cref="F:Stone.WinUI.RendererTypes.AeroGlass"/> or above.</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsVScrollBar.IsVertical">
            <summary>
            Gets a value indicating whether this instance is vertical.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsVScrollBar.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsVScrollBar.Minimum">
            <summary>
            Gets or sets the minimum value.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsVScrollBar.Maximum">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsVScrollBar.TabStop">
            <summary>
            Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.
            </summary>
            <value></value>
            <returns>true if the user can give the focus to the control using the TAB key; otherwise, false. The default is true.
            Note:
            This property will always return
            true for an instance of the <see cref="T:System.Windows.Forms.Form"/> class.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
            	<IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Stone.WinUI.AsVScrollBar.SmallChange">
            <summary>
            Gets or sets the small change amount.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsVScrollBar.LargeChange">
            <summary>
            Gets or sets the large change amount.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsVScrollBar.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsVScrollBar.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value></value>
            <returns>
            The default <see cref="T:System.Drawing.Size"/> of the control.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsVScrollBar.Renderer">
            <summary>
            Gets or sets the customs renderer.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsHScrollBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsHScrollBar"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsHScrollBar.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control"/> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:Stone.WinUI.AsHScrollBar.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value></value>
            <returns>
            The default <see cref="T:System.Drawing.Size"/> of the control.
            </returns>
        </member>
        <member name="M:Stone.WinUI.HScrollBarBasic.#ctor">
            <summary>
            Horizontal scroll bar
            </summary>
        </member>
        <member name="M:Stone.WinUI.HScrollBarBasic.AsHScrollBar_GotFocus(System.Object,System.EventArgs)">
            <summary>
            Focus to parent
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Stone.WinUI.HScrollBarBasic.Width">
            <summary>
            Get or set the width of control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.HScrollBarBasic.Height">
            <summary>
            Get or set the control's height.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Forms.GotoLineForm">
            <summary>
            Goto line from
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.GotoLineForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.GotoLineForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.GotoLineForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.GotoLineForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Forms.GotoLineForm"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.GotoLineForm.Localize">
            <summary>
            Localizes resource of this instance.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.GotoLineForm.Maximum">
            <summary>
            Sets the maximum line.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.GotoLineForm.ToLine">
            <summary>
            Gets or sets to line.
            </summary>
        </member>
        <member name="T:Stone.WinUI.PopupMsgFilter">
            <summary>
            Message filter for form popup.
            </summary>
        </member>
        <member name="M:Stone.WinUI.PopupMsgFilter.#ctor(System.Windows.Forms.Form)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.PopupMsgFilter"/> class.
            </summary>
            <param name="popup">The popup.</param>
        </member>
        <member name="M:Stone.WinUI.PopupMsgFilter.MouseDownSomeWhere">
            <summary>
            Press mouse down at somewhere.
            </summary>
        </member>
        <member name="M:Stone.WinUI.PopupMsgFilter.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Filters out a message before it is dispatched.
            </summary>
            <param name="m">The message to be dispatched. You cannot modify this message.</param>
            <returns>
            true to filter the message and stop it from being dispatched; false to allow the message to continue to the next filter or control.
            </returns>
        </member>
        <member name="E:Stone.WinUI.PopupMsgFilter.CancelPopup">
            <summary>
            Occurs when need to cancel popup.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsPanelDesigner">
            <summary>
            Designer for <see cref="T:Stone.WinUI.AsPanel"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsPanelDesigner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsPanelDesigner"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsPanelDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The <see cref="T:System.ComponentModel.IComponent"/> to associate with the designer.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsPanelDesigner.GetHitTest(System.Drawing.Point)">
            <summary>
            Indicates whether a mouse click at the specified point should be handled by the control.
            </summary>
            <param name="point">A <see cref="T:System.Drawing.Point"/> indicating the position at which the mouse was clicked, in screen coordinates.</param>
            <returns>
            true if a click at the specified point is to be handled by the control; otherwise, false.
            </returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsPanelDesigner.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages and passes WM_HSCROLL and WM_VSCROLL messages to the control at design time.
            </summary>
            <param name="m">The <see cref="T:System.Windows.Forms.Message"/> to process.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsPanelDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.
            </summary>
            <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that provides data for the event.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsPanelDesigner.RedirectChildToContent(System.Windows.Forms.Control,System.String)">
            <summary>
            add content
            </summary>
            <param name="ctl"></param>
            <param name="name"></param>
        </member>
        <member name="P:Stone.WinUI.Design.AsPanelDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value></value>
            <returns>
            The design-time action lists supported by the component associated with the designer.
            </returns>
        </member>
        <member name="T:Stone.WinUI.Renderers.VS2005ColorTable">
            <summary>
            Provide VS2005 Theme colors
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.StatusStripGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.StatusStripGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ButtonCheckedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ButtonCheckedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ButtonCheckedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ButtonPressedBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ButtonPressedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ButtonPressedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ButtonPressedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ButtonSelectedBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ButtonSelectedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ButtonSelectedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ButtonSelectedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.CheckBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.CheckPressedBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.CheckSelectedBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.GripDark">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.GripLight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ImageMarginGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ImageMarginGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ImageMarginGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ImageMarginRevealedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ImageMarginRevealedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ImageMarginRevealedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.MenuBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.MenuItemBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.MenuItemPressedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.MenuItemPressedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.MenuItemPressedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.MenuItemSelected">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.MenuItemSelectedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.MenuItemSelectedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.MenuStripGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.MenuStripGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.OverflowButtonGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.OverflowButtonGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.OverflowButtonGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.RaftingContainerGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.RaftingContainerGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.SeparatorDark">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.SeparatorLight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ToolStripBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ToolStripDropDownBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ToolStripGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ToolStripGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ToolStripGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ToolStripPanelGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.VS2005ColorTable.ToolStripPanelGradientEnd">
            <inheritdoc />
        </member>
        <member name="T:Stone.WinUI.Renderers.Office2007ColorTable">
            <summary>
            Provide Office 2007 Blue Theme colors
            </summary>
        </member>
        <member name="M:Stone.WinUI.Renderers.Office2007ColorTable.#ctor">
            <summary>
            Initialize a new instance of the Office2007ColorTable class.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ButtonPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ButtonPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ButtonPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ButtonSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ButtonSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ButtonSelectedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ButtonSelectedHighlightBorder">
            <summary>
            Gets the border color to use with ButtonSelectedHighlight.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.CheckBackground">
            <summary>
            Gets the solid color to use when the check box is selected and gradients are being used.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.GripDark">
            <summary>
            Gets the color to use for shadow effects on the grip or move handle.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.GripLight">
            <summary>
            Gets the color to use for highlight effects on the grip or move handle.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ImageMarginGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.MenuBorder">
            <summary>
            Gets the border color or a MenuStrip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.MenuItemPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.MenuItemPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.MenuItemPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.MenuItemSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.MenuItemSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.MenuStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.MenuStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.OverflowButtonGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.OverflowButtonGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.OverflowButtonGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.RaftingContainerGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.RaftingContainerGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.SeparatorDark">
            <summary>
            Gets the color to use to for shadow effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.SeparatorLight">
            <summary>
            Gets the color to use to for highlight effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.StatusStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.StatusStripGradientEnd">
            <summary>
            Gets the end color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ToolStripBorder">
            <summary>
            Gets the border color to use on the bottom edge of the ToolStrip.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ToolStripContentPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ToolStripContentPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ToolStripDropDownBackground">
            <summary>
            Gets the solid background color of the ToolStripDropDown.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ToolStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ToolStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ToolStripGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ToolStripPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2007ColorTable.ToolStripPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsLicenseProvider">
            <summary>
            License provider.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLicenseProvider.LoadDevLicense(Stone.WinUI.FingerCrypto,System.String@)">
            <summary>
            Developer license exists and valid.
            </summary>
            <param name="protector"></param>
            <param name="activateKey"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsLicenseProvider.GetAssemblyProductName(System.Reflection.Assembly)">
            <summary>
            Gets the name of the assembly product.
            </summary>
            <param name="assembly">The assembly.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsLicenseProvider.GetSavedLicenseKey(System.ComponentModel.LicenseContext,System.Type)">
            <summary>
            Gets the saved license key.
            </summary>
            <param name="context">The context.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsLicenseProvider.GetVersionFromAssembly(System.Reflection.Assembly)">
            <summary>
            Gets the version from assembly.
            </summary>
            <param name="assembly">The assembly.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsLicenseProvider.splitLicense(System.String)">
            <summary>
            Splits the license string.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>
            Gets a license for an instance or type of component, 
            when given a context and whether the denial of a license throws an exception.
            </summary>
            <param name="context">A <see cref="T:System.ComponentModel.LicenseContext"/> that specifies where you can use the licensed object.</param>
            <param name="type">A <see cref="T:System.Type"/> that represents the component requesting the license.</param>
            <param name="instance">An object that is requesting the license.</param>
            <param name="allowExceptions">true if a <see cref="T:System.ComponentModel.LicenseException"/> should be thrown when the component cannot be granted a license; otherwise, false.</param>
            <returns>
            A valid <see cref="T:System.ComponentModel.License"/>.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsLicenseProvider.AlreadyChecked">
            <summary>
            Gets a value indicating whether pass from checker.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Helper.DataHelper">
            <summary>
            Helper class for DataTable.
            </summary>
            <summary>
            Helper class for generate PivotTable from DataTable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Helper.DataHelper.SetDefaultRowValue(System.Data.DataTable,System.Data.DataRowView)">
            <summary>
            Set initialized value on each column.
            </summary>
            <param name="dt"></param>
            <param name="row"></param>
        </member>
        <member name="M:Stone.WinUI.Helper.DataHelper.SelectDistinct(System.Data.DataTable,System.String[])">
            <summary>
            Select Distinct from DataTable.
            </summary>
            <param name="sourceTable"></param>
            <param name="fieldNames"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.DataHelper.fieldValuesAreEqual(System.Object[],System.Data.DataRow,System.String[])">
            <summary>
            Internal compares.
            </summary>
            <param name="lastValues"></param>
            <param name="currentRow"></param>
            <param name="fieldNames"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.DataHelper.createRowClone(System.Data.DataRow,System.Data.DataRow,System.String[])">
            <summary>
            Create row clone
            </summary>
            <param name="sourceRow"></param>
            <param name="newRow"></param>
            <param name="fieldNames"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.DataHelper.setLastValues(System.Object[],System.Data.DataRow,System.String[])">
            <summary>
            Set last values.
            </summary>
            <param name="lastValues"></param>
            <param name="sourceRow"></param>
            <param name="fieldNames"></param>
        </member>
        <member name="M:Stone.WinUI.Helper.DataHelper.Eval(System.String,System.Object[])">
            <summary>
            Evals the specified expression.
            </summary>
            <param name="expression">The expression.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.DataHelper.PivotTable(System.Data.DataTable,System.String,System.String[])">
            <summary>
            Gets a Inverted DataTable
            </summary>
            <param name="table">DataTable do invert</param>
            <param name="columnX">X Axis Column</param>
            <param name="columnsToIgnore">Columns that should be ignored in the pivot process (X Axis column is ignored by default)</param>
            <returns>C# Pivot Table Method  - Felipe Sabino</returns>
        </member>
        <member name="M:Stone.WinUI.Helper.DataHelper.PivotTable(System.Data.DataTable,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets a Inverted DataTable
            </summary>
            <param name="table">Source of pivot</param>
            <param name="columnX">X Axis Column</param>
            <param name="columnY">Y Axis Column</param>
            <param name="columnZ">Z Axis Column (values)</param>
            <param name="nullValue">null Values to be filled</param>
            <param name="sumValues"></param>
            <returns>C# Pivot Table Method  - Felipe Sabino</returns>
        </member>
        <member name="T:Stone.WinUI.Helper.ColorHelper">
            <summary>
            Color Utility.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Helper.ColorHelper.BlendColors(System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>
            Calculates a new color by blending two colors.
            </summary>
            <param name="front">The foreground color.</param>
            <param name="back">The background color.</param>
            <param name="alpha">The simulated alpha value of the foreground color.</param>
            <returns>A blend between the foreground and background colors.</returns>
        </member>
        <member name="M:Stone.WinUI.Helper.ColorHelper.BlendHilight">
            <summary>
            Get Blend Color of LinearGradientBrush 
            in pattern (SystemColors.Hilight, SystemColors.Window, LinearGradientMode.Horizontal)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.ColorHelper.Reverse(System.Drawing.Color)">
            <summary>
            Reverses the specified color in.
            </summary>
            <param name="colorin">Color in.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.ColorHelper.ColorBlend2007(System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            Get <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> for Office2007 style.
            </summary>
            <param name="startColor">Begining color</param>
            <param name="stopColor">Ending color.</param>
            <param name="highlightCenter">if set to <c>true</c> [center highlight].</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.ColorHelper.ColorOffice2007">
            <summary>
            Gets the color for Office2007, default is (66,128,179)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.ColorHelper.Dark(System.Drawing.Color,System.Int32)">
            <summary>
            Darken Color
            </summary>
            <param name="colorIn">Source color</param>
            <param name="percent">Range from 0-100, Greater is darker.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.ColorHelper.Light(System.Drawing.Color,System.Int32)">
            <summary>
            Lighten Color
            </summary>
            <param name="colorIn">Source color.</param>
            <param name="percent">Range from 0-100, Greater is lighter.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.ColorHelper.FromHex(System.String)">
            <summary>
            Retrive color from hex string format. Example: #00FFCC
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Helper.ColorHelper.IsDarkColor(System.Drawing.Color)">
            <summary>
            Determines whether [is dark color] [the specified c].
            </summary>
            <param name="c">Color to check.</param>
            <returns>
            	<c>true</c> if [is dark color] [the specified c]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Stone.WinUI.Helper.ColorHelper.ControlHighlight">
            <summary>
            Get color highlight in classic mode.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Helper.ColorHelper.ControlPress">
            <summary>
            Get color press.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererUpDownButtonOffice2007.#ctor(Stone.WinUI.AsNumberBox.UpDownButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererUpDownButtonOffice2007"/> class.
            </summary>
            <param name="updown">The updown.</param>
        </member>
        <member name="T:Stone.WinUI.RendererRadioButtonAeroGlass">
            <summary>
            Renderer radio button.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererRadioButtonAeroGlass.#ctor(Stone.WinUI.AsRadioButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererRadioButtonAeroGlass"/> class.
            </summary>
            <param name="radioButton">The radio button.</param>
        </member>
        <member name="M:Stone.WinUI.RendererRadioButtonAeroGlass.DrawRadioBox(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOfficeXP.#ctor(Stone.WinUI.AsGrouper)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererGrouperOfficeXP"/> class.
            </summary>
            <param name="grouper">The grouper.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOfficeXP.DrawGroupBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the group box.
            </summary>
            <param name="g">Device context</param>
            <param name="rectBorder">The rect border.</param>
            <param name="rectText">The rect text.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOfficeXP.DrawDefault(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.MouseStates)">
            <summary>
            Draws the default style.
            </summary>
            <param name="g">Device context</param>
            <param name="rectHead">The rect head.</param>
            <param name="rectBody">The rect body.</param>
            <param name="headerVerticalState">The header state when vertical expand.</param>
        </member>
        <member name="P:Stone.WinUI.RendererGrouperOfficeXP.AutoBaseColor">
            <summary>
            Gets the default color when BaseColor is Transparent.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorOfficeXP.#ctor(Stone.WinUI.AsGrouper)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererNavigatorOfficeXP"/> class.
            </summary>
            <param name="navigator">The navigator.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorOfficeXP.DrawSplitter(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the splitter.
            </summary>
            <param name="g">The g.</param>
            <param name="rectBody">The rect body.</param>
            <param name="rectSpliter">The rect spliter.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorOfficeXP.DrawBand(System.Drawing.Graphics,Stone.WinUI.AsBand,System.Boolean,System.Drawing.SolidBrush,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>
            Draws the band.
            </summary>
            <param name="g">Device context</param>
            <param name="band">The band.</param>
            <param name="selected">Band is selected</param>
            <param name="textBrush">The text brush.</param>
            <param name="font">The font.</param>
            <param name="sf">The sf.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorOfficeXP.DrawFooterBand(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the footer band.
            </summary>
            <param name="g">Device context</param>
            <param name="rectFooterBand">The rect footer band.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorOfficeXP.DrawMoreOption(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.MouseStates)">
            <summary>
            Draws the more option button.
            </summary>
            <param name="g">Device context</param>
            <param name="rectMoreOption">The rect more option.</param>
            <param name="state">The state.</param>
        </member>
        <member name="P:Stone.WinUI.RendererNavigatorOfficeXP.Navigator">
            <summary>
            Gets the navigator.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsToolTipClosedEventArgs">
            <summary>
            EventArgs for <see cref="T:Stone.WinUI.AsToolTip"/> when closed.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolTipClosedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsToolTipClosedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolTipClosedEventArgs.AssociatedControl">
            <summary>
            Gets the associated control.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsGrouperDesigner">
            <summary>
            Designer for <see cref="T:Stone.WinUI.AsGrouper"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGrouperDesigner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsGrouperDesigner"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGrouperDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.
            </summary>
            <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that provides data for the event.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsGrouperDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component will expose through a <see cref="T:System.ComponentModel.TypeDescriptor"/>.
            </summary>
            <param name="properties">An <see cref="T:System.Collections.IDictionary"/> that contains the properties for the class of the component.</param>
        </member>
        <member name="P:Stone.WinUI.Design.AsGrouperDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value></value>
            <returns>
            The design-time action lists supported by the component associated with the designer.
            </returns>
        </member>
        <member name="T:Stone.WinUI.AsLabel">
            <summary>
            Represent as label with line and supported UseMnemonicFor.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLabel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsLabel"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLabel.OnCreateControl">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsLabel.ProcessMnemonic(System.Char)">
            <summary>
            Implement Menumonic for property <see cref="P:Stone.WinUI.AsLabel.UseMnemonicFor"/> control.
            </summary>
            <param name="charCode"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsLabel.SetValue(System.Data.DataRowView)">
            <summary>
            Set text value from DataRowView.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsLabel.SetValue(System.Data.DataRow)">
            <summary>
            Set text value from DataRow.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsLabel.DrawLine(System.Drawing.Graphics)">
            <summary>
            Calculates points for 3D horizontal divider and places it.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Stone.WinUI.AsLabel.GetHorizontalAlignment">
            <summary>
              Evaluates horizontal alignment depending on <c>TextAlign</c> and
              <c>RightToLeft</c> settings.
            </summary>
            <returns>
              One of the <c>HorizontalAlignment</c> values.
            </returns>
        </member>
        <member name="M:Stone.WinUI.AsLabel.Draw3DLine(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Draws 3D horizontal divider line</summary>
            <param name="g"><c>Graphics</c> object.</param>
            <param name="x1">x-coordinate of the first point.</param>
            <param name="y1">y-coordinate of the first point.</param>
            <param name="x2">x-coordinate of the second point.</param>
            <param name="y2">y-coordinate of the second point.</param>
        </member>
        <member name="M:Stone.WinUI.AsLabel.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw image on label.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <returns>Area of draw image.</returns>
        </member>
        <member name="M:Stone.WinUI.AsLabel.DrawText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle)">
            <summary>
            Draw text on label
            </summary>
            <param name="g"></param>
            <param name="s">Text to draw</param>
            <param name="font">Font Windows</param>
            <param name="rect">Label Area</param>
        </member>
        <member name="P:Stone.WinUI.AsLabel.Field">
            <summary>
            Gets or sets column name of the <see cref="T:System.Data.DataColumn"/> to mapping with this control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLabel.Gap">
            <summary>
              Gets or sets the gap (in pixels) between label and line.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLabel.ShowLine">
            <summary>
            Get or set the wheather boolean for show line after text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLabel.TextAlign">
            <summary>
            Text alignment
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLabel.TextRotation">
            <summary>
            Get or set the direction to draw text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLabel.UseMnemonicFor">
            <summary>
            Get or set the control to use with Menumonic key, 
            when press key the control will receive focus.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLabel.Value">
            <summary>
            Get the current value string(no ampersand character).
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLabel.DefaultSize">
            <summary>
            override new size.
            </summary>
            <value></value>
            <returns>
            The default <see cref="T:System.Drawing.Size"/> of the control.
            </returns>
        </member>
        <member name="T:Stone.WinUI.AsNumberDropdown">
            <summary>
            Present as mini calculator.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.#ctor">
            <summary>
            Initialized.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.Localize">
            <summary>
            Localizes resource of this instance.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsNumberDropdown.m_var1">
            <summary>
            เก็บค่าแรกไว้
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsNumberDropdown.m_Operator">
            <summary>
            Sign of operate + - * / etc.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsNumberDropdown.m_bPressOperator">
            <summary>
            If press any operator, status=true, otherwise false.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.asNumberBoxDropDown_Load(System.Object,System.EventArgs)">
            <summary>
            Form load.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.txtDisplay_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Set forecolor for display value.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.btnNumber_Click(System.Object,System.EventArgs)">
            <summary>
            Button numeric clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.btn_Num_0_Click(System.Object,System.EventArgs)">
            <summary>
            Button 0
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.btnCLR_Curr_Click(System.Object,System.EventArgs)">
            <summary>
            Clear current key. Soft reset.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.btnCLR_Click(System.Object,System.EventArgs)">
            <summary>
            Reset all value. It's hard reset.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.btnBackspace_Click(System.Object,System.EventArgs)">
            <summary>
            Delete last char.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.OnNumbericKey(System.String)">
            <summary>
            Keep value from button key
            </summary>
            <param name="valueText">Number button</param>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.OnNumSignKey">
            <summary>
            Convert value (+/-).
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.OnFinished">
            <summary>
            Enter key and no operator.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.OnOperatorKey(System.Char,System.Boolean)">
            <summary>
            Keep value or calculate when operator button key.
            </summary>
            <param name="operatorKey">Sign of operator</param>
            <param name="periodButton">Reset period button to false</param>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.OnCalculateKey">
            <summary>
            Action when enter key
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.Calculate">
            <summary>
            Calc result
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.GetValue">
            <summary>
            Get value from display text box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsNumberDropdown.FocusTextBox">
            <summary>
            Force focus to display text box.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberDropdown.TaxRate">
            <summary>
            Gets or sets tax rate.
            </summary>
            <value>The tax rate.</value>
        </member>
        <member name="P:Stone.WinUI.AsNumberDropdown.Value">
            <summary>
            Get or set the result from calculator.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberDropdown.FormatNumber">
            <summary>
            Get or set format string to display the value.
            <example>{0:#,0.00} is show thousand separate and 2 digit.</example>
            </summary>
        </member>
        <member name="T:Stone.WinUI.Renderers.Office2007BlackColorTable">
            <summary>
            Provide Office 2007 black theme colors
            </summary>
        </member>
        <member name="M:Stone.WinUI.Renderers.Office2007BlackColorTable.InitColors(System.Collections.Generic.Dictionary{Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors,System.Drawing.Color}@)">
            <summary>
            initialize a color Dictionary with defined colors
            </summary>
            <param name="rgbTable">Dictionary with defined colors</param>
        </member>
        <member name="T:Stone.WinUI.NetRuntime">
            <summary>
            Dotnet runtime checker.
            </summary>
        </member>
        <member name="P:Stone.WinUI.NetRuntime.IsDesignMode">
            <summary>
            Gets a value indicating whether this instance is design mode.
            </summary>
            <value>
            	<c>true</c> if this instance is design mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Stone.WinUI.NetRuntime.IsRunningOnMono">
            <summary>
            Gets a value indicating whether this instance is running on mono.
            </summary>
        </member>
        <member name="P:Stone.WinUI.NetRuntime.IsVistaOrLater">
            <summary>
            Gets a value indicating whether this instance is vista or later.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Forms.UdfFilterForm">
            <summary>
            User define filter Form.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.UdfFilterForm.#ctor">
            <summary>
            Innitialized an new udf filter form.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.UdfFilterForm.ValueMember">
            <summary>
            Get or set the field name.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.UdfFilterForm.DisplayMember">
            <summary>
            Get or set the column name to show.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.UdfFilterForm.ColumnFormat">
            <summary>
            Get or set column format.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.UdfFilterForm.UdfFilterString">
            <summary>
            Get or set user define filter string when click column header strip.
            Separate each string with char '|'
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.UdfFilterForm.Localize">
            <summary>
            Localizes resource of this instance.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.UdfFilterForm.UdfFilterForm_Load(System.Object,System.EventArgs)">
            <summary>
            Form load
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.Forms.UdfFilterForm.SetAllowTabPage(System.Boolean,System.Boolean)">
            <summary>
            Sets the allow tab page.
            </summary>
            <param name="allowFilter">if set to <c>true</c> [allow filter].</param>
            <param name="allowSearch">if set to <c>true</c> [allow search].</param>
        </member>
        <member name="M:Stone.WinUI.Forms.UdfFilterForm.GetCharCrop">
            <summary>
            Get charactor crop word for each format.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Stone.WinUI.Forms.UdfFilterForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.UdfFilterForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.UdfFilterForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.UdfFilterForm.DataSource">
            <summary>
            Set the current <see cref="T:System.Data.DataTable"/> from host grid into.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.UdfFilterForm.IndexString">
            <summary>
            Set the index string main resource.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.UdfFilterForm.RowFilter">
            <summary>
            Get string condition to filter rows on dataview.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.UdfFilterForm.RowToGo">
            <summary>
            Get the index of row to go, use zero base.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsDateDropdown">
            <summary>
            Show month calendar for user choose date.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsDateDropdown.#ctor(System.Drawing.Font)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsDateDropdown"/> class.
            </summary>
            <param name="font">Default font.</param>
        </member>
        <member name="M:Stone.WinUI.AsDateDropdown.AsDateDropdown_Load(System.Object,System.EventArgs)">
            <summary>
            Form load
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsDateDropdown.monthCalendar1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Capture key down enter, escape
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsDateDropdown.monthCalendar1_DateSelected(System.Object,System.Windows.Forms.DateRangeEventArgs)">
            <summary>
            Event fired when select date.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsDateDropdown.FinishDateSelected">
            <summary>
            When select date finished, send value and close.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsDateDropdown.CancelDate">
            <summary>
            To close or leave from this form.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsDateDropdown.Localize">
            <summary>
            Localizes resource of this instance.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsDateDropdown.OnFontChanged(System.EventArgs)">
            <summary>
            Adjust font at status strip.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsDateDropdown.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.SystemColorsChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsDateDropdown.SetColorSystem3DAndOffice2003">
            <summary>
            Set title back color/fore color.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsDateDropdown.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:RendererTypeChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Stone.WinUI.AsDateDropdown.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsDateDropdown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.AsDateDropdown.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsDateDropdown.DateSelected">
            <summary>
            Get or set date only(no time) from user selected.
            </summary>
            <value>The date selected.</value>
        </member>
        <member name="P:Stone.WinUI.AsDateDropdown.BoldedDates">
            <summary>
            Get or set the BoldedDates (DateTime[])
            </summary>
            <value>The bolded dates.</value>
        </member>
        <member name="T:Stone.WinUI.AsColorBox">
            <summary>
            Represent as color picker edit box.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsColorBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorBox.Dispose(System.Boolean)">
            <summary>
            Release resource.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="F:Stone.WinUI.AsColorBox.m_OldValue">
            <summary>
            Old value before change, keep last value on leave finished.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsColorBox.m_Value">
            <summary>
            Keep color selected in this control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorBox.ResetOldValueToCurrent">
            <summary>
            Sets old value to equal current value.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorBox.Clear">
            <summary>
            Clear value and text.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorBox.GetValue">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorBox.SetValue(System.Object)">
            <summary>
            Set value from <see cref="T:System.Object"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsColorBox.SetValue(System.Drawing.Color)">
            <summary>
            Set value from <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsColorBox.OnLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Leave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsColorBox.OnAfterDataChanged">
            <summary>
            Raised event AfterDataChanged.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsColorBox.OnButtonEditClick">
            <summary>
            Occur when click button or press <see cref="P:Stone.WinUI.AsBaseEditBox.FunctionKey"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorBox.GetAutoCompleteSource">
            <summary>
            Gets the auto complete source.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.AsColorBox.Value">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsColorBox.ValueChanged">
            <summary>
            Get the wheather value changed from user.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsColorBox.DefaultButtonColor">
            <summary>
            Gets the default color of the button.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsColorBox.BeforeDataChange">
            <summary>
            Occur before data change.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsColorBox.AfterDataChanged">
            <summary>
            Occur when leave the control and data changed.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Encryptor.InverseByBase(System.String,System.Int32)">
            <summary>
            Inverses the by base.
            </summary>
            <param name="s">The s.</param>
            <param name="moveBase">The move base.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Encryptor.InverseString(System.String)">
            <summary>
            Inverses the string.
            </summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Encryptor.ConvertToLetterDigit(System.String)">
            <summary>
            Converts to letter digit.
            </summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Encryptor.RenewIndex(System.String)">
            <summary>
            Moving all characters in string insert then into new index
            </summary>
            <param name="s">string to moving characters</param>
            <returns>moved characters string</returns>
        </member>
        <member name="M:Stone.WinUI.Encryptor.MakePassword(System.String,System.String)">
            <summary>
            Makes the password.
            </summary>
            <param name="s">The s.</param>
            <param name="myKey">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Encryptor.changeChar(System.Char,System.Int32[])">
            <summary>
            Changes the char.
            </summary>
            <param name="ch">The ch.</param>
            <param name="enCode">The en code.</param>
            <returns></returns>
        </member>
        <member name="T:Stone.WinUI.RendererScrollbarAeroGlass">
            <summary>
            Renderer Scrollbar AeroGlass Style.
            </summary>
        </member>
        <member name="F:Stone.WinUI.RendererScrollbarAeroGlass.arrowButtonColor">
            <summary>
            Default is DarkGray
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarAeroGlass.#ctor(Stone.WinUI.AsScrollBarBase)">
            <summary>
            Initializes  members of the <see cref="T:Stone.WinUI.RendererScrollbarAeroGlass"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarAeroGlass.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws border around the scrollbar.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarAeroGlass.DrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarAeroGlass.DrawTrack(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarStates)">
            <summary>
            Draws the channel ( or track ).
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The scrollbar state.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarAeroGlass.DrawThumb(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarStates)">
            <summary>
            Draws the thumb.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:Stone.WinUI.ScrollBarStates"/> of the thumb.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarAeroGlass.DrawArrowButton(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarArrowStates,System.Boolean)">
            <summary>
            Draws an arrow button.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:Stone.WinUI.ScrollBarArrowStates"/> of the arrow button.</param>
            <param name="arrowUp">true for an up arrow, false otherwise.</param>
        </member>
        <member name="P:Stone.WinUI.RendererScrollbarAeroGlass.ScrollBar">
            <summary>
            Gets the scroll bar.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperAeroGlass.#ctor(Stone.WinUI.AsGrouper)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererGrouperAeroGlass"/> class.
            </summary>
            <param name="grouper">The grouper.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperAeroGlass.DrawGroupBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the group box.
            </summary>
            <param name="g">Device context</param>
            <param name="rectBorder">The rect border.</param>
            <param name="rectText">The rect text.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperAeroGlass.DrawPlusMinus(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws the plus minus.
            </summary>
            <param name="g">Device context</param>
            <param name="rectButton">The rect button plus/minus.</param>
            <param name="expanded">if set to <c>true</c> [expanded].</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperAeroGlass.DrawDefault(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.MouseStates)">
            <summary>
            Draws the default style.
            </summary>
            <param name="g">Device context</param>
            <param name="rectHead">The rect head.</param>
            <param name="rectBody">The rect body.</param>
            <param name="headerVerticalState"></param>
        </member>
        <member name="P:Stone.WinUI.RendererGrouperAeroGlass.AutoBaseColor">
            <summary>
            Gets the default color when BaseColor is Transparent.
            </summary>
        </member>
        <member name="T:Stone.WinUI.RendererCheckBoxOfficeXP">
            <summary>
            Renderer check box.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererCheckBoxOfficeXP.#ctor(Stone.WinUI.AsCheckBox)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererCheckBoxOfficeXP"/> class.
            </summary>
            <param name="checkbox">The checkbox.</param>
        </member>
        <member name="M:Stone.WinUI.RendererCheckBoxOfficeXP.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CheckState,Stone.WinUI.ButtonDrawStates)">
            <inheritdoc />
        </member>
        <member name="T:Stone.WinUI.AsGridDrawHeaderTopEventArgs">
            <summary>
            Custom draw column top header event args.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridDrawHeaderTopEventArgs.#ctor(System.Drawing.Graphics,Stone.WinUI.AsGridColumnTop,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridDrawHeaderTopEventArgs"/> class.
            </summary>
            <param name="g">The g.</param>
            <param name="col">The col.</param>
            <param name="font">The font.</param>
            <param name="foreColor">Color of the fore.</param>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawHeaderTopEventArgs.Graphics">
            <summary>
            Get the Graphics.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawHeaderTopEventArgs.ColumnTop">
            <summary>
            Gets the column top header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawHeaderTopEventArgs.Font">
            <summary>
            Get the font to draw column header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawHeaderTopEventArgs.ForeColor">
            <summary>
            Get ForeColor to draw column header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawHeaderTopEventArgs.DrawBackground">
            <summary>
            Get or set the wheather to draw background state by system(true) or custom(false).
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawHeaderTopEventArgs.DrawImageHeader">
            <summary>
            Get or set the wheather to draw image heaer or not.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawHeaderTopEventArgs.DrawText">
            <summary>
            Get or set the wheather to draw column text header or not.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridColumnReOrderEventArgs">
            <summary>
            Event Args when reorder column.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridColumnReOrderEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridColumnReOrderEventArgs"/> class.
            </summary>
            <param name="oldIndex">The old index.</param>
            <param name="newIndex">The new index.</param>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnReOrderEventArgs.Cancel">
            <summary>
            Get or set the Cancel (bool)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnReOrderEventArgs.OldIndex">
            <summary>
            Get the source column index.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnReOrderEventArgs.NewIndex">
            <summary>
            Get the destination column index.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridCellStyleEventArgs">
            <summary>
            Event Args for CellStyle.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridCellStyleEventArgs.#ctor(System.Drawing.StringAlignment,System.Drawing.Color,System.Drawing.FontStyle,System.String,System.Data.DataRowView)">
            <summary>
            Innitialized a cell style.
            </summary>
            <param name="align"></param>
            <param name="foreColor"></param>
            <param name="fontStyle"></param>
            <param name="fieldName"></param>
            <param name="rowView"></param>
        </member>
        <member name="P:Stone.WinUI.AsGridCellStyleEventArgs.Alignment">
            <summary>
            Get or set the Alignment (StringAlignment)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellStyleEventArgs.BackColor">
            <summary>
            Get or set the BackColor (Color)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellStyleEventArgs.FieldName">
            <summary>
            Get the FieldName (string)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellStyleEventArgs.RowView">
            <summary>
            Get the RowView (DataRowView)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellStyleEventArgs.CustomFontStyle">
            <summary>
            Get or set the FontBold (bool)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellStyleEventArgs.ForeColor">
            <summary>
            Get or set the ForeColor (Color)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellStyleEventArgs.BorderColor">
            <summary>
            Get or set the BorderColor (Color)
            </summary>
        </member>
        <member name="T:Stone.WinUI.QuickSearchingEventArgs">
            <summary>
            EventArgs for quick searching.
            </summary>
        </member>
        <member name="M:Stone.WinUI.QuickSearchingEventArgs.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.QuickSearchingEventArgs"/> class.
            </summary>
            <param name="field">The field.</param>
            <param name="text">The text.</param>
            <param name="maxRecord">The max record.</param>
        </member>
        <member name="P:Stone.WinUI.QuickSearchingEventArgs.MaxRecord">
            <summary>
            Gets the max record.
            </summary>
        </member>
        <member name="P:Stone.WinUI.QuickSearchingEventArgs.DataSource">
            <summary>
            Sets the data source, this value will be assign to the SearchBoxDropdown.
            </summary>
        </member>
        <member name="P:Stone.WinUI.QuickSearchingEventArgs.Field">
            <summary>
            Gets the field name.
            </summary>
        </member>
        <member name="P:Stone.WinUI.QuickSearchingEventArgs.Text">
            <summary>
            Gets the current text.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsPanelActoinList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsPanelActoinList"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsPanelActoinList.SetProperty(System.String,System.Object)">
            <summary>
            Sets the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsPanelActoinList.GetProperty``1(System.String)">
            <summary>
            Gets the property.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsPanelActoinList.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem"/> objects contained in the list.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.Design.DesignerActionItem"/> array that contains the items in this list.
            </returns>
        </member>
        <member name="P:Stone.WinUI.Design.AsPanelActoinList.BackColor">
            <summary>
            Gets or sets back color
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsPanelActoinList.BorderColor">
            <summary>
            Gets or sets border color
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsPanelActoinList.BorderStyle">
            <summary>
            Gets or sets border style.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsPanelActoinList.ColorStart">
            <summary>
            Gets or sets start color
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsPanelActoinList.ColorStop">
            <summary>
            Gets or sets stop color
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsPanelActoinList.GradientMode">
            <summary>
            Gets or sets gradient mode.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsPanelActoinList.RendererType">
            <summary>
            Gets or sets renderer type.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsPanelActoinList.AutoScroll">
            <summary>
            Gets or sets auto scroll.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsPanelActoinList.Dock">
            <summary>
            Gets or sets dock style.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsGrouperActionList">
            <summary>
            Action list for <see cref="T:Stone.WinUI.AsGrouper"/>
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGrouperActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsGrouperActionList"/> class.
            </summary>
            <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList"/>.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsGrouperActionList.SetProperty(System.String,System.Object)">
            <summary>
            Sets the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsGrouperActionList.GetProperty``1(System.String)">
            <summary>
            Gets the property.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGrouperActionList.InvokeAbout">
            <summary>
            Show About form.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGrouperActionList.GetSortedActionItems">
            <summary>
            Get Sorted Action Items.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.Design.AsGrouperActionList.BaseColor">
            <summary>
            Gets or sets the color of the base.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGrouperActionList.HeaderImage">
            <summary>
            Gets or sets the image at header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGrouperActionList.PaddingOuter">
            <summary>
            Gets or sets the padding outer around the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGrouperActionList.HeaderFont">
            <summary>
            Gets or sets the header font.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGrouperActionList.RendererType">
            <summary>
            Gets or sets the type of the renderer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGrouperActionList.HeaderForeColor">
            <summary>
            Gets or sets the header fore color.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGrouperActionList.Dock">
            <summary>
            Gets or sets the dock.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGrouperActionList.GroupStyle">
            <summary>
            Gets or sets a value indicating whether style of the grouper.
            </summary>
        </member>
        <member name="T:Stone.WinUI.SR">
            <summary>
            Specific resource from current ui culture to display diffenence language.
            </summary>
        </member>
        <member name="M:Stone.WinUI.SR.#cctor">
            <summary>
            Initializes the <see cref="T:Stone.WinUI.SR"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.SR.GetString(System.String)">
            <summary>
            Gets resource string from the given name.
            </summary>
            <param name="name">The resource name.</param>
            <returns></returns>
        </member>
        <member name="T:Stone.WinUI.AsSearchBox">
            <summary>
            Represent as custom search box.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsSearchBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsSearchBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsSearchBox.Dispose(System.Boolean)">
            <summary>
            Release resource.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="F:Stone.WinUI.AsSearchBox.SuspendQuickSearch">
            <summary>
            Temporary disable quick search when true.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsSearchBox.m_Focusing">
            <summary>
            กำลังจะไป focus ที่ dropdown และไม่ให้ dropdown ปิดไปซะก่อน
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsSearchBox.OnQuickSearching(Stone.WinUI.QuickSearchingEventArgs)">
            <summary>
            Raises the <see cref="E:QuickSearching"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.QuickSearchingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsSearchBox.OnQuickSearched(Stone.WinUI.QuickSearchedEventArgs)">
            <summary>
            Raises the <see cref="E:QuickSearched"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.QuickSearchedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsSearchBox.CloseDropdown">
            <summary>
            Close the dropdown if not null.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsSearchBox.m_OldValue">
            <summary>
            Old value before change, keep last value on leave finished.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsSearchBox.ResetOldValueToCurrent">
            <summary>
            Sets old value to equal current value.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsSearchBox.OnAfterDataChanged">
            <summary>
            Raised event AfterDataChanged.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsSearchBox.SetDisplayPoint(System.Drawing.Point@,System.Int32,System.Int32)">
            <summary>
            Set display point for drop down or combo.
            </summary>
            <param name="point"></param>
            <param name="dropdownWidth"></param>
            <param name="dropdownHeight"></param>
        </member>
        <member name="M:Stone.WinUI.AsSearchBox.OnAfterKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raise event AfterKeyDown in edit box.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsSearchBox.OnAfterTextChanged(System.EventArgs)">
            <summary>
            Raised event AfterTextChanged in edit box.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsSearchBox.OnButtonClick(System.EventArgs)">
            <summary>
            On custom button click.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsSearchBox.OnLeave(System.EventArgs)">
            <summary>
            On leave.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsSearchBox.SetValue(System.Object)">
            <summary>
            Set value from <see cref="T:System.Object"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsSearchBox.SetValue(System.String)">
            <summary>
            Set value from <see cref="T:System.String"/>.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsSearchBox.Clear">
            <summary>
            Clear value and text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSearchBox.AllowQuickSearch">
            <summary>
            Gets or sets a value indicator wheather to allow quick search.
            When set to true, popup will show after text changed by user.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSearchBox.DisplayField">
            <summary>
            Get or set field name to display as description.
            <para>Patterns: FieldName|TextHeader</para>
            <para>Examples: NameMain|Description</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSearchBox.ValueField">
            <summary>
            Get or set field name to display as value.
            <para>Patterns: FieldName|TextHeader</para>
            <para>Examples: Code|Code</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSearchBox.RowFilter">
            <summary>
            Get or set custom row filter string when <see cref="P:Stone.WinUI.AsSearchBox.AllowQuickSearch"/> is true.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSearchBox.ManualColumns">
            <summary>
            Get or set custom list of <see cref="T:Stone.WinUI.AsGridViewColumn"/> to display in dropdown 
            when <see cref="P:Stone.WinUI.AsSearchBox.AllowQuickSearch"/> is true.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSearchBox.MaxRecord">
            <summary>
            Gets or sets the max record to show in quick search popup(default=10) 
            when <see cref="P:Stone.WinUI.AsSearchBox.AllowQuickSearch"/> is true.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsSearchBox.QuickSearching">
            <summary>
            Occur when <see cref="P:Stone.WinUI.AsSearchBox.AllowQuickSearch"/> is true and user typing in text box, 
            the small popup will be display the result.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsSearchBox.QuickSearched">
            <summary>
            Occurs when <see cref="P:Stone.WinUI.AsSearchBox.AllowQuickSearch"/> is true and user selected new value.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSearchBox.MenuFont">
            <summary>
            Gets the menu font.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSearchBox.DefaultButtonColor">
            <summary>
            Gets the default color of the button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSearchBox.ValueChanged">
            <summary>
            Get the wheather value changed from user.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSearchBox.Value">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsSearchBox.BeforeDataChange">
            <summary>
            Occur before data change.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsSearchBox.AfterDataChanged">
            <summary>
            Occur when leave the control and data changed.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Forms.ImageFloatForm">
            <summary>
            Floating image form.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.ImageFloatForm.#ctor(System.Drawing.Image)">
            <summary>
            Initialized.
            </summary>
            <param name="img"></param>
        </member>
        <member name="M:Stone.WinUI.Forms.ImageFloatForm.Show(System.Drawing.Point)">
            <summary>
            Show while dragging.
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:Stone.WinUI.Forms.ImageFloatForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw image.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.Forms.ImageFloatForm.OnSizeChanged(System.EventArgs)">
            <summary>
            Force form size fit with image.
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Stone.WinUI.Forms.ImageFloatForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.ImageFloatForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.ImageFloatForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.ImageFloatForm.ShowWithoutActivation">
            <summary>
            Always true.
            </summary>
        </member>
        <member name="M:Stone.WinUI.FingerPrint.GenerateUniqueKey(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the unique key from system. 
            </summary>
            <param name="stPrefix">Custom string for prefix before unique key.</param>
            <param name="cpu"></param>
            <param name="board"></param>
            <param name="boardMfg"></param>
            <param name="disk"></param>
            <param name="vga"></param>
            <param name="media"></param>
            <param name="bios"></param>
            <param name="wins"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.FingerPrint.getWMIData(System.String,System.String)">
            <summary>
            Gets the data.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="methodName">Name of the method.</param>
            <returns></returns>
        </member>
        <member name="T:Stone.WinUI.FingerCrypto">
            <summary>
            Finger print and crypto.
            </summary>
        </member>
        <member name="M:Stone.WinUI.FingerCrypto.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.FingerCrypto"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Stone.WinUI.FingerCrypto.GenerateUniqueKey(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Generates the customer ID.
            </summary>
            <param name="prefix"></param>
            <param name="cpu"></param>
            <param name="board"></param>
            <param name="boardMfg"></param>
            <param name="disk"></param>
            <param name="vga"></param>
            <param name="media"></param>
            <param name="bios"></param>
            <param name="wins"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.FingerCrypto.GenerateCustomerID(System.String,System.String@)">
            <summary>
            Generates the customer ID.
            </summary>
            <param name="uniqueKey">The unique key.</param>
            <param name="keyPair">The key pair.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.FingerCrypto.GenerateKeyPair(System.String)">
            <summary>
            Generates the key pair.
            </summary>
            <param name="custID">The cust ID.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.FingerCrypto.Encrypt(System.String)">
            <summary>
            Encrypts the specified string.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.FingerCrypto.Decrypt(System.String)">
            <summary>
            Decrypts the specified s.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.FingerCrypto.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Encrypt a byte array into a byte array using a key and an IV 
            </summary>
            <param name="clearData"></param>
            <param name="Key"></param>
            <param name="IV"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.FingerCrypto.Encrypt(System.String,System.String)">
            <summary>
            Encrypts the specified clear text.
            </summary>
            <param name="clearText">The clear text.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.FingerCrypto.Decrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Decrypt a byte array into a byte array using a key and an IV 
            </summary>
            <param name="cipherData"></param>
            <param name="Key"></param>
            <param name="IV"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.FingerCrypto.Decrypt(System.String,System.String)">
            <summary>
            Decrypt a string into a string using a password
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.FingerCrypto.Key">
            <summary>
            Gets the key.
            </summary>
        </member>
        <member name="T:Stone.WinUI.RendererScrollBarOffice2007">
            <summary>
            Renderer Scrollbar Office 2007 Style.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererScrollBarOffice2007.#ctor(Stone.WinUI.AsScrollBarBase)">
            <summary>
            Initializes  members of the <see cref="T:Stone.WinUI.RendererScrollBarOffice2007"/> class.
            </summary>
            <param name="scrollBar">The scroll bar.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollBarOffice2007.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws border around the scrollbar.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollBarOffice2007.DrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollBarOffice2007.DrawTrack(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarStates)">
            <summary>
            Draws the channel ( or track ).
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The scrollbar state.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollBarOffice2007.DrawThumb(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarStates)">
            <summary>
            Draws the thumb.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:Stone.WinUI.ScrollBarStates"/> of the thumb.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollBarOffice2007.DrawArrowButton(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarArrowStates,System.Boolean)">
            <summary>
            Draws an arrow button.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:Stone.WinUI.ScrollBarArrowStates"/> of the arrow button.</param>
            <param name="arrowUp">true for an up arrow, false otherwise.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollBarOffice2007.GetInvertedColor(System.Drawing.Color)">
            <summary>
            Get fore color and sort arrow when set BaseColor dark.
            <para>Return true if input color is dark, otherwise false.</para>
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.RendererScrollBarOffice2007.ScrollBar">
            <summary>
            Gets the scroll bar.
            </summary>
        </member>
        <member name="P:Stone.WinUI.RendererScrollBarOffice2007.ButtonColor">
            <summary>
            Gets the color of the button.
            </summary>
            <value>The color of the button.</value>
        </member>
        <member name="T:Stone.WinUI.RendererButtonSystem3D">
            <summary>
            Button renderer System3D style.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererButtonSystem3D.#ctor(Stone.WinUI.AsButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererButtonSystem3D"/> class.
            </summary>
            <param name="button">The button.</param>
        </member>
        <member name="M:Stone.WinUI.RendererButtonSystem3D.DrawArrowDropdown(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Draws arrow dropdown.
            </summary>
            <param name="g">The g.</param>
            <param name="arrowColor">Color of the arrow.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="highlight">if set to <c>true</c> [highlight].</param>
        </member>
        <member name="M:Stone.WinUI.RendererButtonSystem3D.DrawBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws background image.
            </summary>
            <param name="g">Device context</param>
            <param name="butRect">Button rect.</param>
        </member>
        <member name="M:Stone.WinUI.RendererButtonSystem3D.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws focus rectangle.
            </summary>
            <param name="g">Device context</param>
            <param name="butRect">Button rect</param>
            <param name="showFocusCues">if set to <c>true</c> [show focus cues].</param>
        </member>
        <member name="M:Stone.WinUI.RendererButtonSystem3D.GetImageArea(System.Drawing.Rectangle,System.Drawing.Size,System.Windows.Forms.TextImageRelation)">
            <summary>
            Gets the avaliable image area.
            </summary>
            <param name="butRect">The but rect.</param>
            <param name="imgSize">Size of the img.</param>
            <param name="textImageRelation">The text image relation.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.RendererButtonSystem3D.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws image.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">Avaliable area to draw image.</param>
            <param name="pressed">if set to <c>true</c> [pressed].</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.RendererButtonSystem3D.DrawButtonSurface(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draw button surface.
            </summary>
            <param name="g">The g.</param>
            <param name="butRect">Button area.</param>
            <param name="dropdownRect">The rect dropdown.</param>
            <param name="parentBackColor">Color of the parent back.</param>
            <param name="isDefault">if set to <c>true</c> [is default].</param>
            <param name="inEditBox">if set to <c>true</c> [in edit box].</param>
            <param name="comboBoxStyle">if set to <c>true</c> [combo box style].</param>
            <param name="pressSplitDropdown">if set to <c>true</c> [press split dropdown].</param>
            <param name="hoverSplitDropdown">if set to <c>true</c> [hover split dropdown].</param>
            <param name="drawState">State of the draw.</param>
        </member>
        <member name="M:Stone.WinUI.RendererButtonSystem3D.DrawColorSelected(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draws the color selected.
            </summary>
            <param name="g">Device context</param>
            <param name="butRect">Button rect exclude arrow dropdown area.</param>
            <param name="drawState">Button draw state.</param>
        </member>
        <member name="M:Stone.WinUI.RendererButtonSystem3D.DrawCommandLinkText(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates,System.Boolean)">
            <summary>
            Draws command link text.
            </summary>
            <param name="g">Device context</param>
            <param name="butRect">Button rect.</param>
            <param name="rectImage">Image rect.</param>
            <param name="drawState">Button draw state.</param>
            <param name="showKeyboardCues">if set to <c>true</c> [show keyboard cues].</param>
        </member>
        <member name="M:Stone.WinUI.RendererButtonSystem3D.DrawCommandLinkOutline(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the command link outline.
            </summary>
            <param name="g">Device context</param>
            <param name="butRect">Button rect</param>
        </member>
        <member name="M:Stone.WinUI.RendererButtonSystem3D.DrawText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates,System.Boolean)">
            <summary>
            Draws the text.
            </summary>
            <param name="g">Device context</param>
            <param name="s">Text to draw</param>
            <param name="font">The font.</param>
            <param name="rect">Avaliable area to draw text.</param>
            <param name="rectImg">Image area</param>
            <param name="drawState">Draw button state</param>
            <param name="showKeyboardCues">Show keyboard cues</param>
        </member>
        <member name="P:Stone.WinUI.RendererButtonSystem3D.Button">
            <summary>
            Gets the button.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererButtonOffice2007.#ctor(Stone.WinUI.AsButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererButtonOffice2007"/> class.
            </summary>
            <param name="button">The button.</param>
        </member>
        <member name="M:Stone.WinUI.RendererButtonOffice2007.DrawButtonSurface(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draw button surface.
            </summary>
            <param name="g">The g.</param>
            <param name="butRect">Button area.</param>
            <param name="dropdownRect">The rect dropdown.</param>
            <param name="parentBackColor">Color of the parent back.</param>
            <param name="isDefault">if set to <c>true</c> [is default].</param>
            <param name="inEditBox">if set to <c>true</c> [in edit box].</param>
            <param name="comboBoxStyle">if set to <c>true</c> [combo box style].</param>
            <param name="pressSplitDropdown">if set to <c>true</c> [press split dropdown].</param>
            <param name="hoverSplitDropdown">if set to <c>true</c> [hover split dropdown].</param>
            <param name="drawState">State of the draw.</param>
        </member>
        <member name="T:Stone.WinUI.RendererCheckBoxAeroGlass">
            <summary>
            Renderer check box.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererCheckBoxAeroGlass.#ctor(Stone.WinUI.AsCheckBox)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererCheckBoxAeroGlass"/> class.
            </summary>
            <param name="checkbox">The checkbox.</param>
        </member>
        <member name="M:Stone.WinUI.RendererCheckBoxAeroGlass.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CheckState,Stone.WinUI.ButtonDrawStates)">
            <inheritdoc />
        </member>
        <member name="T:Stone.WinUI.ScrollBarArrowStates">
            <summary>
            The scrollbar arrow button states.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarArrowStates.UpNormal">
            <summary>
            Indicates the up arrow is in normal state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarArrowStates.UpHot">
            <summary>
            Indicates the up arrow is in hot state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarArrowStates.UpActive">
            <summary>
            Indicates the up arrow is in active state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarArrowStates.UpPressed">
            <summary>
            Indicates the up arrow is in pressed state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarArrowStates.UpDisabled">
            <summary>
            Indicates the up arrow is in disabled state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarArrowStates.DownNormal">
            <summary>
            Indicates the down arrow is in normal state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarArrowStates.DownHot">
            <summary>
            Indicates the down arrow is in hot state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarArrowStates.DownActive">
            <summary>
            Indicates the down arrow is in active state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarArrowStates.DownPressed">
            <summary>
            Indicates the down arrow is in pressed state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarArrowStates.DownDisabled">
            <summary>
            Indicates the down arrow is in disabled state.
            </summary>
        </member>
        <member name="T:Stone.WinUI.ScrollBarThumbStates">
            <summary>
            The scrollbar thumb states.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarThumbStates.Normal">
            <summary>
            Indicates a normal scrollbar state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarThumbStates.Hot">
            <summary>
            Indicates a hot scrollbar state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarThumbStates.Pressed">
            <summary>
            Indicates a pressed scrollbar state.
            </summary>
        </member>
        <member name="T:Stone.WinUI.ScrollBarStates">
            <summary>
            The scrollbar states.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarStates.Normal">
            <summary>
            Indicates a normal scrollbar state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarStates.Hot">
            <summary>
            Indicates a hot scrollbar state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarStates.Active">
            <summary>
            Indicates an active scrollbar state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarStates.Pressed">
            <summary>
            Indicates a pressed scrollbar state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ScrollBarStates.Disabled">
            <summary>
            Indicates a disabled scrollbar state.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridEditBoxActiveEventArgs">
            <summary>
            EventArgs for edit box has been active.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridEditBoxActiveEventArgs.#ctor">
            <summary>
            Initialized.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridEditBoxActiveEventArgs.Field">
            <summary>
            Get field name.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridEditBoxActiveEventArgs.RowView">
            <summary>
            Get <see cref="T:System.Data.DataRowView"/> of the row.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridEditBoxActiveEventArgs.RowFilter">
            <summary>
            Get or set custom row filter string and pass to filter at <see cref="P:Stone.WinUI.AsGridDataColumn.DataSourceBox"/>.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Forms.ColumnChooserForm">
            <summary>
            Grid Column Chooser.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.ColumnChooserForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Forms.ColumnChooserForm"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.ColumnChooserForm.ColumnChooserForm_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the ColumnChooserForm control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.ColumnChooserForm.Localize">
            <summary>
            Localizes resource of this instance.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.ColumnChooserForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.ColumnChooserForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.Forms.ColumnChooserForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.ColumnChooserForm.DataTableColumns">
            <summary>
            Gets or private sets the data table columns.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.ColumnChooserForm.FromField">
            <summary>
            Gets or sets from field name.
            </summary>
            <value>From field.</value>
        </member>
        <member name="P:Stone.WinUI.Forms.ColumnChooserForm.Columns">
            <summary>
            Gets or sets the column collection.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsImageViewer">
            <summary>
            Represent as ImageViewer.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsImageViewer"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.InitializeComponent">
            <summary>
            Initializeds this instance.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsImageViewer.m_DrawX">
            <summary>
            X Position to draw image.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsImageViewer.m_DrawY">
            <summary>
            Y Position to draw image.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsImageViewer.m_DrawWidth">
            <summary>
            Width to draw image.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsImageViewer.m_DrawHeight">
            <summary>
            Height to draw image.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsImageViewer.m_ImagePadding">
            <summary>
            Defalut = 10
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.OnImageChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ImageChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.OnImageAutoSizeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ImageAutoSizeChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.OnImageMoving(Stone.WinUI.AsImageMovingEventArgs)">
            <summary>
            Raises the <see cref="E:ImageMoving"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsImageMovingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.Clear">
            <summary>
            Clear current <see cref="T:System.Drawing.Image"/> to null.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.Load(System.String)">
            <summary>
            Load image from the specified path.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.LoadAsync(System.String)">
            <summary>
            Load the image at the url, asyncronously and image innitial will show until load finished.
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.FlipImage(System.Boolean)">
            <summary>
            Flip image vertical or horizontal.
            </summary>
            <param name="vertical">Direction to flip.</param>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.ShouldSerializeWatermarkFont">
            <summary>
            Shoulds the serialize watermark font.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.RotateImage(System.Boolean)">
            <summary>
            Rotate image to left or right
            </summary>
            <param name="left">Direction to rotate.</param>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.GetImageCenterInFrame(System.Drawing.Size)">
            <summary>
            Get image location to center in host frame.
            </summary>
            <param name="imgSize">Size of image.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Occur after <see cref="P:Stone.WinUI.AsBaseControl.RendererType"/> changed.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.OnResize(System.EventArgs)">
            <summary>
            On resize
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.BackgroundImage">
            <summary>
            Hidden
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.BackgroundImageLayout">
            <summary>
            Hidden
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.ShowMarqueeOnLoad">
            <summary>
            Get or set the wheather to show progress bar style marquee on load image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.VScrollArea">
            <summary>
            Gets the vertical scroll bar area, if not visible return Empty.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.HScrollArea">
            <summary>
            Gets the horizontal scroll bar area, if not visible return Empty.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.FrameColor">
            <summary>
            Gets or sets the color of frame when <see cref="P:Stone.WinUI.AsImageViewer.ImageAutoSize"/> is true.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.PromptText">
            <summary>
            Gets or sets the prompt text to show when no image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.WatermarkText">
            <summary>
            Gets or sets the water mark text to display hover the image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.WatermarkAlign">
            <summary>
            Gets or sets the water mark text alignment.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.WatermarkFont">
            <summary>
            Gets or sets the water mark font.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.WatermarkForeColor">
            <summary>
            Gets or sets the fore color of the watermark text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.ScrollBarColor">
            <summary>
            Gets or sets the color of the scroll bar.
            <para>This property effect for <see cref="F:Stone.WinUI.RendererTypes.AeroGlass"/> or above.</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value></value>
            <returns>
            The default <see cref="T:System.Drawing.Size"/> of the control.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.CreateParams">
            <summary>
            Gets the required creation parameters when the control handle is created.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Windows.Forms.CreateParams"/> that contains the required creation parameters when the handle to the control is created.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.Image">
            <summary>
            Gets or Sets the <see cref="P:Stone.WinUI.AsImageViewer.Image"/> in the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.ImageAutoSize">
            <summary>
            Gets or sets a value indicating whether to show image auto size.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsImageViewer.ZoomRatio">
            <summary>
            Gets or sets the zoom ratio between range 0.1 - 2.0, default = 1.0
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsImageViewer.ImageChanged">
            <summary>
            Occurs when image change.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsImageViewer.ImageAutoSizeChanged">
            <summary>
            Occurs when image auto size changed.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsImageViewer.ImageMoving">
            <summary>
            Occurs when moving image.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsImageViewer.UseProgressMarquee">
            <summary>
            Show progress marquee on load image.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.UseProgressMarquee.#ctor(System.Windows.Forms.ProgressBar,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsImageViewer.UseProgressMarquee"/> class.
            </summary>
            <param name="progressBar">The progress bar.</param>
            <param name="show">if set to <c>true</c> [show].</param>
        </member>
        <member name="F:Stone.WinUI.AsImageViewer.UseProgressMarquee.m_ProgressBar">
            <summary>
            Internal
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsImageViewer.UseProgressMarquee.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="T:Stone.WinUI.GlobalUI">
            <summary>
            Global display format.
            </summary>
        </member>
        <member name="M:Stone.WinUI.GlobalUI.#cctor">
            <summary>
            Initializes the <see cref="T:Stone.WinUI.GlobalUI"/> class.
            </summary>
        </member>
        <member name="P:Stone.WinUI.GlobalUI.StyleFormat">
            <summary>
            Gets or sets the custom display format for whole ui.
            </summary>
        </member>
        <member name="P:Stone.WinUI.GlobalUI.StyleButton">
            <summary>
            Gets or sets the style button in all edit box.
            </summary>
        </member>
        <member name="P:Stone.WinUI.GlobalUI.AutoFormBackColor">
            <summary>
            Gets or sets a value indicating whether back color of <c>Form</c> dependency with current tool strip renderer.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsGridColumnTopCollectionEditor">
            <summary>
            Class created so we can force an invalidation/update 
            on the control when the column editor returns.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridColumnTopCollectionEditor.#ctor(System.Type)">
            <summary>
            Default Constructor for custom column collection editor
            </summary>
            <param name="type"></param>
        </member>
        <member name="F:Stone.WinUI.Design.AsGridColumnTopCollectionEditor.parent">
            <summary>
            Internal parent host control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridColumnTopCollectionEditor.CreateInstance(System.Type)">
            <summary>
            After create instance in collection editor, set parent to column member.
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridColumnTopCollectionEditor.CreateNewItemTypes">
            <summary>
            Create new item types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridColumnTopCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit a value in collection editor
            </summary>
            <param name="context"></param>
            <param name="isp"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridColumnTopCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get modal dialog.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridColumnTopCollectionEditor.GetDisplayText(System.Object)">
            <summary>
            Retrieves the display text for the given list item.
            </summary>
            <param name="value">The list item for which to retrieve display text.</param>
            <returns>
            The display text for <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridColumnTopCollectionEditor.CreateCollectionForm">
            <summary>
            Creates a new form to display and edit the current collection
            </summary>
            <returns>An instance of CollectionEditor.CollectionForm to provide as the 
            user interface for editing the collection</returns>
        </member>
        <member name="T:Stone.WinUI.AsToolStripTextBox">
            <summary>
            Represent as Textbox in ToolStrip and supported propmpt text.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolStripTextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsToolStripTextBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsToolStripTextBox.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsToolStripTextBox"/> class.
            </summary>
            <param name="c">The c.</param>
            <exception cref="T:System.NotSupportedException">Argument Control in structor does not support.</exception>
        </member>
        <member name="M:Stone.WinUI.AsToolStripTextBox.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsToolStripTextBox"/> class.
            </summary>
            <param name="name">The name of the <see cref="T:System.Windows.Forms.ToolStripControlHost"/>.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolStripTextBox.Select(System.Int32,System.Int32)">
            <summary>
            Selects the range of text.
            </summary>
            <param name="start">The start.</param>
            <param name="length">The length.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolStripTextBox.CreateControlInstance">
            <summary>
            Creates the control instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsToolStripTextBox.HandleAfterTextChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the after text changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolStripTextBox.HandleAfterKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the after key down.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolStripTextBox.OnSubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            Subscribes events from the hosted control.
            </summary>
            <param name="control">The control from which to subscribe events.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolStripTextBox.OnUnsubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            Unsubscribes events from the hosted control.
            </summary>
            <param name="control">The control from which to unsubscribe events.</param>
        </member>
        <member name="M:Stone.WinUI.AsToolStripTextBox.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
            <param name="constrainingSize">The custom-sized area for a control.</param>
            <returns>
            An ordered pair of type <see cref="T:System.Drawing.Size"/> representing the width and height of a rectangle.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsToolStripTextBox.TextBox">
            <summary>
            Gets the text box.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolStripTextBox.TextAlign">
            <summary>
            Gets or sets the alignment of the text in the spin box.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsToolStripTextBox.Font">
            <summary>
            Gets or sets the font to be used on the hosted control.
            </summary>
            <value></value>
            <returns>
            The <see cref="T:System.Drawing.Font"/> for the hosted control.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsToolStripTextBox.DefaultMargin">
            <summary>
            Gets the default margin of an item.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Windows.Forms.Padding"/> representing the margin.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsToolStripTextBox.Text">
            <summary>
            Gets or sets the text to be displayed on the hosted control.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.String"/> representing the text.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsToolStripTextBox.PromptText">
            <summary>
            Gets or sets prompt text in the control.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsToolStripTextBox.AfterTextChanged">
            <summary>
            Occurs when value has been changed.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsToolStripTextBox.AfterKeyDown">
            <summary>
            Occurs after key down.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridViewColumnCollection">
            <summary>
            Column collections of <see cref="T:Stone.WinUI.AsGridView"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumnCollection.#ctor(Stone.WinUI.AsGridView)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridViewColumnCollection"/> class.
            </summary>
            <param name="parentGrid">The parent grid.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumnCollection.Add(Stone.WinUI.AsGridViewColumn)">
            <summary>
            Add column header to collection.
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumnCollection.Add(System.String,System.Int32,System.Drawing.StringAlignment,System.String,Stone.WinUI.ColumnFormats)">
            <summary>
            Add column header by specify arguments.
            </summary>
            <param name="colText"></param>
            <param name="nColumnWidth"></param>
            <param name="dataAlign"></param>
            <param name="field"></param>
            <param name="displayFormat"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumnCollection.AddRange(Stone.WinUI.AsGridViewColumn[])">
            <summary>
            Add array of column header to collection.
            </summary>
            <param name="cols"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumnCollection.InsertItem(System.Int32,Stone.WinUI.AsGridViewColumn)">
            <summary>
            Insert an element into the collection at the specified index.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumnCollection.IndexOf(System.String)">
            <summary>
            Get the column index from field name.
            If not found return -1
            </summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumnCollection.AnyPressed">
            <summary>
            if any of the columns are in a pressed state then disable all hotting
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumnCollection.ClearAllFlags">
            <summary>
            Clear Column press states, sort, max width, filter active, last toggle and footer.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumnCollection.ClearFilterActive">
            <summary>
            Clear all columns filter active to false.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumnCollection.ClearColumnPressStates">
            <summary>
            Clear column press state to normal.
            </summary>
            <remarks>
            Primarily used to clear pressed / hot states
            </remarks>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumnCollection.ClearFooter">
            <summary>
            Clear footer text to blank.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridViewColumnCollection.ClearSortColumn">
            <summary>
            Reset sort state all column to None
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumnCollection.Grid">
            <summary>
            Get the <see cref="T:Stone.WinUI.AsGridView"/> control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumnCollection.Item(System.Int32)">
            <summary>
            Get the column from specific index(zero base), 
            return null when out of range.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumnCollection.Item(System.String)">
            <summary>
            Get the column from specific field name, 
            if not found return null.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumnCollection.VisibleColumns">
            <summary>
            Get collection of visible column.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumnCollection.VisibleColumnsCount">
            <summary>
            Count visible column.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumnCollection.VisibleColumnCountResizeAble">
            <summary>
            Gets the visible column count can resize able.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumnCollection.VisibleColumnsWidth">
            <summary>
            Get visible column width.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridViewColumnCollection.Width">
            <summary>
            Get all columns width.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Msg">
            <summary>
            MessageBox helper.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Msg.Alert(System.String,System.String)">
            <summary>
            Alert or Information the specified message to user.
            </summary>
            <param name="msg"></param>
            <param name="title"></param>
        </member>
        <member name="M:Stone.WinUI.Msg.Confirm(System.String,System.String)">
            <summary>
            Ask the specified message question to user, use button OK/Cancel.
            </summary>
            <param name="msg"></param>
            <param name="title"></param>
        </member>
        <member name="M:Stone.WinUI.Msg.Stop(System.String,System.String)">
            <summary>
            Show serious message(Stop/Error) to user.
            </summary>
            <param name="msg"></param>
            <param name="title"></param>
        </member>
        <member name="M:Stone.WinUI.Msg.Warning(System.String,System.String)">
            <summary>
            Warning the specified message to user.
            </summary>
            <param name="msg"></param>
            <param name="title"></param>
        </member>
        <member name="T:Stone.WinUI.AsBaseDropdown">
            <summary>
            Base of dropdown control.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsBaseDropdown.FRAME_WIDTH">
            <summary>
            Default 6
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseDropdown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsBaseDropdown"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseDropdown.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Occur after <see cref="P:Stone.WinUI.AsBaseUserControl.RendererType"/> changed.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseDropdown.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsBaseDropdown.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseDropdown.ShowDropdown">
            <summary>
            Shows the dropdown.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBaseDropdown.ShowDropdown(System.Drawing.Point,System.Windows.Forms.ToolStripDropDownDirection)">
            <summary>
            Shows the dropdown at specific location.
            </summary>
            <param name="point">The point.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="E:Stone.WinUI.AsBaseDropdown.DropdownClosed">
            <summary>
            Occurs when dropdown closed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseDropdown.CloseCompleted">
            <summary>
            Gets or sets a value indicating whether close completed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseDropdown.BaseColor">
            <summary>
            Gets or sets the color of sizing grip and bar, default is <see cref="P:System.Drawing.SystemColors.Control"/> 
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBaseDropdown.AtControl">
            <summary>
            Sets at control and must define size before.
            </summary>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Stone.WinUI.AsBaseDropdown.PopupSizing">
            <summary>
            Gets or sets the behavior of popup sizing.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlAeroGlass.#ctor(Stone.WinUI.AsTabControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererTabControlAeroGlass"/> class.
            </summary>
            <param name="tabControl">The tab.</param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlAeroGlass.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw border around control.
            </summary>
            <param name="g">The g.</param>
            <param name="clientRect">The client rect.</param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlAeroGlass.DrawTabHeader(System.Drawing.Graphics,System.Windows.Forms.TabPage,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Point[]@)">
            <summary>
            Draws the tab.
            </summary>
            <param name="g">Device Context</param>
            <param name="tabPage">The tab page.</param>
            <param name="index">The index.</param>
            <param name="headerRect">The header rect.</param>
            <param name="pageBodyRect">The page body rect.</param>
            <param name="selected">if set to <c>true</c> [selected].</param>
            <param name="hoted">if set to <c>true</c> [hoted].</param>
            <param name="foreColorIfDark">The fore color if dark.</param>
            <param name="ptsFocus">The point array to draw focus.</param>
            <returns>ForeColor</returns>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlAeroGlass.DrawFrameTabActive(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Single)">
            <summary>
            Draw frame active tab.
            </summary>
            <param name="g"></param>
            <param name="rb">BorderRectangle</param>
            <param name="rd">DisplayRectangle</param>
            <param name="angle"></param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlAeroGlass.DrawBorderTabActive(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draw border around active tab.
            </summary>
            <param name="g">The g.</param>
            <param name="rb">BorderRectangle</param>
            <param name="rt">TabHeader Rectangle</param>
            <param name="index">Selected Index</param>
        </member>
        <member name="T:Stone.WinUI.RendererRadioButtonOffice2007">
            <summary>
            Renderer radio button.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererRadioButtonOffice2007.#ctor(Stone.WinUI.AsRadioButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererRadioButtonOffice2007"/> class.
            </summary>
            <param name="radioButton">The radio button.</param>
        </member>
        <member name="M:Stone.WinUI.RendererRadioButtonOffice2007.DrawRadioBox(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates)">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOffice2007.#ctor(Stone.WinUI.AsGrouper)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererGrouperOffice2007"/> class.
            </summary>
            <param name="grouper">The grouper.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOffice2007.DrawGroupBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the group box.
            </summary>
            <param name="g">Device context</param>
            <param name="rectBorder">The rect border.</param>
            <param name="rectText">The rect text.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGrouperOffice2007.DrawDefault(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.MouseStates)">
            <summary>
            Draws the default style.
            </summary>
            <param name="g">Device context</param>
            <param name="rectHead">The rect head.</param>
            <param name="rectBody">The rect body.</param>
            <param name="headerVerticalState"></param>
        </member>
        <member name="P:Stone.WinUI.RendererGrouperOffice2007.AutoBaseColor">
            <summary>
            Gets the default color when BaseColor is Transparent.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorOffice2007.#ctor(Stone.WinUI.AsGrouper)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererNavigatorOffice2007"/> class.
            </summary>
            <param name="navigator">The navigator.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorOffice2007.DrawSplitter(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the splitter.
            </summary>
            <param name="g">The g.</param>
            <param name="rectBody">The rect body.</param>
            <param name="rectSpliter">The rect spliter.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorOffice2007.DrawBand(System.Drawing.Graphics,Stone.WinUI.AsBand,System.Boolean,System.Drawing.SolidBrush,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>
            Draws the band.
            </summary>
            <param name="g">Device context</param>
            <param name="band">The band.</param>
            <param name="selected">Band is selected</param>
            <param name="textBrush">The text brush.</param>
            <param name="font">The font.</param>
            <param name="sf">The sf.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorOffice2007.DrawFooterBand(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the footer band.
            </summary>
            <param name="g">Device context</param>
            <param name="rectFooterBand">The rect footer band.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorOffice2007.DrawMoreOption(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.MouseStates)">
            <summary>
            Draws the more option button.
            </summary>
            <param name="g">Device context</param>
            <param name="rectMoreOption">The rect more option.</param>
            <param name="state">The state.</param>
        </member>
        <member name="P:Stone.WinUI.RendererNavigatorOffice2007.Navigator">
            <summary>
            Gets the navigator.
            </summary>
        </member>
        <member name="T:Stone.WinUI.RendererTypesSub">
            <summary>
            Sub renderer style
            </summary>
        </member>
        <member name="F:Stone.WinUI.RendererTypesSub.None">
            <summary>
            No sub style, use default renderer.
            </summary>
        </member>
        <member name="F:Stone.WinUI.RendererTypesSub.System3DBevel">
            <summary>
            Fill bevel gradient.
            </summary>
        </member>
        <member name="F:Stone.WinUI.RendererTypesSub.FlatButton">
            <summary>
            Flat Button.
            </summary>
        </member>
        <member name="F:Stone.WinUI.RendererTypesSub.ExcelSheet">
            <summary>
            Excel sheet style, supported OfficeXP, Office2003, AeroGlass
            </summary>
        </member>
        <member name="F:Stone.WinUI.RendererTypesSub.VS2005">
            <summary>
            Whidbey style.
            </summary>
        </member>
        <member name="T:Stone.WinUI.SpinButtons">
            <summary>
            Spin Button Type.
            </summary>
        </member>
        <member name="F:Stone.WinUI.SpinButtons.List">
            <summary>
            List all child tab page.
            </summary>
        </member>
        <member name="F:Stone.WinUI.SpinButtons.Left">
            <summary>
            Arrow Left.
            </summary>
        </member>
        <member name="F:Stone.WinUI.SpinButtons.Right">
            <summary>
            Arrow Right.
            </summary>
        </member>
        <member name="F:Stone.WinUI.SpinButtons.Close">
            <summary>
            Close Tab.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsPropertyGrid">
            <summary>
            PropertyGrid with Renderer
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsPropertyGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsPropertyGrid"/> class.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsPropertyGrid.m_snap">
            <summary>
            Hook to doccomment from base class.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsPropertyGrid.m_FilterObject">
            <summary>
            Implement from <c>ICustomTypeDescriptor</c> to filter some property, event, category from class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsPropertyGrid.m_snap_Resize(System.Object,System.EventArgs)">
            <summary>
            Raised on doccomment size changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsPropertyGrid.OnHandleCreated(System.EventArgs)">
            <summary>
            Raised on handle created.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsPropertyGrid.setRendererAndColor">
            <summary>
            Set internal renderer from main windows.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPropertyGrid.ExcludeProperties">
            <summary>
            Gets or sets the properties name to exclude, separate with comma.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPropertyGrid.ExcludeCategories">
            <summary>
            Gets or sets the category name to exclude, separate with comma.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPropertyGrid.HelpBackgroundImage">
            <summary>
            Get or set the HelpBackgroundImage
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsPropertyGrid.SelectedObject">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsPropertyGrid.FilterObjectDescriptor.#ctor(System.Object,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsPropertyGrid.FilterObjectDescriptor"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="excludeProp">The exclude prop.</param>
            <param name="excludePropCate">The exclude prop cate.</param>
        </member>
        <member name="P:Stone.WinUI.AsPropertyGrid.FilterObjectDescriptor.Source">
            <summary>
            Gets the source object.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsPropertyGrid.FilterObjectCache">
            <summary>
            Cache of filter object.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridRowColorEventArgs">
            <summary>
            Provide a set of color to fill on each row data.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridRowColorEventArgs.#ctor(System.Int32,System.Data.DataRowView,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridRowColorEventArgs"/> class.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="rowView">The row view.</param>
            <param name="foreColor">Color of the fore.</param>
        </member>
        <member name="P:Stone.WinUI.AsGridRowColorEventArgs.RowIndex">
            <summary>
            Get the RowIndex.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridRowColorEventArgs.FillBackColor">
            <summary>
            Get or set the boolean, if true row fill 
            with specify <see cref="P:Stone.WinUI.AsGridRowColorEventArgs.BackColor"/>, 
            otherwise false.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridRowColorEventArgs.BackColor">
            <summary>
            Get or set back color of entry row.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridRowColorEventArgs.CustomFontStyle">
            <summary>
            Get or set the entry row use font custom style or regular.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridRowColorEventArgs.ForeColor">
            <summary>
            Get or set fore color of entry row.
            Interits from <see cref="P:System.Windows.Forms.Control.ForeColor"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridRowColorEventArgs.RowView">
            <summary>
            Get the <see cref="T:System.Data.DataRowView"/> from row.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridColumnResizingEventArgs">
            <summary>
            Event Args when resizing column.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridColumnResizingEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridColumnResizingEventArgs"/> class.
            </summary>
            <param name="colIndex">Index of the col.</param>
            <param name="width">The width.</param>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnResizingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating to true=ignore change, otherwise allow.
            </summary>
            <value><c>true</c> if cancel; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnResizingEventArgs.ColumnIndex">
            <summary>
            Get the column index.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnResizingEventArgs.Width">
            <summary>
            Get the new column width.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridCellPaintingEventArgs">
            <summary>
            Cell painting event args.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridCellPaintingEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Int32,System.String,Stone.WinUI.ColumnFormats,System.Data.DataRowView,System.Boolean,System.Drawing.FontStyle,System.Drawing.Color)">
            <summary>
            Innitialized a new RowPainting Arguments.
            </summary>
            <param name="g"></param>
            <param name="cellRect"></param>
            <param name="rowRect"></param>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <param name="fieldName"></param>
            <param name="format"></param>
            <param name="rowView"></param>
            <param name="readOnly"></param>
            <param name="fontStyle"></param>
            <param name="foreColor"></param>
        </member>
        <member name="P:Stone.WinUI.AsGridCellPaintingEventArgs.Graphics">
            <summary>
            Get the Graphics (Graphics)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellPaintingEventArgs.Format">
            <summary>
            Get the ColumnFormats
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellPaintingEventArgs.CellBounds">
            <summary>
            Gets the cell bounds.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellPaintingEventArgs.RowBounds">
            <summary>
            Gets the row bounds.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellPaintingEventArgs.FieldName">
            <summary>
            Get the FieldName (string)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellPaintingEventArgs.CustomFontStyle">
            <summary>
            Get the wheather font style.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellPaintingEventArgs.ForeColor">
            <summary>
            Get <see cref="P:System.Windows.Forms.Control.ForeColor"/> on cell paint.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellPaintingEventArgs.ColIndex">
            <summary>
            Get the ColIndex (int)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellPaintingEventArgs.Handled">
            <summary>
            Get or set the paint state, true = OwnerDraw and original draw will be ignore.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellPaintingEventArgs.ReadOnly">
            <summary>
            Get the ReadOnly (bool)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellPaintingEventArgs.RowIndex">
            <summary>
            Get the RowIndex (int)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridCellPaintingEventArgs.RowView">
            <summary>
            Get the <see cref="T:System.Data.DataRowView"/> on cell paint.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsRangeLookupDropdown">
            <summary>
            Range lookup dropdown.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsRangeLookupDropdown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsRangeLookupDropdown"/> class.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsRangeLookupDropdown.bFocusOnLoad">
            <summary>
            force focus to asGridView1 when loaded
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsRangeLookupDropdown.Localize">
            <summary>
            Localizes resource of this instance.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsRangeLookupDropdown.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:RendererTypeChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Stone.WinUI.AsRangeLookupDropdown.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsRangeLookupDropdown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.AsRangeLookupDropdown.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupDropdown.BaseColor">
            <summary>
            Gets or Sets the base color of grid.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupDropdown.DataSource">
            <summary>
            Get or set the Datasource (DataTable)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupDropdown.DisplayField">
            <summary>
            Set field name to display as description at 2nd column.
            <para>Patterns: FieldName|ColumnHeader</para>
            <para>Examples: NameMain|Description</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupDropdown.Field">
            <summary>
            Gets or sets the field.
            </summary>
            <value>The field.</value>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupDropdown.ItemHeight">
            <summary>
            Sets height of the gridview item.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupDropdown.ManualColumns">
            <summary>
            Get or set custom list of <see cref="T:Stone.WinUI.AsGridViewColumn"/> to display in dropdown.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupDropdown.RowFilter">
            <summary>
            Get or set row filter string. Set this after <see cref="P:Stone.WinUI.AsRangeLookupDropdown.DataSource"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupDropdown.ValueField">
            <summary>
            Set field name to display as value at 1st column
            <para>Patterns: FieldName|ResMain|ResAlter</para>
            <para>Examples: Code|รหัส|Code</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsRangeLookupDropdown.Word">
            <summary>
            Gets or sets the word.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsImageViewerDesigner">
            <summary>
            Designer for <see cref="T:Stone.WinUI.AsImageViewer"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsImageViewerDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The <see cref="T:System.ComponentModel.IComponent"/> to associate with the designer.</param>
        </member>
        <member name="P:Stone.WinUI.Design.AsImageViewerDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value></value>
            <returns>
            The design-time action lists supported by the component associated with the designer.
            </returns>
        </member>
        <member name="T:Stone.WinUI.AsColorSelectEventArgs">
            <summary>
            EventArgs for color selected.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorSelectEventArgs.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsColorSelectEventArgs"/> class.
            </summary>
            <param name="color">Selected color</param>
        </member>
        <member name="P:Stone.WinUI.AsColorSelectEventArgs.SelectedColor">
            <summary>
            Get selected color from user.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridDataColumn">
            <summary>
            Column header of <see cref="T:Stone.WinUI.AsGridData"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridDataColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridDataColumn"/> class.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridDataColumn.internalDictionary">
            <summary>
            Dictionary contains Key and Value
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.Required">
            <summary>
            Get or set a value indicating whether for this column 
            need to input some value when true, otherwise false.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.RequiredAlertText">
            <summary>
            Gets or sets the alert text when the control is empty.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.RowFilter">
            <summary>
            Get or set custom row filter string when <see cref="P:Stone.WinUI.AsGridDataColumn.EditBoxStyle"/> = LookupBox or SearchBox.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.AllowQuickSearch">
            <summary>
            Gets or sets a value indicator wheather to allow quick search.
            When set to true, popup will show after text changed by user.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.MaxRecord">
            <summary>
            Gets or sets the max record to show in quick search popup, default=10.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.ShowButtonEditBox">
            <summary>
            Get or set the active edit box to show button when true, otherwise false.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.DataSourceBox">
            <summary>
            Get or set the <see cref="T:System.Data.DataTable"/> as a datasource for <see cref="P:Stone.WinUI.AsGridDataColumn.EditBoxStyle"/> = LookupBox.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.DisplayField">
            <summary>
            Get or set field name to display when <see cref="P:Stone.WinUI.AsGridDataColumn.EditBoxStyle"/> = LookupBox or SearchBox.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.DialogCustomWidth">
            <summary>
            Get or set custom dialog width if the edit box can.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.ValueField">
            <summary>
            Get or set field name for processing value when <see cref="P:Stone.WinUI.AsGridDataColumn.EditBoxStyle"/> = LookupBox or SearchBox.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.ReadOnly">
            <summary>
            Get or set column to un-editable when set to true, otherwise false.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.ColumnFormat">
            <summary>
            Get or set the pre-define format to display value from each data type.
            </summary>
            <value></value>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.ManualColumns">
            <summary>
            Get or set a custom list of <see cref="T:Stone.WinUI.AsGridViewColumn"/> for <see cref="P:Stone.WinUI.AsGridDataColumn.EditBoxStyle"/> = LookupBox or SearchBox.
            </summary>
            <example>
            Default has 2 columns(Code, Description). If you want to show difference use generic list of AsGridViewColumn.
            <code lang="cs">
            List&lt;AsGridViewColumn&gt; cols = new List&lt;AsGridViewColumn&gt;() { 
                new AsGridViewColumn(){ Text = "BankCode", Width = 80, TextAlignment = StringAlignment.Near, Field = "BankCode", ColumnFormat = ColumnFormats.Text },
                new AsGridViewColumn(){ Text = "BankName", Width = 130, TextAlignment = StringAlignment.Near, Field = "BankName", ColumnFormat = ColumnFormats.Text },
                new AsGridViewColumn(){ Text = "BookNo", Width = 80, TextAlignment = StringAlignment.Near, Field = "BookNo", ColumnFormat = ColumnFormats.Text },
                new AsGridViewColumn(){ Text = "Amount", Width = 80, TextAlignment = StringAlignment.Far, Field = "Amount", ColumnFormat = ColumnFormats.Money }
            };
            this.ManualColumns = cols;
            </code>
            <code lang="vb">
            Dim arrCols As AsGridViewColumn() = { _
               New AsGridViewColumn() With {.Text = "BankCode", .Width = 80, .TextAlignment = StringAlignment.Near, .Field = "BankCode", .ColumnFormat = ColumnFormats.Text}, _
               New AsGridViewColumn() With {.Text = "BankName", .Width = 130, .TextAlignment = StringAlignment.Near, .Field = "BankName", .ColumnFormat = ColumnFormats.Text}, _
               New AsGridViewColumn() With {.Text = "BookNo", .Width = 80, .TextAlignment = StringAlignment.Near, .Field = "BookNo", .ColumnFormat = ColumnFormats.Text}, _
               New AsGridViewColumn() With {.Text = "Amount", .Width = 80, .TextAlignment = StringAlignment.Far, .Field = "Amount", .ColumnFormat = ColumnFormats.Money} _
            }
            Dim cols As List(Of AsGridViewColumn) = New List(Of AsGridViewColumn)(arrCols)
            Me.ManualColumns = cols
            </code>
            </example>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.Minimum">
            <summary>
            Get or set the minimum value for <see cref="P:Stone.WinUI.AsGridDataColumn.EditBoxStyle"/>.NumberBox.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.Maximum">
            <summary>
            Get or set the maximum value for <see cref="P:Stone.WinUI.AsGridDataColumn.EditBoxStyle"/>.NumberBox.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.EditBoxStyle">
            <summary>
            Get or set the edit box style.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.BrowseFolderOnly">
            <summary>
            Gets or sets a value indicating whether to browse folder only.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.FilterExtension">
            <summary>
            Gets or Sets the filter file extension to display in the dialog box. 
            <example>Image files (bmp, jpg, gif)|*.bmp;*.jpg;*.gif|All files (*.*)|*.*</example>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.Next">
            <summary>
            Get the next <see cref="T:Stone.WinUI.AsGridDataColumn"/> in columns collection.
            If not found return null.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDataColumn.Previous">
            <summary>
            Get the previous <see cref="T:Stone.WinUI.AsGridDataColumn"/> in columns collection.
            If not found return null.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsLookupBox">
            <summary>
            Represent as lookup edit box.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLookupBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsLookupBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLookupBox.Dispose(System.Boolean)">
            <summary>
            Release resource.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="F:Stone.WinUI.AsLookupBox.m_OldValue">
            <summary>
            Old value before change, keep last value on leave finished.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsLookupBox.m_Value">
            <summary>
            Internal value member.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLookupBox.ResetOldValueToCurrent">
            <summary>
            Sets old value to equal current value.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLookupBox.textEdit_GotFocus(System.Object,System.EventArgs)">
            <summary>
            override
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsLookupBox.OnAfterDataChanged">
            <summary>
            Raised event AfterDataChanged.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLookupBox.OnButtonEditClick">
            <summary>
            Occur when click button or press <see cref="P:Stone.WinUI.AsBaseEditBox.FunctionKey"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLookupBox.OnLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Leave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsLookupBox.Clear">
            <summary>
            Clear value and text.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLookupBox.GetValue">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLookupBox.SetValue(System.Object)">
            <summary>
            Set value from <see cref="T:System.Object"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsLookupBox.SetValue(System.String)">
            <summary>
            Set value from <see cref="T:System.String"/>.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsLookupBox.GetAutoCompleteSource">
            <summary>
            Get the auto complete source.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsLookupBox.CheckDatasourceExists">
            <summary>
            Check datasource for this control is exists.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsLookupBox.SetValueInternal(System.String)">
            <summary>
            Set value internal and trick before change data.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.SelectedRow">
            <summary>
            Get selected <see cref="T:System.Data.DataRowView"/> from dropdown.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.DataSource">
            <summary>
            Get or set <see cref="T:System.Data.DataTable"/> as DataSource.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.DisplayField">
            <summary>
            Get or set field name to display as description.
            <para>Patterns: FieldName|TextHeader</para>
            <para>Examples: NameMain|Description</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.ValueField">
            <summary>
            Get or set field name to display as value.
            <para>Patterns: FieldName|TextHeader</para>
            <para>Examples: Code|Code</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.DialogCustomWidth">
            <summary>
            Get or set dialog width when drop down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.IntegralWidth">
            <summary>
            Get or set the dialog dropdown width equal the combo.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.ItemHeight">
            <summary>
            Gets or sets the height of the item, default=20.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.LookupDisplayFormat">
            <summary>
            Get or set how to show text on the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.AutoLoadMaster">
            <summary>
            Get or set flag to auto load data from specific table name(<see cref="P:Stone.WinUI.AsLookupBox.MasterTable"/>).
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.BaseColorGrid">
            <summary>
            Gets or sets the color of the grid view when dropdown.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.DefaultButtonColor">
            <summary>
            Gets the default color of the button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.MasterTable">
            <summary>
            Get or set master table name.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.MasterTableCriteria">
            <summary>
            Get or set the criteria for <see cref="P:Stone.WinUI.AsLookupBox.MasterTable"/>.
            The criteria must begin with 'Where' keyword.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.ManualQuery">
            <summary>
            Get or set custom query.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.RowFilter">
            <summary>
            Get or set custom row filter string.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.RowActivateSingleClick">
            <summary>
            Gets or sets a value indicating whether to committed selected item with single click(default=true).
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.ManualColumns">
            <summary>
            Get or set custom list of <see cref="T:Stone.WinUI.AsGridViewColumn"/> to display in dropdown.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.IsEmpty">
            <summary>
            Gets a value indicating whether this value is empty.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.Value">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLookupBox.ValueChanged">
            <summary>
            Get the wheather value changed from user.
            </summary>
            <value></value>
        </member>
        <member name="E:Stone.WinUI.AsLookupBox.BeforeDataChange">
            <summary>
            Occur before data change.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsLookupBox.AfterDataChanged">
            <summary>
            Occur when leave the control and data changed.
            </summary>
        </member>
        <member name="T:Stone.WinUI.RendererGridSystem3D">
            <summary>
            Renderer grid system default.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererGridSystem3D.#ctor(Stone.WinUI.AsGridView)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererGridSystem3D"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="F:Stone.WinUI.RendererGridSystem3D.m_VisualStyle">
            <summary>
            Visual style renderer.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererGridSystem3D.DrawColumnMenuStripButton(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.ColumnStates)">
            <summary>
            Draws the column ContextMenuStrip button.
            </summary>
            <param name="g">The g.</param>
            <param name="colHeaderBackColor">Color of the column header back.</param>
            <param name="triangle">Point array of arrow down</param>
            <param name="rectCol">Column header bounds</param>
            <param name="rectContext">Context button bounds</param>
            <param name="state">Column state</param>
        </member>
        <member name="M:Stone.WinUI.RendererGridSystem3D.FillRowHeaders(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill row header and left side exclude left-top header.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridSystem3D.FillRowHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Boolean)">
            <summary>
            Fill background at rowheader.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="penBorder"></param>
            <param name="selected"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridSystem3D.FillLeftTopHeader(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill corner left-top at header.
            </summary>
            <param name="g"></param>
            <param name="rectLeftTop"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridSystem3D.FillColumnTopHeader(System.Drawing.Graphics,Stone.WinUI.AsGridColumnTop)">
            <summary>
            Fill background top header.
            </summary>
            <param name="g"></param>
            <param name="top"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridSystem3D.FillColumnHeader(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.AsGridViewColumn,System.Boolean)">
            <summary>
            Fill column header
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="col"></param>
            <param name="selected"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridSystem3D.FillNoneColumnHeader(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill none column header.
            </summary>
            <param name="g"></param>
            <param name="rectFill"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridSystem3D.HighlightRowSelected(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Highlight row selected.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="focused"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridSystem3D.FillLeftBottomFooter(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw left-bottom corner at footer.
            </summary>
            <param name="g"></param>
            <param name="rectLeftBottom"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridSystem3D.FillColumnFooter(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.AsGridViewColumn)">
            <summary>
            Fill column footer.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="col"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridSystem3D.FillNoneColumnFooter(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill none column footer.
            </summary>
            <param name="g"></param>
            <param name="rectFill"></param>
        </member>
        <member name="P:Stone.WinUI.RendererGridSystem3D.Grid">
            <summary>
            Get the parent grid.
            </summary>
            <value></value>
        </member>
        <member name="P:Stone.WinUI.RendererGridSystem3D.AutoBaseColor">
            <summary>
            Gets the auto color from base color.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsNavigator">
            <summary>
            Represent as navigator button stack.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGrouper">
            <summary>
            Represent as PanelGrouper or GroupBox.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGrouper"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.Dispose(System.Boolean)">
            <summary>
            Release any resource
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.OnExpandChanged(Stone.WinUI.AsExpandEventArgs)">
            <summary>
            Raises the <see cref="E:ExpandChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsExpandEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Stone.WinUI.AsGrouper.m_ExpandRect">
            <summary>
            Plus/Minus area for GroupBoxStyle = true
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGrouper.m_HeaderHorizontalState">
            <summary>
            State for header when collapse and direction = Horizontal.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGrouper.m_HeaderVerticalState">
            <summary>
            State for header when direction = Vertical.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGrouper.m_ExpandTextRect">
            <summary>
            Plus/Minus and Text to allow toggle expand.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Occur after <see cref="P:Stone.WinUI.AsBaseControl.RendererType"/> changed.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.OnVisibleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.OnCreateControl">
            <summary>
            Called when [create control].
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Resize"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.SystemColorsChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.Draw(System.Drawing.Graphics)">
            <summary>
            Draw top header of panel.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.DrawStacksBottom(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            This method is not meaning for this control.
            Draws the stacks buttons and bottom panel.
            </summary>
            <param name="g">Device context</param>
            <param name="bodyRect">The body rect.</param>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.ShowFloatControl">
            <summary>
            Shows the float control.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGrouper.m_Dropdown">
            <summary>
            Dropdown control host
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.SetButtonLocation">
            <summary>
            Set location of button collapse, close.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.ToggleChildVisible(System.Boolean)">
            <summary>
            Toggles the child visible.
            </summary>
            <param name="visible">if set to <c>true</c> [visible].</param>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.ToggleExpand(System.Boolean)">
            <summary>
            Toggles the expand.
            </summary>
            <param name="toExpand"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.ShouldSerializePaddingOuter">
            <summary>
            Shoulds the serialize padding outer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.ShouldSerializeHeaderFont">
            <summary>
            Shoulds the serialize header font.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.ButtonMini_Click(System.Object,System.EventArgs)">
            <summary>
            Toggle show - hide content area.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGrouper.StopTimerAnimate">
            <summary>
            Stop the timer animate.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGrouper.ExpandChanged">
            <summary>
            Occurs when expand state changed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.Renderer">
            <summary>
            Gets or sets the customs renderer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.ExpandImage">
            <summary>
            Gets the image from expand state.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.Expand">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Stone.WinUI.AsGrouper"/> is expand.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.ExpandDirection">
            <summary>
            Gets or sets the expand direction, Horizontal supported when <see cref="P:Stone.WinUI.AsGrouper.GroupStyle"/> = Default only.
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.GroupStyle">
            <summary>
            Gets or sets the grouper style, default is <see cref="F:Stone.WinUI.GroupStyles.Default"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value></value>
            <returns>
            The default <see cref="T:System.Drawing.Size"/> of the control.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.DisplayRectangle">
            <summary>
            Gets the rectangle that represents the virtual display area of the control.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> that represents the display area of the control.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.HeaderRect">
            <summary>
            Get an area at top of panel.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.BodyRect">
            <summary>
            Gets the area below the header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.AnimationStep">
            <summary>
            Get or set the Animation step, greater is faster. No animation set to zero.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.PopupSizing">
            <summary>
            Gets or sets the behaviors of popup can be resize.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.PaddingOuter">
            <summary>
            Gets or sets the padding around the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.HeaderMarginHeight">
            <summary>
            Gets or sets the margin header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.HeaderHeight">
            <summary>
            Get or set header height at top of control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.ShowExpand">
            <summary>
            Get or set the wheather to show or hide chevron.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.HeaderForeColor">
            <summary>
            Get or set HeaderForeColor (Color)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.BaseColor">
            <summary>
            Gets or sets the color of the header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.ShowBorder">
            <summary>
            Gets or sets a value indicating whether to show border at body area.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.HeaderFont">
            <summary>
            Gets or sets the header font.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.HeaderImage">
            <summary>
            Get or set image at header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGrouper.ImageTransparentColor">
            <summary>
            Get or set the transparent color on the header's image.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsNavigator"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.Dispose(System.Boolean)">
            <summary>
            Release any resource
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.OnBandActivate(Stone.WinUI.AsBandEventArgs)">
            <summary>
            Raises the <see cref="E:BandActivate"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsBandEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.OnBandHiddenChanged(Stone.WinUI.AsBandEventArgs)">
            <summary>
            Raises the <see cref="E:BandHiddenChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsBandEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Stone.WinUI.AsNavigator.m_MoreOptionButton">
            <summary>
            More option button rectangle.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsNavigator.m_PointDownHSpliter">
            <summary>
            ตำแหน่งที่กดเพื่อเตรียมลาก splitter ขึ้นลง
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsNavigator.m_Blind">
            <summary>
            ม่านบังตาเมื่อไม่มี band ใด ๆ ถูกเลือกไว้เลย
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsNavigator.m_ToolTip">
            <summary>
            Tool tip for show description on each band.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ControlAdded"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.ControlEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ControlRemoved"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.ControlEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.OnFontChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.FontChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Resize"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.mnuBand_CheckChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the CheckChanged event of the mnuBand control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.band_HiddenChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the HiddenChanged event of the band control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.StopTimerAnimate">
            <summary>
            Stop the timer animate.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.ShowFloatControl">
            <summary>
            Shows the float control at current <see cref="P:Stone.WinUI.AsNavigator.SelectedBand"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.DrawStacksBottom(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the stacks buttons and bottom panel.
            </summary>
            <param name="g">Device context</param>
            <param name="bodyRect">The body rect.</param>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.SelectNextAvailableBand(Stone.WinUI.AsBand)">
            <summary>
            Select the next available band from specific un-visible band, if not found return null.
            </summary>
            <param name="unVisibleBand">The un visible band.</param>
            <returns>Next <see cref="T:Stone.WinUI.AsBand"/> if found, otherwise return null.</returns>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.UpdateBandsSize">
            <summary>
            Update size of all bands.
            </summary>
            <returns>Fitting area of all <see cref="T:Stone.WinUI.AsBand"/></returns>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNavigator.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsNavigator.BandActivate">
            <summary>
            Occurs when band has been activate(clicked, selected).
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsNavigator.BandHiddenChanged">
            <summary>
            Occurs when band hidden flag has been changed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.HorizonSplitter">
            <summary>
            Horizontal splitter rectangle.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.ShowMoreOptions">
            <summary>
            Gets or sets a value indicating whether to show more options.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.ShowBottomBand">
            <summary>
            Gets or sets a value indicating whether to show bottom band.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.BottomBandHeight">
            <summary>
            Gets or sets the height of the bottom band.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.AllowAddOrRemoveButtons">
            <summary>
            Gets or sets to allow add or remove buttons when pressed more options.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.AllowNavigatorOptions">
            <summary>
            Gets or sets to allow nativator option dialog when pressed more options.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.BandHeight">
            <summary>
            Gets or sets the height of the button band.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.Renderer">
            <summary>
            Gets or sets the customs renderer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.Bands">
            <summary>
            Get the collection of bands.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.SelectedBand">
            <summary>
            Gets or sets the selected band.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.BaseColor">
            <summary>
            Gets or sets the color of the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.ContextRenderMode">
            <summary>
            Get right format of context render mode.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.SelectionBandColor">
            <summary>
            Gets or sets the color of selected band when <see cref="P:Stone.WinUI.AsNavigator.BaseColor"/> is not <see cref="P:System.Drawing.Color.Transparent"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.GroupStyle">
            <summary>
            This property cannot be change to other style.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.BodyRect">
            <summary>
            Gets the area below the header until top of horizontal splitter.
            </summary>  
        </member>
        <member name="P:Stone.WinUI.AsNavigator.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value></value>
            <returns>
            The default <see cref="T:System.Drawing.Size"/> of the control.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.Controls">
            <summary>
            Gets the collection of controls contained within the control.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Windows.Forms.Control.ControlCollection"/> representing the collection of controls contained within the control.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.FooterRect">
            <summary>
            Get bottom area of the control, if <see cref="P:Stone.WinUI.AsNavigator.ShowBottomBand"/> = false return Empty.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.BandsRect">
            <summary>
            Gets all bounds of visible <see cref="T:Stone.WinUI.AsBand"/> in stack.
            </summary>
            <value>The bands rect.</value>
        </member>
        <member name="P:Stone.WinUI.AsNavigator.FooterBandsRect">
            <summary>
            Gets all bounds of visible <see cref="T:Stone.WinUI.AsBand"/> that show at <see cref="P:Stone.WinUI.AsNavigator.FooterRect"/>.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Markup.LinkStates">
            <summary>
            Link region state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Markup.LinkStates.Normal">
            <summary>
            Normal state.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Markup.LinkStates.Hover">
            <summary>
            Link has been hover.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Markup.LinkStates.Down">
            <summary>
            Link pressed.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Markup.TagTypes">
            <summary>
            Specifies HTML tags and thier names.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Markup.TagTypes.Other">
            <summary>
            Any other tag not specifically listed below.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Markup.TagTypes.NewLine">
            <summary>
            BR tag
            </summary>
        </member>
        <member name="F:Stone.WinUI.Markup.TagTypes.Anchor">
            <summary>
            A tag
            </summary>
        </member>
        <member name="F:Stone.WinUI.Markup.TagTypes.Bold">
            <summary>
            B tag
            </summary>
        </member>
        <member name="F:Stone.WinUI.Markup.TagTypes.Font">
            <summary>
            FONT tag
            </summary>
        </member>
        <member name="F:Stone.WinUI.Markup.TagTypes.Italic">
            <summary>
            I tag
            </summary>
        </member>
        <member name="F:Stone.WinUI.Markup.TagTypes.Strikeout">
            <summary>
            S tag
            </summary>
        </member>
        <member name="F:Stone.WinUI.Markup.TagTypes.Underline">
            <summary>
            U tag
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsMdiFormAddEventArgs">
            <summary>
            Event Args when form add to <see cref="T:Stone.WinUI.AsTabControl"/> Mdi Mode.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsMdiFormAddEventArgs.#ctor(Stone.WinUI.Forms.BaseForm)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsMdiFormAddEventArgs"/> class.
            </summary>
            <param name="form">The form.</param>
        </member>
        <member name="P:Stone.WinUI.AsMdiFormAddEventArgs.BaseForm">
            <summary>
            Gets the base form.
            </summary>
            <value>The base form.</value>
        </member>
        <member name="T:Stone.WinUI.AsGridRowDeleteEventArgs">
            <summary>
            EventArgs when row beging delete and deleted.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridRowDeleteEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridRowDeleteEventArgs"/> class.
            </summary>
            <param name="rowIndex">Index of the row.</param>
        </member>
        <member name="P:Stone.WinUI.AsGridRowDeleteEventArgs.Cancel">
            <summary>
            Get or set the indicator to ignore(true) or accept(false).
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridRowDeleteEventArgs.RowView">
            <summary>
            Get <see cref="T:System.Data.DataRowView"/> of the row.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridRowDeleteEventArgs.RowIndex">
            <summary>
            Gets the index of the row.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Forms.BaseForm">
            <summary>
            Base class form.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.BaseForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Forms.BaseForm"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.BaseForm.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.Form"/>.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="F:Stone.WinUI.Forms.BaseForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.BaseForm.InitializeComponent">
            <summary>
            Initialized
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.BaseForm.toolTip1">
            <summary>
            Provide Super Tooltip for child control.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Forms.BaseForm.TabImgLoading">
            <summary>
            Image on tab when loading.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Forms.BaseForm.IsEditor(System.Windows.Forms.Control)">
            <summary>
            Determines whether the specified control is editor.
            </summary>
            <param name="ctl">The Control.</param>
            <returns>
            	<c>true</c> if the specified CTL is editor; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Stone.WinUI.Forms.BaseForm.OnRendererTypeChanged(System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="E:Stone.WinUI.Forms.BaseForm.TabWaitingChanged">
            <summary>
            Occurs when tab waiting status changed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.BaseForm.CanDuplicate">
            <summary>
            Get or set the indicator to allow open more than one.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.BaseForm.MdiManager">
            <summary>
            Gets the MDI manager.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.BaseForm.TabImage">
            <summary>
            Gets or sets the image on parent tab page in mdi mode.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.BaseForm.TabWaiting">
            <summary>
            Gets or sets a value indicating whether tab page is waiting.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.BaseForm.FormID">
            <summary>
            Get or set the running form id by mdi manager.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Forms.BaseForm.MenuID">
            <summary>
            Get or set the unique id from menu caller.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsEditorServiceContext">
            <summary>
            Provides an implementation of IWindowsFormsEditorService and ITypeDescriptorContext.
            Also provides a static method to invoke a UITypeEditor given a designer, an object 
            and a property name.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditorServiceContext.#ctor(System.ComponentModel.Design.ComponentDesigner)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsEditorServiceContext"/> class.
            </summary>
            <param name="designer">The designer.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditorServiceContext.#ctor(System.ComponentModel.Design.ComponentDesigner,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsEditorServiceContext"/> class.
            </summary>
            <param name="designer">The designer.</param>
            <param name="prop">The prop.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditorServiceContext.#ctor(System.ComponentModel.Design.ComponentDesigner,System.ComponentModel.PropertyDescriptor,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsEditorServiceContext"/> class.
            </summary>
            <param name="designer">The designer.</param>
            <param name="prop">The prop.</param>
            <param name="newVerbText">The new verb text.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditorServiceContext.EditValue(System.ComponentModel.Design.ComponentDesigner,System.Object,System.String)">
            <summary>
            Edits the value.
            </summary>
            <param name="designer">The designer.</param>
            <param name="objectToChange">The object to change.</param>
            <param name="propName">Name of the prop.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditorServiceContext.System#ComponentModel#ITypeDescriptorContext#OnComponentChanged">
            <summary>
            Interface implementation
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditorServiceContext.System#ComponentModel#ITypeDescriptorContext#OnComponentChanging">
            <summary>
             Interface implementation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditorServiceContext.System#IServiceProvider#GetService(System.Type)">
            <summary>
            Interface implementation
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditorServiceContext.System#Windows#Forms#Design#IWindowsFormsEditorService#CloseDropDown">
            <summary>
            Interface implementation
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditorServiceContext.System#Windows#Forms#Design#IWindowsFormsEditorService#DropDownControl(System.Windows.Forms.Control)">
            <summary>
            Interface implementation
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditorServiceContext.System#Windows#Forms#Design#IWindowsFormsEditorService#ShowDialog(System.Windows.Forms.Form)">
            <summary>
            Interface implementation
            </summary>
            <param name="dialog"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditorServiceContext.OnEditItems(System.Object,System.EventArgs)">
            <summary>
            When the verb is invoked, use all the stuff above to show the dialog, etc.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditorServiceContext.ChangeService">
            <summary>
            Our caching property for the IComponentChangeService
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditorServiceContext.System#ComponentModel#ITypeDescriptorContext#Container">
            <summary>
            Self-explanitory interface impl.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditorServiceContext.System#ComponentModel#ITypeDescriptorContext#Instance">
            <summary>
            Interface implementation
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditorServiceContext.System#ComponentModel#ITypeDescriptorContext#PropertyDescriptor">
            <summary>
            Interface implementation
            </summary>
        </member>
        <member name="T:Stone.WinUI.Renderers.VistaColorTable">
            <summary>
            Provides colors used by WindowsVista style rendering
            </summary>
            <remarks>
            2007 Jos้ Manuel Men้ndez Poo
            Visit my blog for upgrades and other renderers - www.menendezpoo.com
            </remarks>
        </member>
        <member name="M:Stone.WinUI.Renderers.VistaColorTable.DarkenColor(System.Drawing.Color,System.Int32)">
            <summary>
            Darken Color
            </summary>
            <param name="colorIn"></param>
            <param name="percent"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Renderers.VistaColorTable.LightenColor(System.Drawing.Color,System.Int32)">
            <summary>
            Lighten Color
            </summary>
            <param name="colorIn"></param>
            <param name="percent">Greater is Lighter</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Renderers.VistaColorTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Renderers.VistaColorTable"/> class.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.CheckedGlowHot">
            <summary>
            Gets or sets the checked glow hot.
            </summary>
            <value>The checked glow hot.</value>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.CheckedButtonFillHot">
            <summary>
            Gets or sets the checked button fill hot.
            </summary>
            <value>The checked button fill hot.</value>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.CheckedButtonFill">
            <summary>
            Gets or sets the checked button fill.
            </summary>
            <value>The checked button fill.</value>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.CheckedGlow">
            <summary>
            Gets or sets the checked glow.
            </summary>
            <value>The checked glow.</value>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.MenuText">
            <summary>
            Gets or sets the menu text.
            </summary>
            <value>The menu text.</value>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.SeparatorNorth">
            <summary>
            Gets or sets the separator north.
            </summary>
            <value>The separator north.</value>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.SeparatorSouth">
            <summary>
            Gets or sets the separator south.
            </summary>
            <value>The separator south.</value>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.MenuLight">
            <summary>
            Gets or sets the menu light.
            </summary>
            <value>The menu light.</value>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.MenuDark">
            <summary>
            Gets or sets the menu dark.
            </summary>
            <value>The menu dark.</value>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.MenuBackground">
            <summary>
            Gets or sets the menu background.
            </summary>
            <value>The menu background.</value>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.MenuHighlightSouth">
            <summary>
            Gets or sets the menu highlight south.
            </summary>
            <value>The menu highlight south.</value>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.MenuHighlightNorth">
            <summary>
            Gets or sets the menu highlight north.
            </summary>
            <value>The menu highlight north.</value>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.MenuHighlight">
            <summary>
            Gets or sets the menu highlight.
            </summary>
            <value>The menu highlight.</value>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.DropDownArrow">
            <summary>
            Gets or sets the color for the dropwown arrow
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.ButtonFillSouthPressed">
            <summary>
            Gets or sets the south color of the button fill when pressed
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.ButtonFillSouth">
            <summary>
            Gets or sets the south color of the button fill
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.ButtonInnerBorderPressed">
            <summary>
            Gets or sets the color of the inner border when pressed
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.Glow">
            <summary>
            Gets or sets the glow color
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.ButtonFillNorth">
            <summary>
            Gets or sets the buttons fill color
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.ButtonFillNorthPressed">
            <summary>
            Gets or sets the buttons fill color when pressed
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.ButtonInnerBorder">
            <summary>
            Gets or sets the buttons inner border color
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.ButtonBorder">
            <summary>
            Gets or sets the buttons border color
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.ButtonOuterBorder">
            <summary>
            Gets or sets the buttons outer border color
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.Text">
            <summary>
            Gets or sets the color of the text
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.BackgroundGlow">
            <summary>
            Gets or sets the background glow color
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.BackgroundBorder">
            <summary>
            Gets or sets the color of the background border
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.BackgroundNorth">
            <summary>
            Background north part
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.BackgroundSouth">
            <summary>
            Background south color
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.GlossyEffectNorth">
            <summary>
            Gets ors sets the glossy effect north color
            </summary>
        </member>
        <member name="P:Stone.WinUI.Renderers.VistaColorTable.GlossyEffectSouth">
            <summary>
            Gets or sets the glossy effect south color
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsTextBox">
            <summary>
            Represent as text edit box.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsTextBox.CHAR_NUMERIC">
            <summary>
            char '0' for numeric only.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsTextBox.CHAR_ALPHANUMERIC">
            <summary>
            char 'A' for both letter and numeric.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsTextBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTextBox.Dispose(System.Boolean)">
            <summary>
            Release resource.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="F:Stone.WinUI.AsTextBox.m_MaskChars">
            <summary>
            ถอดค่าจาก m_Mask เป็น array เท่านั้น
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsTextBox.m_PromptAndValue">
            <summary>
            เก็บตัว prompt char / ค่า พร้อมตัวคั่น
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsTextBox.m_Allow_Char_Sep">
            <summary>
            ตัวคั่นที่สามารถนำไปใช้ได้คือ '.', '-', '/', '\', '(', ')' (ไม่อนุญาตให้ใช้ spacebar)
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTextBox.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.AsTextBox.SetValue(System.Object)">
            <summary>
            Set value from <see cref="T:System.Object"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsTextBox.SetValue(System.String)">
            <summary>
            Set value from <see cref="T:System.String"/>.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsTextBox.OnLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Leave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsTextBox.SetMask(System.String)">
            <summary>
            Define mask input from pattern string.
            </summary>
            <param name="maskinput">The mask.</param>
        </member>
        <member name="M:Stone.WinUI.AsTextBox.textEdit_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Handles the KeyPress event when use mask.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsTextBox.textEdit_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle key down event in textBox when use mask.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTextBox.textEdit_CutCopyPaste(System.Object,Stone.WinUI.CutCopyPasteEventArgs)">
            <summary>
            Handles the Cut, Copy and Paste event of the textEdit control when use mask.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Stone.WinUI.CutCopyPasteEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsTextBox.DeleteTextWhenMask(System.Int32,System.String,System.Boolean,System.Int32@)">
            <summary>
            Deletes the text when used mask.
            </summary>
            <param name="position">Selection start.</param>
            <param name="selectedText">Selected text.</param>
            <param name="backspaceKey">Pressed Backspace Key.</param>
            <param name="newPositionAfterDel">Cursor position after deleted.</param>
            <returns>Empty when no changed or new text after deleted.</returns>
        </member>
        <member name="M:Stone.WinUI.AsTextBox.SetTextWhenMask(System.String)">
            <summary>
            Set new text when used mask.
            </summary>
            <param name="txt">New text may include or exclude literals.</param>
            <returns>Cursor position after set text</returns>
        </member>
        <member name="M:Stone.WinUI.AsTextBox.SetTextWhenMask(System.String,System.Int32,System.Int32)">
            <summary>
            Set new text when used mask from start index.
            </summary>
            <param name="txt">New text may include or exclude literals.</param>
            <param name="startIndex">Start index(zero base)</param>
            <param name="selectionLength">Length of selected text.</param>
            <returns>Cursor position after set text</returns>
        </member>
        <member name="E:Stone.WinUI.AsTextBox.BeforeDataChange">
            <summary>
            Occur before data change.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsTextBox.AfterDataChanged">
            <summary>
            Occur when leave the control and data changed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTextBox.MultiLine">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.AsTextBox.ShowButton">
            <summary>
            This is not meaning for this control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTextBox.FunctionKey">
            <summary>
            This is not meaning for this control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTextBox.IsEmpty">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.AsTextBox.PromptChar">
            <summary>
            Gets or sets the character used as place holder.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTextBox.UsedMask">
            <summary>
            Gets a value indicating whether mask input is exists.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTextBox.IncludeLiterals">
            <summary>
            Gets or sets a value indicating whether 
            the string return to include literals when true, otherwise false.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTextBox.Mask">
            <summary>
            Gets or sets the format to allow input, Example: 000-0000-000
            <para>Syntax: 0=Numeric, A=AlphaNumeric, Separate=(Hyphen, Dot, Slash, BackSlash, Open/Close Parentheses)</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTextBox.MaskCompleted">
            <summary>
            Gets a value indicating whether all required inputs have been entered into the input mask.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTextBox.ScrollBars">
            <summary>
            Set scrollbar to text box
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTextBox.Value">
            <inheritdoc />
        </member>
        <member name="T:Stone.WinUI.AsListIndexBox">
            <summary>
            Represent as dropdown list box.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListIndexBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsListIndexBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListIndexBox.Dispose(System.Boolean)">
            <summary>
            Release resource.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="F:Stone.WinUI.AsListIndexBox.m_OldValue">
            <summary>
            Old value before change, keep last value on leave finished.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListIndexBox.ResetOldValueToCurrent">
            <summary>
            Sets old value to equal current value.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsListIndexBox.m_Value">
            <summary>
            internal selected index.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListIndexBox.GetValue">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListIndexBox.Clear">
            <summary>
            Clear value and text.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListIndexBox.SetValue(System.Object)">
            <summary>
            Set value from <see cref="T:System.Object"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsListIndexBox.SetValue(System.String)">
            <summary>
            Set value from specific text(ignore case).
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsListIndexBox.SetValue(System.Int32)">
            <summary>
            Set value from specific index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsListIndexBox.OnCreateControl">
            <summary>
            On Create Control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListIndexBox.OnLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Leave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsListIndexBox.OnAfterDataChanged">
            <summary>
            Raised event AfterDataChanged.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsListIndexBox.OnButtonEditClick">
            <summary>
            Occur when click button or press <see cref="P:Stone.WinUI.AsBaseEditBox.FunctionKey"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsListIndexBox.LoadFromEnum(System.Type)">
            <summary>
            Load enum as source of <see cref="P:Stone.WinUI.AsListIndexBox.IndexString"/>.
            </summary>
            <param name="typeEnum"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Stone.WinUI.AsListIndexBox.LoadFromArray(System.String[])">
            <summary>
            Load string array as source of <see cref="P:Stone.WinUI.AsListIndexBox.IndexString"/>.
            </summary>
            <param name="strArray">The STR array.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Stone.WinUI.AsListIndexBox.LoadProperytyFromClass(System.Type)">
            <summary>
            Load all public propeties from specific <see cref="T:System.Type"/> of class 
            as source of <see cref="P:Stone.WinUI.AsListIndexBox.IndexString"/>.
            </summary>
            <param name="typeClass"></param>
            /// <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="P:Stone.WinUI.AsListIndexBox.DefaultButtonColor">
            <summary>
            Gets the default color of the button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsListIndexBox.DialogCustomWidth">
            <summary>
            Get or set dialog width when drop down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsListIndexBox.IntegralWidth">
            <summary>
            Get or set the dialog dropdown width equal the combo.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsListIndexBox.ImageListIndex">
            <summary>
            Get or set <see cref="T:System.Windows.Forms.ImageList"/> to show in dropdown.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsListIndexBox.IndexString">
            <summary>
            Get or set index string. 
            Separate each word by comma, value for 1st word begin from zero.
            <para>Syntax: [strIndex0][|foreColorIndex0], [strIndex1][|foreColorIndex1]</para>
            <para>Sample: Active|Blue,InActive|Red,Unknown</para>
            </summary>
            <example>
            Syntax: [strIndex0][|foreColorIndex0], [strIndex1][|foreColorIndex1]
            Sample: Active|Blue,InActive|Red,Unknown
            </example>
        </member>
        <member name="P:Stone.WinUI.AsListIndexBox.ReadOnly">
            <summary>
            Get or set the control is read only.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsListIndexBox.IsEmpty">
            <summary>
            Gets a value indicating whether this value is empty.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsListIndexBox.Value">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsListIndexBox.ValueChanged">
            <summary>
            Get the wheather value changed from user.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsListIndexBox.BeforeDataChange">
            <summary>
            Occur before selected index change.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsListIndexBox.AfterDataChanged">
            <summary>
            Occur when leave the control and data changed.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsColorDropdown">
            <summary>
            Show tab color for user pick color.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorDropdown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsColorDropdown"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorDropdown.GotoButton(System.Int32)">
            <summary>
            Go to button from specific tab index.
            </summary>
            <param name="tabIndex"></param>
        </member>
        <member name="M:Stone.WinUI.AsColorDropdown.Localize">
            <summary>
            Localizes resource of this instance.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorDropdown.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Process command key (up, down).
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsColorDropdown.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:RendererTypeChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Stone.WinUI.AsColorDropdown.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsColorDropdown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stone.WinUI.AsColorDropdown.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsColorDropdown.MenuFont">
            <summary>
            Gets the menu font.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsColorDropdown.SelectedColor">
            <summary>
            Get or set the selected color.
            </summary>
        </member>
        <member name="M:Stone.WinUI.PopupDropdown.#ctor(System.Windows.Forms.Control,System.Windows.Forms.Control,Stone.WinUI.PopupSizings)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.PopupDropdown"/> class.
            </summary>
            <param name="atControl">Show at control.</param>
            <param name="controlDropdown">The control.</param>
            <param name="popupSizing">Sizing directions</param>
        </member>
        <member name="M:Stone.WinUI.PopupDropdown.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="mea">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.PopupDropdown.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStripItem.MouseUp"/> event.
            </summary>
            <param name="mea">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.PopupDropdown.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.PopupDropdown.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="mea">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.PopupDropdown.OnOpened(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStripDropDown.Opened"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.PopupDropdown.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.PopupDropdown.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Hook to adjust size when resize by mouse.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message"/> to process.</param>
        </member>
        <member name="M:Stone.WinUI.PopupDropdown.ShowDropdown">
            <summary>
            Shows the dropdown.
            </summary>
        </member>
        <member name="M:Stone.WinUI.PopupDropdown.ShowDropdown(System.Drawing.Point,System.Windows.Forms.ToolStripDropDownDirection)">
            <summary>
            Shows the dropdown at specific point.
            </summary>
            <param name="point">The point.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="P:Stone.WinUI.PopupDropdown.GripHeight">
            <summary>
            Gets height of the grip(default is 8), if cannot sizing return zero. 
            </summary>
        </member>
        <member name="P:Stone.WinUI.PopupDropdown.PopupSizing">
            <summary>
            Gets or sets the behavior of popup sizing directions.
            </summary>
        </member>
        <member name="P:Stone.WinUI.PopupDropdown.BaseColor">
            <summary>
            Gets or sets the color of sizing grip and bar, default is <see cref="P:System.Drawing.SystemColors.Control"/> 
            </summary>
        </member>
        <member name="P:Stone.WinUI.PopupDropdown.RendererType">
            <summary>
            Get or set the render type of control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.PopupDropdown.GetDisplayPoint">
            <summary>
            Get display point for drop down.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.RendererButtonOfficeXP.#ctor(Stone.WinUI.AsButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererButtonOfficeXP"/> class.
            </summary>
            <param name="button">The button.</param>
        </member>
        <member name="M:Stone.WinUI.RendererButtonOfficeXP.DrawButtonSurface(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draw button surface.
            </summary>
            <param name="g">The g.</param>
            <param name="butRect">Button area.</param>
            <param name="dropdownRect">The rect dropdown.</param>
            <param name="parentBackColor">Color of the parent back.</param>
            <param name="isDefault">if set to <c>true</c> [is default].</param>
            <param name="inEditBox">if set to <c>true</c> [in edit box].</param>
            <param name="comboBoxStyle">if set to <c>true</c> [combo box style].</param>
            <param name="pressSplitDropdown">if set to <c>true</c> [press split dropdown].</param>
            <param name="hoverSplitDropdown">if set to <c>true</c> [hover split dropdown].</param>
            <param name="drawState">State of the draw.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorAeroGlass.#ctor(Stone.WinUI.AsGrouper)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererNavigatorAeroGlass"/> class.
            </summary>
            <param name="navigator">The navigator.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorAeroGlass.DrawSplitter(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the splitter.
            </summary>
            <param name="g">The g.</param>
            <param name="rectBody">The rect body.</param>
            <param name="rectSpliter">The rect spliter.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorAeroGlass.DrawBand(System.Drawing.Graphics,Stone.WinUI.AsBand,System.Boolean,System.Drawing.SolidBrush,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>
            Draws the band.
            </summary>
            <param name="g">Device context</param>
            <param name="band">The band.</param>
            <param name="selected">Band is selected</param>
            <param name="textBrush">The text brush.</param>
            <param name="font">The font.</param>
            <param name="sf">The sf.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorAeroGlass.DrawFooterBand(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the footer band.
            </summary>
            <param name="g">Device context</param>
            <param name="rectFooterBand">The rect footer band.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorAeroGlass.DrawMoreOption(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.MouseStates)">
            <summary>
            Draws the more option button.
            </summary>
            <param name="g">Device context</param>
            <param name="rectMoreOption">The rect more option.</param>
            <param name="state">The state.</param>
        </member>
        <member name="P:Stone.WinUI.RendererNavigatorAeroGlass.Navigator">
            <summary>
            Gets the navigator.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsScrollBarDesigner">
            <summary>
            The designer for the custom scroll bar control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsScrollBarDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Prefilters the properties so that unnecessary properties are hidden
            in the property browser of Visual Studio.
            </summary>
            <param name="properties">The property dictionary.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsScrollBarDesigner.PreFilterEvents(System.Collections.IDictionary)">
            <summary>
            Allows a designer to add to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor"/>.
            </summary>
            <param name="events">The events for the class of the component.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsImageViewerActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsImageViewerActionList"/> class.
            </summary>
            <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList"/>.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsImageViewerActionList.SetProperty(System.String,System.Object)">
            <summary>
            Sets the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsImageViewerActionList.GetProperty``1(System.String)">
            <summary>
            Gets the property.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsImageViewerActionList.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem"/> objects contained in the list.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.Design.DesignerActionItem"/> array that contains the items in this list.
            </returns>
        </member>
        <member name="P:Stone.WinUI.Design.AsImageViewerActionList.BackColor">
            <summary>
            Gets or sets back color
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsImageViewerActionList.FrameColor">
            <summary>
            Gets or sets frame color
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsImageViewerActionList.BorderStyle">
            <summary>
            Gets or sets border style.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsImageViewerActionList.RendererType">
            <summary>
            Gets or sets renderer type.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsImageViewerActionList.Image">
            <summary>
            Gets or sets image to show.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsImageViewerActionList.ImageAutoSize">
            <summary>
            Gets or sets image auto size.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsImageViewerActionList.Dock">
            <summary>
            Gets or sets dock style.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsDateBox">
            <summary>
            Represent as DatePicker
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsDateBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsDateBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsDateBox.Dispose(System.Boolean)">
            <summary>
            Release resource.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.AsDateBox.SelectDatePart(System.Int32,System.Drawing.Point)">
            <summary>
            Select the date part, 0=auto, 1=section one, 2=section two, 3=section three.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsDateBox.UpdateSelectedDatePart(System.Int32,System.Boolean)">
            <summary>
            Not yet implement เพราะจะไปขัดกัน เมื่อ datebox อยู่ในกริด
            </summary>
            <param name="part"></param>
            <param name="up"></param>
        </member>
        <member name="F:Stone.WinUI.AsDateBox.m_FormatEmpty">
            <summary>
            Flags to know custom TextFormat is empty or not.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsDateBox.m_OldValue">
            <summary>
            Old date before change, keep last value on leave finished.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsDateBox.m_Value">
            <summary>
            Keep date selected in this control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsDateBox.ResetOldValueToCurrent">
            <summary>
            Sets old value to equal current value.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsDateBox.textEdit_GotFocus(System.Object,System.EventArgs)">
            <summary>
            TextBox got focus
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsDateBox.OnAfterDataChanged">
            <summary>
            Raised event AfterDataChanged.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsDateBox.OnButtonEditClick">
            <summary>
            Occur when click button or press <see cref="P:Stone.WinUI.AsBaseEditBox.FunctionKey"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsDateBox.OnLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Leave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsDateBox.GetValue">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsDateBox.SetValue(System.Object)">
            <summary>
            Set value from <see cref="T:System.Object"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsDateBox.SetValue(System.DateTime)">
            <summary>
            Set value by datetime
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsDateBox.Clear">
            <summary>
            Clear value and text.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsDateBox.BeforeDataChange">
            <summary>
            Occur before data change.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsDateBox.AfterDataChanged">
            <summary>
            Occur when leave the control and data changed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsDateBox.BoldedDates">
            <summary>
            Get or set array of bold date.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsDateBox.DefaultButtonColor">
            <summary>
            Gets the default color of the button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsDateBox.IsEmpty">
            <summary>
            Gets a value indicating whether this value is empty.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsDateBox.TextFormat">
            <summary>
            Gets or sets the custom text format.(Example: dd-MM-yyyy)
            <para>
            <example>
            <para>"dd-MM-yyyy", 31-12-2000</para>
            <para>"MMM dd, yyyy" Jan 12, 2000</para>
            </example>
            </para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsDateBox.Value">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsDateBox.ValueChanged">
            <summary>
            Get the wheather value changed from user.
            </summary>
        </member>
        <member name="T:Stone.WinUI.RendererScrollBarOffice2003">
            <summary>
            Renderer Scrollbar Office 2003 Style.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererScrollBarOffice2003.#ctor(Stone.WinUI.AsScrollBarBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererScrollBarOffice2003"/> class.
            </summary>
            <param name="scrollbar">The scrollbar.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollBarOffice2003.DrawArrowButton(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarArrowStates,System.Boolean)">
            <summary>
            Draws an arrow button.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:Stone.WinUI.ScrollBarArrowStates"/> of the arrow button.</param>
            <param name="arrowUp">true for an up arrow, false otherwise.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollBarOffice2003.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws border around the scrollbar.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollBarOffice2003.DrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollBarOffice2003.DrawThumb(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarStates)">
            <summary>
            Draws the thumb.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:Stone.WinUI.ScrollBarStates"/> of the thumb.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollBarOffice2003.DrawTrack(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarStates)">
            <summary>
            Draws the channel ( or track ).
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The scrollbar state.</param>
        </member>
        <member name="P:Stone.WinUI.RendererScrollBarOffice2003.ScrollBar">
            <summary>
            Gets the scroll bar.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Markup.TagAttribute">
            <summary>
            Specifies a HTML tag for a <see cref="T:Stone.WinUI.Markup.TagTypes"/> property.
            </summary>
            <remarks>
            The attribute is used to allow the HTML tags defined by <see cref="T:Stone.WinUI.Markup.TagTypes"/> to be associated with a more
            friendly name, e.g. &lt;A&gt; with Anchor
            </remarks>
        </member>
        <member name="M:Stone.WinUI.Markup.TagAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TagAttribute class.
            </summary>
            <param name="tag">The HTML tag.</param>
        </member>
        <member name="P:Stone.WinUI.Markup.TagAttribute.Tag">
            <summary>
            Gets the HTML tag.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererButtonOffice2003.#ctor(Stone.WinUI.AsButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererButtonOffice2003"/> class.
            </summary>
            <param name="button">The button.</param>
        </member>
        <member name="M:Stone.WinUI.RendererButtonOffice2003.DrawButtonSurface(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draw button surface.
            </summary>
            <param name="g">The g.</param>
            <param name="butRect">Button area.</param>
            <param name="dropdownRect">The rect dropdown.</param>
            <param name="parentBackColor">Color of the parent back.</param>
            <param name="isDefault">if set to <c>true</c> [is default].</param>
            <param name="inEditBox">if set to <c>true</c> [in edit box].</param>
            <param name="comboBoxStyle">if set to <c>true</c> [combo box style].</param>
            <param name="pressSplitDropdown">if set to <c>true</c> [press split dropdown].</param>
            <param name="hoverSplitDropdown">if set to <c>true</c> [hover split dropdown].</param>
            <param name="drawState">State of the draw.</param>
        </member>
        <member name="M:Stone.WinUI.RendererButtonAeroGlass.#ctor(Stone.WinUI.AsButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererButtonAeroGlass"/> class.
            </summary>
            <param name="button">The button.</param>
        </member>
        <member name="M:Stone.WinUI.RendererButtonAeroGlass.DrawButtonSurface(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draw button surface.
            </summary>
            <param name="g">The g.</param>
            <param name="butRect">Button area.</param>
            <param name="dropdownRect">The rect dropdown.</param>
            <param name="parentBackColor">Color of the parent back.</param>
            <param name="isDefault">if set to <c>true</c> [is default].</param>
            <param name="inEditBox">if set to <c>true</c> [in edit box].</param>
            <param name="comboBoxStyle">if set to <c>true</c> [combo box style].</param>
            <param name="pressSplitDropdown">if set to <c>true</c> [press split dropdown].</param>
            <param name="hoverSplitDropdown">if set to <c>true</c> [hover split dropdown].</param>
            <param name="drawState">State of the draw.</param>
        </member>
        <member name="T:Stone.WinUI.AsBandEventArgs">
            <summary>
            Band EventArgs
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBandEventArgs.#ctor(Stone.WinUI.AsBand,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsBandEventArgs"/> class.
            </summary>
            <param name="band">The band.</param>
            <param name="index">The index.</param>
        </member>
        <member name="P:Stone.WinUI.AsBandEventArgs.Band">
            <summary>
            Gets the active band.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBandEventArgs.BandIndex">
            <summary>
            Gets the index of the band.
            </summary>
        </member>
        <member name="T:Stone.WinUI.RendererGridOffice2007">
            <summary>
            Renderer grid office 2007.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2007.#ctor(Stone.WinUI.AsGridView)">
            <summary>
            Initialized.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2007.DrawColumnMenuStripButton(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.ColumnStates)">
            <summary>
            Draws the column ContextMenuStrip button.
            </summary>
            <param name="g">The g.</param>
            <param name="colHeaderBackColor">Color of the column header back.</param>
            <param name="triangle">Point array of arrow down</param>
            <param name="rectCol">Column header bounds</param>
            <param name="rectContext">Context button bounds</param>
            <param name="state">Column state</param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2007.FillRowHeaders(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill row header and left side exclude left-top header.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2007.FillRowHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Boolean)">
            <summary>
            Fill background at rowheader.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="penBorder"></param>
            <param name="selected"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2007.FillLeftTopHeader(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="rectLeftTop"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2007.FillColumnTopHeader(System.Drawing.Graphics,Stone.WinUI.AsGridColumnTop)">
            <summary>
            Fill background top header.
            </summary>
            <param name="g"></param>
            <param name="top"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2007.FillColumnHeader(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.AsGridViewColumn,System.Boolean)">
            <summary>
            Fill column header
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="col"></param>
            <param name="selected"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2007.FillNoneColumnHeader(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="rectFill"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2007.HighlightRowSelected(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Highlight row selected.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="focused"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2007.FillLeftBottomFooter(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw left-bottom corner at footer.
            </summary>
            <param name="g"></param>
            <param name="rectLeftBottom"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2007.FillColumnFooter(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.AsGridViewColumn)">
            <summary>
            Fill column footer.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="col"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOffice2007.FillNoneColumnFooter(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill none column footer.
            </summary>
            <param name="g"></param>
            <param name="rectFill"></param>
        </member>
        <member name="P:Stone.WinUI.RendererGridOffice2007.Grid">
            <summary>
            Get the parent grid.
            </summary>
            <value></value>
        </member>
        <member name="P:Stone.WinUI.RendererGridOffice2007.AutoBaseColor">
            <summary>
            Gets the auto color from base color.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridDrawFooterEventArgs">
            <summary>
            Custom draw column footer event args.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridDrawFooterEventArgs.#ctor(System.Drawing.Graphics,Stone.WinUI.AsGridViewColumn,System.Int32,System.Drawing.FontStyle,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridDrawFooterEventArgs"/> class.
            </summary>
            <param name="g">The g.</param>
            <param name="col">The col.</param>
            <param name="colIndex">Index of the col.</param>
            <param name="fontStyle">The font style.</param>
            <param name="foreColor">Color of the fore.</param>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawFooterEventArgs.Graphics">
            <summary>
            Get the Graphics.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawFooterEventArgs.ColumnFooter">
            <summary>
            Get the ColumnFooter (AsGridViewColumn)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawFooterEventArgs.Index">
            <summary>
            Get the column index.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawFooterEventArgs.CustomFontStyle">
            <summary>
            Get the font to draw column footer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawFooterEventArgs.ForeColor">
            <summary>
            Get ForeColor to draw column footer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawFooterEventArgs.DrawBackground">
            <summary>
            Get or set the wheather to draw background state by system(true) or custom(false).
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridDrawFooterEventArgs.DrawText">
            <summary>
            Get or set the wheather to draw column text footer or not.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsGridViewDesigner">
            <summary>
            Designer for parent.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewDesigner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsGridViewDesigner"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewDesigner.Dispose(System.Boolean)">
            <summary>
            Dispose designer.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="F:Stone.WinUI.Design.AsGridViewDesigner.grid">
            <summary>
            Gets the Grid.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewDesigner.serviceChange_ComponentRemoving(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewDesigner.service_SelectionChanged(System.Object,System.EventArgs)">
            <summary>
            Internal.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewDesigner.AddColumn">
            <summary>
            Add new column.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initialize a designer.
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            Remove some property.
            </summary>
            <param name="properties"></param>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewDesigner.GetHitTest(System.Drawing.Point)">
            <summary>
            Get hit test when click inside column header area only.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.Design.AsGridViewDesigner.Grid">
            <summary>
            Gets the control of designer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGridViewDesigner.AssociatedComponents">
            <summary>
            Get the collection of componented.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGridViewDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value></value>
            <returns>
            The design-time action lists supported by the component associated with the designer.
            </returns>
        </member>
        <member name="T:Stone.WinUI.Design.AsGridViewActionList">
            <summary>
            Action list for <see cref="T:Stone.WinUI.AsGridView"/>
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsGridViewActionList"/> class.
            </summary>
            <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList"/>.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewActionList.SetProperty(System.String,System.Object)">
            <summary>
            Sets the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewActionList.GetProperty``1(System.String)">
            <summary>
            Gets the property.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewActionList.InvokeEditColumnsDialog">
            <summary>
            Invoke to edit column collection.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewActionList.InvokeEditColumnsTopDialog">
            <summary>
            Invoke to edit column top collection.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewActionList.AddColumn">
            <summary>
            Add column
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewActionList.InvokeAbout">
            <summary>
            Show About form.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewActionList.GetSortedActionItems">
            <summary>
            Get Sorted Action Items.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.Design.AsGridViewActionList.Designer">
            <summary>
            Gets the designer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGridViewActionList.BaseColor">
            <summary>
            Gets or sets the color of the base.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGridViewActionList.GridLine">
            <summary>
            Gets or sets the grid line.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGridViewActionList.RendererType">
            <summary>
            Gets or sets the type of the renderer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGridViewActionList.AutoColumnsName">
            <summary>
            Gets or sets a value indicating whether [auto columns name].
            </summary>
            <value><c>true</c> if [auto columns name]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Stone.WinUI.Design.AsGridViewActionList.ShowFooter">
            <summary>
            Gets or sets a value indicating whether [show footer].
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGridViewActionList.ShowHeader">
            <summary>
            Gets or sets a value indicating whether [show header].
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGridViewActionList.ShowHeaderTop">
            <summary>
            Gets or sets a value indicating whether show header top.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsGridViewActionList.ShowRowHeader">
            <summary>
            Gets or sets a value indicating whether [show row header].
            </summary>
        </member>
        <member name="T:Stone.WinUI.BorderStrip">
            <summary>
            Corner control border.
            </summary>
        </member>
        <member name="F:Stone.WinUI.BorderStrip.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.BorderStrip.#ctor">
            <summary>
            Innitialized border strip.
            </summary>
        </member>
        <member name="M:Stone.WinUI.BorderStrip.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Stone.WinUI.BorderStrip.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Stone.WinUI.BorderStrip.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paint border strip
            </summary>
            <param name="pe"></param>
        </member>
        <member name="P:Stone.WinUI.BorderStrip.BorderColor">
            <summary>
            Get or set the border color.
            </summary>
        </member>
        <member name="P:Stone.WinUI.BorderStrip.BorderStyle">
            <summary>
            Get or set the border around of the control.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsToolTipEditor">
            <summary>
            Editor for <see cref="T:Stone.WinUI.AsToolTip"/> at design-time.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsToolTipEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsToolTipEditor"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsToolTipEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/>.
            </returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsToolTipEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="T:Stone.WinUI.Renderers.Office2007SilverColorTable">
            <summary>
            Provide Office 2007 Silver Theme colors
            </summary>
        </member>
        <member name="M:Stone.WinUI.Renderers.Office2007SilverColorTable.InitColors(System.Collections.Generic.Dictionary{Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors,System.Drawing.Color}@)">
            <summary>
            initialize a color Dictionary with defined colors
            </summary>
            <param name="rgbTable">Dictionary with defined colors</param>
        </member>
        <member name="T:Stone.WinUI.AsTrialLicense">
            <summary>
            Trial license.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTrialLicense.#ctor(System.Type,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsTrialLicense"/> class.
            </summary>
            <param name="type"></param>
            <param name="instance"></param>
        </member>
        <member name="M:Stone.WinUI.AsTrialLicense.#ctor(System.Type,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsTrialLicense"/> class.
            </summary>
            <param name="type"></param>
            <param name="instance"></param>
            <param name="expired"></param>
        </member>
        <member name="M:Stone.WinUI.AsTrialLicense.IsOverTrial(System.Int32)">
            <summary>
            Is over trial day limited.
            </summary>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.AsTrialLicense.Trial">
            <summary>
            Get the indicator of trial mode.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTrialLicense.Locked">
            <summary>
            Get the indicator of locked.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsNumberBox">
            <summary>
            Represent as numeric box.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsNumberBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.Dispose(System.Boolean)">
            <summary>
            Release resource.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.setFormatNumberPattern(System.Int32)">
            <summary>
            Sets the standard format number pattern.
            </summary>
            <param name="decimalDegit">The double degit.</param>
            <returns></returns>
        </member>
        <member name="F:Stone.WinUI.AsNumberBox.m_OldValue">
            <summary>
            Old value before change, keep last value on leave finished.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsNumberBox.m_ButtonUpDown">
            <summary>
            Up and Down Button when IsNumericUpDown is true.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsNumberBox.m_Value">
            <summary>
            Internal value
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.ResetOldValueToCurrent">
            <summary>
            Sets old value to equal current value.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.GetForeColor(System.Double)">
            <summary>
            Gets text color from value, default is WindowText(Black).
            If value less than zero and <see cref="P:Stone.WinUI.AsNumberBox.NagativeInRed"/>=true and ShowData then return Red.
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Stone.WinUI.AsNumberBox.m_FormatNumber">
            <summary>
            Format number to be display.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.Clear">
            <summary>
            Clear value and text.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.GetValue">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.SetValue(System.Object)">
            <summary>
            Set value from <see cref="T:System.Object"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.SetValueNoWarning(System.Double)">
            <summary>
            Set value from arrow keys(UP and DOWN) and mouse wheel.
            </summary>
            <param name="d"></param>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.SetValue(System.Double)">
            <summary>
            Set value from <see cref="T:System.Double"/>.
            <para>If minimum not equal maximum, it will check new value is in range.</para>
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <param name="d"></param>
            <returns></returns>
            
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.textEdit_GotFocus(System.Object,System.EventArgs)">
            <summary>
            override
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.OnAfterDataChanged">
            <summary>
            Raised event AfterDataChanged.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.OnButtonEditClick">
            <summary>
            Occur when click button or press <seealso cref="P:Stone.WinUI.AsBaseEditBox.FunctionKey"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.OnLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Leave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="E:Stone.WinUI.AsNumberBox.BeforeDataChange">
            <summary>
            Occur before data change.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsNumberBox.AfterDataChanged">
            <summary>
            Occur when leave the control and data changed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.ButtonUpDown">
            <summary>
            Gets or Sets up down button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.TextAlign">
            <summary>
            Get or set text alignment in textbox.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.DefaultButtonColor">
            <summary>
            Gets the default color of the button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.DecimalDigit">
            <summary>
            Gets or sets the decimal digit to display.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.TextFormat">
            <summary>
            Gets or sets the custom text format for display number.(Example: N4)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.TaxRate">
            <summary>
            Gets or sets tax rate to show in calculator.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.IsEmpty">
            <summary>
            Gets a value indicating whether this value is empty.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.NumericUpDownStyle">
            <summary>
            Gets or sets a value indicating whether this instance is numeric up down style.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.Value">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.ValueChanged">
            <summary>
            Get the wheather value changed from user.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.Minimum">
            <summary>
            Gets or sets the minimum value.
            <para></para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.Maximum">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.Increment">
            <summary>
            Gets or sets the incremental value when <see cref="P:Stone.WinUI.AsNumberBox.NumericUpDownStyle"/> is true.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.InterceptArrowKeys">
            <summary>
            Gets or sets a value indicating whether support arrow keys(UP and DOWN) when <see cref="P:Stone.WinUI.AsNumberBox.NumericUpDownStyle"/> is true.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.NagativeInRed">
            <summary>
            Gets or sets a value indicating whether to display number with red when negative, otherwise default text color.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsNumberBox.UpDownButton">
            <summary>
            Up and Down Button.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.UpDownButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsNumberBox.UpDownButton"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.UpDownButton.OnUpDownClick(System.Windows.Forms.UpDownEventArgs)">
            <summary>
            Raises the <see cref="E:UpDownClick"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.UpDownEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.UpDownButton.GetMouseState(Stone.WinUI.ButtonDrawStates)">
            <summary>
            Gets the mouse state from button draw state.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsNumberBox.UpDownButton.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Occur after <see cref="P:Stone.WinUI.AsBaseControl.RendererType"/> changed.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Stone.WinUI.AsNumberBox.UpDownButton.UpDownClick">
            <summary>
            Occurs when up/down button click.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.UpDownButton.NumberBox">
            <summary>
            Gets the number box.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.UpDownButton.ButtonUpState">
            <summary>
            Gets or sets the state of the up button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsNumberBox.UpDownButton.ButtonDownState">
            <summary>
            Gets or sets the state of the down button.
            </summary>
        </member>
        <member name="T:Stone.WinUI.RendererGridAeroGlass">
            <summary>
            Renderer grid aero glass.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererGridAeroGlass.#ctor(Stone.WinUI.AsGridView)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererGridAeroGlass"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGridAeroGlass.DrawColumnMenuStripButton(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.ColumnStates)">
            <summary>
            Draws the column ContextMenuStrip button.
            </summary>
            <param name="g">The g.</param>
            <param name="colHeaderBackColor">Color of the column header back.</param>
            <param name="triangle">Point array of arrow down</param>
            <param name="rectCol">Column header bounds</param>
            <param name="rectContext">Context button bounds</param>
            <param name="state">Column state</param>
        </member>
        <member name="M:Stone.WinUI.RendererGridAeroGlass.FillRowHeaders(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill row header and left side exclude left-top header.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridAeroGlass.FillRowHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Boolean)">
            <summary>
            Fill background at rowheader.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="penBorder"></param>
            <param name="selected"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridAeroGlass.FillLeftTopHeader(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill corner left-top at header.
            </summary>
            <param name="g"></param>
            <param name="rectLeftTop"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridAeroGlass.FillColumnTopHeader(System.Drawing.Graphics,Stone.WinUI.AsGridColumnTop)">
            <summary>
            Fill background top header.
            </summary>
            <param name="g"></param>
            <param name="top"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridAeroGlass.FillColumnHeader(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.AsGridViewColumn,System.Boolean)">
            <summary>
            Fill column header
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="col"></param>
            <param name="selected"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridAeroGlass.FillNoneColumnHeader(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill none column header.
            </summary>
            <param name="g"></param>
            <param name="rectFill"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridAeroGlass.HighlightRowSelected(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Highlight row selected.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="focused"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridAeroGlass.FillLeftBottomFooter(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw left-bottom corner at footer.
            </summary>
            <param name="g"></param>
            <param name="rectLeftBottom"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridAeroGlass.FillColumnFooter(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.AsGridViewColumn)">
            <summary>
            Fill column footer.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="col"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridAeroGlass.FillNoneColumnFooter(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill none column footer.
            </summary>
            <param name="g"></param>
            <param name="rectFill"></param>
        </member>
        <member name="P:Stone.WinUI.RendererGridAeroGlass.Grid">
            <summary>
            Get the parent grid.
            </summary>
        </member>
        <member name="P:Stone.WinUI.RendererGridAeroGlass.AutoBaseColor">
            <summary>
            Gets the auto color from base color.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Markup.HyperLinkEventArgs">
            <summary>
            EventArgs for <see cref="T:Stone.WinUI.Markup.HyperLink"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Markup.HyperLinkEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Markup.HyperLinkEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.HyperLinkEventArgs.SourceControl">
            <summary>
            Gets the control has been clicked.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.HyperLinkEventArgs.Id">
            <summary>
            Gets the anchor id.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.HyperLinkEventArgs.InnerText">
            <summary>
            Gets the inner text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Markup.HyperLinkEventArgs.Href">
            <summary>
            Gets the href.
            </summary>
        </member>
        <member name="T:Stone.WinUI.SpinArrowTab">
            <summary>
            Spin Arrow Tab
            </summary>
        </member>
        <member name="M:Stone.WinUI.SpinArrowTab.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.SpinArrowTab"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.SpinArrowTab.Innitialized">
            <summary>
            Innitialized a component
            </summary>
        </member>
        <member name="M:Stone.WinUI.SpinArrowTab.ResetButtonListState">
            <summary>
            Resets the state of the list button.
            </summary>
        </member>
        <member name="M:Stone.WinUI.SpinArrowTab.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Occur after <see cref="P:Stone.WinUI.AsBaseControl.RendererType"/> changed.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Stone.WinUI.SpinArrowTab.ButtonClick">
            <summary>
            Occur after click spin button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.SpinArrowTab.EnableArrowLeft">
            <summary>
            Sets a value indicating whether [enable arrow left].
            </summary>
            <value><c>true</c> if [enable arrow left]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Stone.WinUI.SpinArrowTab.EnableArrowRight">
            <summary>
            Sets a value indicating whether [enable arrow right].
            </summary>
            <value><c>true</c> if [enable arrow right]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Stone.WinUI.SpinArrowTab.MdiMode">
            <summary>
            Get or set the MdiMode(show list,close button) if set to true,
            otherwise show left-right arrow.
            </summary>
        </member>
        <member name="P:Stone.WinUI.SpinArrowTab.ParentTabControl">
            <summary>
            Get or set the ParentTabControl (AsTabControl)
            </summary>
        </member>
        <member name="T:Stone.WinUI.RendererScrollbarSystem3D">
            <summary>
            Renderer Scrollbar System3D Style.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarSystem3D.#ctor(Stone.WinUI.AsScrollBarBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererScrollbarSystem3D"/> class.
            </summary>
            <param name="scrollbar">The scrollbar.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarSystem3D.DrawArrowButton(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarArrowStates,System.Boolean)">
            <summary>
            Draws an arrow button.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:Stone.WinUI.ScrollBarArrowStates"/> of the arrow button.</param>
            <param name="arrowUp">true for an up arrow, false otherwise.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarSystem3D.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws border around the scrollbar.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarSystem3D.DrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarSystem3D.DrawThumb(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarStates)">
            <summary>
            Draws the thumb.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:Stone.WinUI.ScrollBarStates"/> of the thumb  .</param>
        </member>
        <member name="M:Stone.WinUI.RendererScrollbarSystem3D.DrawTrack(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ScrollBarStates)">
            <summary>
            Draws the channel ( or track ).
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The scrollbar state.</param>
        </member>
        <member name="P:Stone.WinUI.RendererScrollbarSystem3D.ScrollBar">
            <summary>
            Gets the scroll bar.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorOffice2003.#ctor(Stone.WinUI.AsGrouper)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererNavigatorOffice2003"/> class.
            </summary>
            <param name="navigator">The navigator.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorOffice2003.DrawSplitter(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the horizontal spliter.
            </summary>
            <param name="g">Device context</param>
            <param name="rectBody">The rect body.</param>
            <param name="rectSpliter">The rect spliter.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorOffice2003.DrawBand(System.Drawing.Graphics,Stone.WinUI.AsBand,System.Boolean,System.Drawing.SolidBrush,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>
            Draws the band.
            </summary>
            <param name="g">Device context</param>
            <param name="band">The band.</param>
            <param name="selected">Band is selected</param>
            <param name="textBrush">The text brush.</param>
            <param name="font">The font.</param>
            <param name="sf">The sf.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorOffice2003.DrawFooterBand(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the footer band.
            </summary>
            <param name="g">Device context</param>
            <param name="rectFooterBand">The rect footer band.</param>
        </member>
        <member name="M:Stone.WinUI.RendererNavigatorOffice2003.DrawMoreOption(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.MouseStates)">
            <summary>
            Draws the more option button.
            </summary>
            <param name="g">Device context</param>
            <param name="rectMoreOption">The rect more option.</param>
            <param name="state">The state.</param>
        </member>
        <member name="P:Stone.WinUI.RendererNavigatorOffice2003.Navigator">
            <summary>
            Gets the navigator.
            </summary>
        </member>
        <member name="P:Stone.WinUI.RendererNavigatorOffice2003.Chevron">
            <summary>
            Gets the chevron.
            </summary>
        </member>
        <member name="T:Stone.WinUI.PanelBuffer">
            <summary>
            Represent as Panel with double buffer supported.
            </summary>
        </member>
        <member name="M:Stone.WinUI.PanelBuffer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.PanelBuffer"/> class.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridKeyEventArgs">
            <summary>
            Extened KeyEventArgs
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridKeyEventArgs.#ctor(System.String,System.Int32,System.Data.DataRowView,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridKeyEventArgs"/> class.
            </summary>
            <param name="field">The field.</param>
            <param name="rowIndex">Index of the row.</param>
            <param name="rowView">The row view.</param>
            <param name="keyArgs">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Stone.WinUI.AsGridKeyEventArgs.Field">
            <summary>
            Get the field name (string)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridKeyEventArgs.RowIndex">
            <summary>
            Get the RowIndex (int)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridKeyEventArgs.RowView">
            <summary>
            Get the RowView (DataRowView)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridKeyEventArgs.KeyArgs">
            <summary>
            Get the KeyArgs (KeyEventArgs)
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridButtonClickEventArgs">
            <summary>
            EventArgs when pressed button in grid.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridButtonClickEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridButtonClickEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridButtonClickEventArgs.ButtonText">
            <summary>
            Gets the button text.
            </summary>
            <value>The button text.</value>
        </member>
        <member name="P:Stone.WinUI.AsGridButtonClickEventArgs.Field">
            <summary>
            Get the field name of column clicked.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridButtonClickEventArgs.RowIndex">
            <summary>
            Gets the row index.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridButtonClickEventArgs.RowView">
            <summary>
            Gets the row view.
            </summary>
            <value>The row view.</value>
        </member>
        <member name="T:Stone.WinUI.AsLoading">
            <summary>
            Represent as loading control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLoading.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsLoading"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsLoading.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control"/> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.AsLoading.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsLoading.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Stone.WinUI.AsLoading.RadiusInner">
            <summary>
            Gets or sets the radius inner.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLoading.RadiusOuter">
            <summary>
            Gets or sets the radius outer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLoading.ProgressColor">
            <summary>
            Gets or sets the color of the progress.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLoading.ProgressStyle">
            <summary>
            Gets or sets the progress style.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLoading.TrailWidth">
            <summary>
            Gets or sets the width of the trail.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLoading.Sections">
            <summary>
            Gets or sets the sections.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLoading.SpeedInterval">
            <summary>
            Gets or sets the speed internal.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLoading.Active">
            <summary>
            Gets or sets a value indicating whether this control is active.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsLoading.DefaultSize">
            <inheritdoc />
        </member>
        <member name="T:Stone.WinUI.AsLoading.Styles">
            <summary>
            Presets style.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsLoading.Styles.Bar">
            <summary>
            Infinity bar style.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsLoading.Styles.CustomCircle">
            <summary>
            Manual circle style.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsLoading.Styles.Dash">
            <summary>
            Vertical dash progress.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsLoading.Styles.Flower">
            <summary>
            Circle around progress.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsLoading.Styles.Smooth">
            <summary>
            Smoothy progress.
            </summary>
        </member>
        <member name="T:Stone.WinUI.DataNumberChangeEventArgs">
            <summary>
            EventArgs for number change.
            </summary>
        </member>
        <member name="M:Stone.WinUI.DataNumberChangeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.DataNumberChangeEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Stone.WinUI.DataNumberChangeEventArgs.NewValue">
            <summary>
            Get new value data.
            </summary>
        </member>
        <member name="T:Stone.WinUI.CutCopyPasteEventArgs">
            <summary>
            EventArgs for cut, copy and paste opeation.
            </summary>
        </member>
        <member name="M:Stone.WinUI.CutCopyPasteEventArgs.#ctor(Stone.WinUI.ContextAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.CutCopyPasteEventArgs"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="P:Stone.WinUI.CutCopyPasteEventArgs.Action">
            <summary>
            Gets the context action.
            </summary>
        </member>
        <member name="P:Stone.WinUI.CutCopyPasteEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the event was handled, default is false.
            </summary>
        </member>
        <member name="T:Stone.WinUI.ContextAction">
            <summary>
            Action in text box. 
            </summary>
        </member>
        <member name="F:Stone.WinUI.ContextAction.Cut">
            <summary>
            Command cut.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ContextAction.Copy">
            <summary>
            Command copy.
            </summary>
        </member>
        <member name="F:Stone.WinUI.ContextAction.Paste">
            <summary>
            Command paste.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Win32Native">
            <summary>
            Windows32 Native
            </summary>
        </member>
        <member name="M:Stone.WinUI.Win32Native.RealGetWindowClass(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            Real get window class name.
            </summary>
            <param name="hwnd"></param>
            <param name="pszType"></param>
            <param name="cchType"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.GetCaretPos(System.Drawing.Point@)">
            <summary>
            Get caret position.
            </summary>
            <param name="lpPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.GetClassName(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            Get ClassName
            </summary>
            <param name="hwnd"></param>
            <param name="className"></param>
            <param name="maxCount"></param>
            <returns></returns>
            <remarks>** Do not change CharSet to other **</remarks>
        </member>
        <member name="M:Stone.WinUI.Win32Native.GetWindow(System.IntPtr,System.Int32)">
            <summary>
            Get window.
            </summary>
            <param name="hwnd"></param>
            <param name="uCmd"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.GetDCEx(System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
            Get DCEx
            </summary>
            <param name="hwnd"></param>
            <param name="hrgnclip"></param>
            <param name="fdwOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.GetWindowDC(System.IntPtr)">
            <summary>
            Get Windows DeviceContext.
            </summary>
            <param name="hwnd"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.GetWindowThreadProcessId(System.IntPtr,System.Int32)">
            <summary>
            Get Windows ThreadProcess Id.
            </summary>
            <param name="hwnd"></param>
            <param name="processID"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.ShowCaret(System.IntPtr)">
            <summary>
            Show cursor in the control.
            </summary>
            <param name="hwnd"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.AdjustWindowRectEx(Stone.WinUI.Win32Native.RECT@,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Adjusts the window rect ex.
            </summary>
            <param name="lpRect">The lp rect.</param>
            <param name="dwStyle">The dw style.</param>
            <param name="bMenu">if set to <c>true</c> [b menu].</param>
            <param name="dwExStyle">The dw ex style.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.HideCaret(System.IntPtr)">
            <summary>
            Hide cursor in the control.
            </summary>
            <param name="hwnd"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.GetKeyState(System.Int32)">
            <summary>
            Get KeyCode after user press keyboard.
            </summary>
            <param name="keyCode"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.SystemParametersInfo(System.Int32,System.Int32,System.Boolean@,System.Int32)">
            <summary>
            Get System parameters info from system.
            </summary>
            <param name="uAction"></param>
            <param name="uParam"></param>
            <param name="lpvParam"></param>
            <param name="fuWinIni"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.ReleaseCapture">
            <summary>
            Releases the capture.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            Release DC
            </summary>
            <param name="hwnd">The HWND.</param>
            <param name="hDC">The h DC.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.RegisterWindowMessage(System.String)">
            <summary>
            Register Window Message
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Send message to windows.
            </summary>
            <param name="hWnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.SendMessage(System.Int32,System.Int32,System.Int32)">
            <summary>
            Send message to windows.
            </summary>
            <param name="msg">The MSG.</param>
            <param name="wParam">The w param.</param>
            <param name="lParam">The l param.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.SendMessage(System.Runtime.InteropServices.HandleRef,System.Int32,System.Int32,System.Int32)">
            <summary>
            Send message to windows.
            </summary>
            <param name="hWnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Send message to windows.
            </summary>
            <param name="hWnd"></param>
            <param name="Msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.ShowScrollBar(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            ShowScrollBar
            </summary>
            <param name="hWnd"></param>
            <param name="wBar"></param>
            <param name="bShow"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.ShowWindow(System.IntPtr,System.Int16)">
            <summary>
            Show Window.
            </summary>
            <param name="hWnd"></param>
            <param name="cmdShow"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.GetWindowLong(System.IntPtr,System.Int32)">
            <summary>
            Get Window long for asMdiController
            </summary>
            <param name="hWnd"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.SetWindowLong(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Set Window long for asMdiController
            </summary>
            <param name="hWnd"></param>
            <param name="index"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Set Window Pos for asMdiController
            </summary>
            <param name="hWnd"></param>
            <param name="hWndInsertAfter"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="cx"></param>
            <param name="cy"></param>
            <param name="uFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.BeginDeferWindowPos(System.Int32)">
            <summary>
            Begin defer Window Pos
            </summary>
            <param name="nNumWindows"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.DrawMenuBar(System.IntPtr)">
            <summary>
            Draw menu bar by Form.Handle
            </summary>
            <param name="hwnd"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.EndDeferWindowPos(System.IntPtr)">
            <summary>
            End defer Window Pos
            </summary>
            <param name="hWinPosInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.DeferWindowPos(System.IntPtr,System.Runtime.InteropServices.HandleRef,System.Runtime.InteropServices.HandleRef,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Defer Window Pos
            </summary>
            <param name="hWinPosInfo"></param>
            <param name="hwnd"></param>
            <param name="hwndInsertAfter"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="cx"></param>
            <param name="cy"></param>
            <param name="uFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.SetParent(System.IntPtr,System.IntPtr)">
            <summary>
            Set Parent.
            </summary>
            <param name="hWndChild"></param>
            <param name="hWndNewParent"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.GetParent(System.IntPtr)">
            <summary>
            Get Parent from child handle.
            </summary>
            <param name="hWndChild"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.SetWindowPos(System.Runtime.InteropServices.HandleRef,System.Runtime.InteropServices.HandleRef,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Set Window Pos
            </summary>
            <param name="hwnd"></param>
            <param name="hwndInsertAfter"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="cx"></param>
            <param name="cy"></param>
            <param name="uFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.UnhookWindowsHookEx(System.IntPtr)">
            <summary>
            Release Hook (IntPtr).
            </summary>
            <param name="hookHandle"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.DllGetVersion(Stone.WinUI.Win32Native.DLLVERSIONINFO@)">
            <summary>
            Implemented by many of the Microsoftฎ Windowsฎ Shell dynamic-link libraries 
            (DLLs) to allow applications to obtain DLL-specific version information
            </summary>
            <param name="pdvi">Pointer to a DLLVERSIONINFO structure that receives the 
            version information. The cbSize member must be filled in before calling 
            the function</param>
            <returns>Returns NOERROR if successful, or an OLE-defined error value otherwise</returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.IsThemeActive">
            <summary>
            Tests if a visual style for the current application is active
            </summary>
            <returns>TRUE if a visual style is enabled, and windows with 
            visual styles applied should call OpenThemeData to start using 
            theme drawing services, FALSE otherwise</returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.IsAppThemed">
            <summary>
            Reports whether the current application's user interface 
            displays using visual styles
            </summary>
            <returns>TRUE if the application has a visual style applied,
            FALSE otherwise</returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.OpenThemeData(System.IntPtr,System.String)">
            <summary>
            Opens the theme data for a window and its associated class
            </summary>
            <param name="hwnd">Handle of the window for which theme data 
            is required</param>
            <param name="pszClassList">Pointer to a string that contains 
            a semicolon-separated list of classes</param>
            <returns>OpenThemeData tries to match each class, one at a 
            time, to a class data section in the active theme. If a match 
            is found, an associated HTHEME handle is returned. If no match 
            is found NULL is returned</returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.CloseThemeData(System.IntPtr)">
            <summary>
            Closes the theme data handle
            </summary>
            <param name="hTheme">Handle to a window's specified theme data. 
            Use OpenThemeData to create an HTHEME</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.DrawThemeBackground(System.IntPtr,System.IntPtr,System.Int32,System.Int32,Stone.WinUI.Win32Native.RECT@,Stone.WinUI.Win32Native.RECT@)">
            <summary>
            Draws the background image defined by the visual style for the 
            specified control part
            </summary>
            <param name="hTheme">Handle to a window's specified theme data. 
            Use OpenThemeData to create an hTheme</param>
            <param name="hdc">Handle to a device context (HDC) used for 
            drawing the theme-defined background image</param>
            <param name="iPartId">Value of type int that specifies the part 
            to draw</param>
            <param name="iStateId">Value of type int that specifies the state 
            of the part to draw</param>
            <param name="pRect">Pointer to a RECT structure that contains the 
            rectangle, in logical coordinates, in which the background image 
            is drawn</param>
            <param name="pClipRect">Pointer to a RECT structure that contains 
            a clipping rectangle. This parameter may be set to NULL</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.DrawThemeParentBackground(System.IntPtr,System.IntPtr,Stone.WinUI.Win32Native.RECT@)">
            <summary>
            Draw Theme Parent Background
            </summary>
            <param name="hwnd"></param>
            <param name="hdc"></param>
            <param name="prc"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.CreateSolidBrush(System.Int32)">
            <summary>
            Create solid brush for window default theme.
            </summary>
            <param name="crColor"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.CreatePatternBrush(System.IntPtr)">
            <summary>
            Create gradient brush for xp theme.
            </summary>
            <param name="hBmp"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.DeleteObject(System.IntPtr)">
            <summary>
            Delete bar brush IntPtr.
            </summary>
            <param name="hObject"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            Get value from INI file.
            </summary>
            <param name="section"></param>
            <param name="keyName"></param>
            <param name="defaultValue"></param>
            <param name="retBuilder"></param>
            <param name="size"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.Beep(System.UInt32,System.UInt32)">
            <summary>
            Play System sound beep from window default.
            <para>Example: SHORT=Beep(1200,100), LONG=Beep(1200,1000)</para>
            </summary>
            <param name="frequency">LowValue=LowTone, HighValue=SharpTone</param>
            <param name="duration">How long to play sound.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            Write value to INI file.
            </summary>
            <param name="section"></param>
            <param name="keyName"></param>
            <param name="newValue"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Win32Native.SHAutoComplete(System.IntPtr,System.IntPtr)">
            <summary>
            Set auto complete
            </summary>
            <param name="hwnd"></param>
            <param name="flags"></param>
        </member>
        <member name="T:Stone.WinUI.Win32Native.RECT">
            <summary>
            Internal struct for use with the header style flat only
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Native.RECT.Left">
            <summary>
            left
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Native.RECT.Top">
            <summary>
            top
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Native.RECT.Right">
            <summary>
            right.
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Native.RECT.Bottom">
            <summary>
            bottom
            </summary>
        </member>
        <member name="M:Stone.WinUI.Win32Native.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:Stone.WinUI.Win32Native.RECT.#ctor(System.Drawing.Rectangle)">
            <summary>
            Constructor
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:Stone.WinUI.Win32Native.RECT.ToRectangle">
            <summary>
            Convert to Rectangle
            </summary>
            <returns></returns>
        </member>
        <member name="T:Stone.WinUI.Win32Native.DLLVERSIONINFO">
            <summary>
            Receives dynamic-link library (DLL)-specific version information. 
            It is used with the DllGetVersion function
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Native.DLLVERSIONINFO.cbSize">
            <summary>
            Size of the structure, in bytes. This member must be filled 
            in before calling the function
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Native.DLLVERSIONINFO.dwMajorVersion">
            <summary>
            Major version of the DLL. If the DLL's version is 4.0.950, 
            this value will be 4
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Native.DLLVERSIONINFO.dwMinorVersion">
            <summary>
            Minor version of the DLL. If the DLL's version is 4.0.950, 
            this value will be 0
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Native.DLLVERSIONINFO.dwBuildNumber">
            <summary>
            Build number of the DLL. If the DLL's version is 4.0.950, 
            this value will be 950
            </summary>
        </member>
        <member name="F:Stone.WinUI.Win32Native.DLLVERSIONINFO.dwPlatformID">
            <summary>
            Identifies the platform for which the DLL was built
            </summary>
        </member>
        <member name="T:Stone.WinUI.Renderers.Office2007BlueColorTable">
            <summary>
            Provide Office 2007 Blue Theme colors
            </summary>
        </member>
        <member name="M:Stone.WinUI.Renderers.Office2007BlueColorTable.InitColors(System.Collections.Generic.Dictionary{Stone.WinUI.Renderers.ProfessionalColorTableX.KnownColors,System.Drawing.Color}@)">
            <summary>
            initialize a color Dictionary with defined colors
            </summary>
            <param name="rgbTable">Dictionary with defined colors</param>
        </member>
        <member name="T:Stone.WinUI.AsFileBox">
            <summary>
            Represent as edit box for choose file.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsFileBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsFileBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsFileBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsFileBox.Dispose(System.Boolean)">
            <summary>
            Release resource.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="F:Stone.WinUI.AsFileBox.m_PanelImage">
            <summary>
            Panel image viewer.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsFileBox.GetImageThumbnail(System.Drawing.Image,System.Drawing.Size)">
            <summary>
            Get thumbnail image from destination size.
            </summary>
            <param name="original">Original image</param>
            <param name="destSize">Destination size</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsFileBox.btnExecute_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the btnExecute control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsFileBox.Clear">
            <summary>
            Clear value and text.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsFileBox.SetValue(System.Object)">
            <summary>
            Set value from <see cref="T:System.Object"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsFileBox.SetValue(System.String)">
            <summary>
            Set value from <see cref="T:System.String"/>.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsFileBox.OnAfterKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raise event AfterKeyDown in edit box.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsFileBox.OnAfterDataChanged">
            <summary>
            Raised event AfterDataChanged.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsFileBox.OnButtonEditClick">
            <summary>
            Occur when click button or press FunctionKey.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsFileBox.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Occur after <see cref="P:Stone.WinUI.AsBaseUserControl.RendererType"/> changed.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Stone.WinUI.AsFileBox.m_ImageFromBlobChanged">
            <summary>
            flag นี้จะถูกรีเซ็ตเมื่อ OnEnter และจะเป็น true ต่อเมื่อ user กดเปลี่ยนรูปสำเร็จ
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsFileBox.m_Bytes">
            <summary>
            Raw image data.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsFileBox.m_Image">
            <summary>
            Thumbnail image.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsFileBox.m_OldValue">
            <summary>
            Temporary filename or folder. 
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsFileBox.OnEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Enter"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsFileBox.OnLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Leave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Stone.WinUI.AsFileBox.BrowseFolder">
            <summary>
            Gets or sets a value indicating whether to browse folder instead browse file.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsFileBox.DefaultButtonColor">
            <summary>
            Gets the default color of the button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsFileBox.ReadOnly">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.AsFileBox.ImageFromBlobData">
            <summary>
            Gets or sets a value indicating when true the editbox will be 
            readonly and show image at backgroud, otherwise show normal.
            <para>This property action in AsGridData only.</para>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsFileBox.FilterExtension">
            <summary>
            Filter file extension to display in the dialog box. 
            <example>Example: Image files (bmp, jpg, gif)|*.bmp;*.jpg;*.gif|All files (*.*)|*.*</example>
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsFileBox.InitialDirectory">
            <summary>
            Get or set InitialDirectory (string)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsFileBox.ShowButtonExec">
            <summary>
            Get or set the indicator to show execute button from value 
            by click or press 'Shift' + FunctionKey.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsFileBox.Title">
            <summary>
            Gets or sets the title text to show user at top of open file dialog.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Stone.WinUI.AsFileBox.DialogCustomWidth">
            <summary>
            Get or set picture viewer dialog width when drop down.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsFileBox.IntegralWidth">
            <summary>
            Get or set the dialog dropdown width equal the combo.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsFileBox.BeforeDataChange">
            <summary>
            Occur before data change.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsFileBox.AfterDataChanged">
            <summary>
            Occurs after data changed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsFileBox.ValueChanged">
            <summary>
            Get the wheather value changed from user.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsFileBox.Value">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="T:Stone.WinUI.RendererGridOfficeXP">
            <summary>
            Renderer grid office xp.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererGridOfficeXP.#ctor(Stone.WinUI.AsGridView)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererGridOfficeXP"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOfficeXP.DrawColumnMenuStripButton(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.Rectangle,Stone.WinUI.ColumnStates)">
            <summary>
            Draws the column ContextMenuStrip button.
            </summary>
            <param name="g">The g.</param>
            <param name="colHeaderBackColor">Color of the column header back.</param>
            <param name="triangle">Point array of arrow down</param>
            <param name="rectCol">Column header bounds</param>
            <param name="rectContext">Context button bounds</param>
            <param name="state">Column state</param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOfficeXP.FillRowHeaders(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill row header and left side exclude left-top header.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOfficeXP.FillRowHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Boolean)">
            <summary>
            Fill background at rowheader.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="penBorder"></param>
            <param name="selected"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOfficeXP.FillLeftTopHeader(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill corner left-top at header.
            </summary>
            <param name="g"></param>
            <param name="rectLeftTop"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOfficeXP.FillColumnTopHeader(System.Drawing.Graphics,Stone.WinUI.AsGridColumnTop)">
            <summary>
            Fill background top header.
            </summary>
            <param name="g"></param>
            <param name="top"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOfficeXP.FillColumnHeader(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.AsGridViewColumn,System.Boolean)">
            <summary>
            Fill column header
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="col"></param>
            <param name="selected"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOfficeXP.FillNoneColumnHeader(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill none column header.
            </summary>
            <param name="g"></param>
            <param name="rectFill"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOfficeXP.HighlightRowSelected(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Highlight row selected.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="focused"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOfficeXP.FillLeftBottomFooter(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw left-bottom corner at footer.
            </summary>
            <param name="g"></param>
            <param name="rectLeftBottom"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOfficeXP.FillColumnFooter(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.AsGridViewColumn)">
            <summary>
            Fill column footer.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="col"></param>
        </member>
        <member name="M:Stone.WinUI.RendererGridOfficeXP.FillNoneColumnFooter(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill none column footer.
            </summary>
            <param name="g"></param>
            <param name="rectFill"></param>
        </member>
        <member name="P:Stone.WinUI.RendererGridOfficeXP.Grid">
            <summary>
            Get the parent grid.
            </summary>
            <value></value>
        </member>
        <member name="P:Stone.WinUI.RendererGridOfficeXP.AutoBaseColor">
            <summary>
            Gets the auto color from base color.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsEditBoxActionList">
            <summary>
            Action list of <see cref="T:Stone.WinUI.AsBaseEditBox"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditBoxActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsEditBoxActionList"/> class.
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditBoxActionList.SetProperty(System.String,System.Object)">
            <summary>
            Sets the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditBoxActionList.GetProperty``1(System.String)">
            <summary>
            Gets the property.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditBoxActionList.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem"/> objects contained in the list.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.Design.DesignerActionItem"/> array that contains the items in this list.
            </returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsEditBoxActionList.InvokeAbout">
            <summary>
            Show About form.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxActionList.BackColor">
            <summary>
            Get or set back color of text box.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxActionList.ButtonColor">
            <summary>
            Get or set button color.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxActionList.Field">
            <summary>
            Gets or sets the field.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxActionList.FunctionKey">
            <summary>
            Gets or sets the function key.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxActionList.RendererType">
            <summary>
            Gets or sets the type of the renderer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxActionList.ReadOnly">
            <summary>
            Gets or sets a value indicating whether read only.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxActionList.LookupDisplayFormat">
            <summary>
            Gets or sets a value indicating whether LookupDisplayFormat
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxActionList.IndexString">
            <summary>
            Gets or sets a value indicating whether index string.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxActionList.MasterTable">
            <summary>
            Gets or sets a value indicating whether master table name.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxActionList.ShowButton">
            <summary>
            Gets or sets a value indicating whether [show button].
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxActionList.BrowseFolder">
            <summary>
            Gets or sets a value indicating whether to browse folder instead browse file.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxActionList.ShowButtonExec">
            <summary>
            Gets or sets a value indicating whether show execute button.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxActionList.ComboBoxStyle">
            <summary>
            Gets or sets the control look like combo box.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsEditBoxActionList.ShowData">
            <summary>
            Gets or sets a value indicating whether [show data].
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsBand">
            <summary>
            Sub-container control for <see cref="T:Stone.WinUI.AsNavigator"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsBand"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsBand.InvalidateBand(System.Boolean)">
            <summary>
            Updates the button bounds.
            </summary>
            <param name="onlyButton">if set to <c>true</c> [only button].</param>
        </member>
        <member name="M:Stone.WinUI.AsBand.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsBand.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.
            <para>Hide this property from designer to prevent edit.</para>
            </summary>
            <value></value>
            <returns>
            The <see cref="T:System.Drawing.Point"/> that represents the upper-left corner of the control relative to the upper-left corner of its container.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
            	<IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Stone.WinUI.AsBand.ButtonImage">
            <summary>
            Gets or sets the image at band stack, default size is 20x20.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBand.TooltipText">
            <summary>
            Gets or sets the tooltip text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBand.ImageTransparentColor">
            <summary>
            Get or set the transparent color on the button's image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBand.ShowAtFooter">
            <summary>
            Gets or sets a value indicating whether to show at bottom position of <see cref="T:Stone.WinUI.AsNavigator"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBand.ButtonBounds">
            <summary>
            Gets or sets the button band in 2 states, stack and footer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBand.MouseState">
            <summary>
            Gets or sets the state of the mouse.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsBand.Hidden">
            <summary>
            Gets or sets a value indicating whether this control is hidden when user check changed.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsBand.HiddenChanged">
            <summary>
            Occurs when hidden changed.
            </summary>
        </member>
        <member name="T:Stone.WinUI.RendererCheckBoxOffice2007">
            <summary>
            Renderer check box.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererCheckBoxOffice2007.#ctor(Stone.WinUI.AsCheckBox)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererCheckBoxOffice2007"/> class.
            </summary>
            <param name="checkbox">The checkbox.</param>
        </member>
        <member name="M:Stone.WinUI.RendererCheckBoxOffice2007.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CheckState,Stone.WinUI.ButtonDrawStates)">
            <inheritdoc />
        </member>
        <member name="T:Stone.WinUI.AsTabControl">
            <summary>
            Represent as modern TabControl, supported wizard page.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsTabControl"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="F:Stone.WinUI.AsTabControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsTabControl.ctxMenu">
            <summary>
            Context menu for MdiList.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsTabControl.isRenderWithVisualStyle">
            <summary>
            Checked the application run with visuau style.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsTabControl.m_TabPageMouseDown">
            <summary>
            Temp tab page after mouse down and will be free after mouse up.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsTabControl.m_HeaderRectangle">
            <summary>
            Area of all header 
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            On Key Down
            </summary>
            <param name="ke"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            On mouse down.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnMouseEnter(System.EventArgs)">
            <summary>
            On Mouse Enter.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            On mouse move.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnMouseLeave(System.EventArgs)">
            <summary>
            On Mouse Leave
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            On Selected Index changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnSelected(System.Windows.Forms.TabControlEventArgs)">
            <summary>
            On TabSelected.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnFontChanged(System.EventArgs)">
            <summary>
            On Font changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Set default tabPage visualstyle.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>
            On Control Removed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnHandleCreated(System.EventArgs)">
            <summary>
            On Handle Created.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            On Paint
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            On Paint Background
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnSizeChanged(System.EventArgs)">
            <summary>
            On size changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            On system color changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Process a command key.
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.ProcessMnemonic(System.Char)">
            <summary>
            Add feature Mnemonic when user press key.
            </summary>
            <param name="charCode"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Windows process.
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.setTabPageVisualStyle(System.Boolean)">
            <summary>
            Set all tabPage to use visual style.
            </summary>
            <param name="useVisualStyle"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.setAreaToDraw(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
            <summary>
            Set area of header and body.
            </summary>
            <param name="rc">Client Rectangle</param>
            <param name="rt">TabHeader Rectangle</param>
            <param name="rh">Header Rectangle</param>
            <param name="rb">Border Rectangle</param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.DrawTabs(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Process of drawing.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.DrawBorderDisplay(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draw border around <see cref="P:Stone.WinUI.AsTabControl.DisplayRectangle"/>.
            </summary>
            <param name="g">The g.</param>
            <param name="rb">BorderRectangle</param>
            <param name="rt">TabHeader Rectangle</param>
            <param name="index">Selected Index</param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.DrawFrameTabActive(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Single)">
            <summary>
            Draw frame of tab active.
            </summary>
            <param name="g"></param>
            <param name="rb">BorderRectangle</param>
            <param name="rd">DisplayRectangle</param>
            <param name="angle"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.FillBackgroundTransparent(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill header Transparent when parent backcolor is.
            </summary>
            <param name="g"></param>
            <param name="clipRect"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.FillBackgroundHeader(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw background color at header area.
            </summary>
            <param name="g"></param>
            <param name="rh"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.DrawTab(System.Drawing.Graphics,System.Windows.Forms.TabPage,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Draw head tab
            </summary>
            <param name="g"></param>
            <param name="tabPage"></param>
            <param name="index"></param>
            <param name="rb">BorderRectangle</param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.GetTabRectExcel(System.Drawing.Rectangle,System.Windows.Forms.TabAlignment,System.Boolean)">
            <summary>
            Gets the tab rect excel.
            </summary>
            <param name="rectTab">The rect tab.</param>
            <param name="alignment">The alignment.</param>
            <param name="selected">Tab currently selected.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.GetTabRect(System.Int32)">
            <summary>
            Get tab rectangle.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.AdjustSelectedTab(System.Drawing.Rectangle)">
            <summary>
            Adjust selected tab rectangle.
            </summary>
            <param name="rt"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.GetTabPageFromID(System.Int32)">
            <summary>
            Get <see cref="T:System.Windows.Forms.TabPage"/> from specific text caption.
            </summary>
            <param name="formID"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.GetTabPageFromMousePoint(System.Drawing.Point)">
            <summary>
            Get tabpage from mouse point.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.GetInvertedColor(System.Drawing.Color)">
            <summary>
            Get fore color and sort arrow when set BaseColor dark.
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.AdjustSpinLayout">
            <summary>
            Adjust spin location.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.GetHeadTabPoint(System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Get head tab array point.
            </summary>
            <param name="rectHead"></param>
            <param name="edgeLeft">How many curve left, default=2</param>
            <param name="edgeRight">How many curve right, default=2</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.OnFormAdded(Stone.WinUI.AsMdiFormAddEventArgs)">
            <summary>
            Raises the <see cref="E:FormAdded"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsMdiFormAddEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.AddForm(Stone.WinUI.Forms.BaseForm,System.String,System.String)">
            <summary>
            Add the <see cref="T:Stone.WinUI.Forms.BaseForm"/> 
            as <see cref="T:System.Windows.Forms.Control"/> into <see cref="T:System.Windows.Forms.TabPage"/>.
            </summary>
            <param name="form"></param>
            <param name="caption"></param>
            <param name="menuID"></param>
            <exception cref="T:System.NotSupportedException">If set <see cref="P:Stone.WinUI.AsTabControl.MdiMode"/> = false.</exception>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.pageOfMdiChildForm_BackColorChanged(System.Object,System.EventArgs)">
            <summary>
            Change Form.BackColor when <see cref="P:Stone.WinUI.AsTabControl.MdiMode"/> = true.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.childForm_Closing(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Confirm before close
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.GetChildForm(System.String)">
            <summary>
            Gets the child form.
            </summary>
            <param name="menuID">The menu ID.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException">If set <see cref="P:Stone.WinUI.AsTabControl.MdiMode"/> = false.</exception>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.ShowTab(System.Windows.Forms.TabPage)">
            <summary>
            Show hidden <see cref="T:System.Windows.Forms.TabPage"/> at current index.
            </summary>
            <param name="tab"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.HideTab(System.Windows.Forms.TabPage)">
            <summary>
            Hide specific <see cref="T:System.Windows.Forms.TabPage"/>.
            </summary>
            <param name="tab"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.ResetTabPageBackColor">
            <summary>
            Reset back color all tab page depend on each <see cref="T:Stone.WinUI.RendererTypes"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.ResetTabPageBackColor(System.Drawing.Color)">
            <summary>
            Force reset back color of all tab pages to specific color.
            </summary>
            <param name="tabPageBackColor"></param>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.spinArrow_ButtonClick(System.Object,Stone.WinUI.SpinArrowEventArgs)">
            <summary>
            Button elements in spin arrow has been clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.Renderer">
            <summary>
            Gets or sets the customs renderer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.TabPages">
            <summary>
            Collection of TabPages
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.MdiMode">
            <summary>
            Get or set the MdiMode(show list,close button) if set to true,
            otherwise show left-right arrow.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.ActiveChildForm">
            <summary>
            Gets active child form.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.BaseForms">
            <summary>
            Gets the base forms collection when <see cref="P:Stone.WinUI.AsTabControl.MdiMode"/> = true.
            </summary>
            <value>The base forms.</value>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.TabHeaderFillBackground">
            <summary>
            Get or set the wheather to draw background header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.Appearance">
            <summary>
            Get or set the visual appearance tab, in <see cref="F:Stone.WinUI.RendererTypes.OfficeXP"/>
            the control still owner draw mode.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.EnableVisualStyle">
            <summary>
            Get or set the indicator to on or off visual style.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.SizeMode">
            <summary>
            Get or set the way's that the control tab are sized.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.ScrollPosition">
            <summary>
            Internal get scroll position.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.BehindRender">
            <summary>
            Keep RendererTypes in this property because B.. is before C.. 
            Controls.Add(..) on runtime mode. This could help OnControlAdd 
            set tabPage backcolor is correct.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.CreateParams">
            <summary>
            Create Params.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.DisplayRectangle">
            <summary>
            Get display rectangle
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.ShowTabHeader">
            <summary>
            Get or set the wheather indicators to show tab header or hide it.
            This feature usefull for wizard and navigate by keyboard will be disable.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.TabLineHeaderOnly">
            <summary>
            Get or set the wheather to draw top line header only or all frame.
            </summary>
            <exception cref="T:System.NotSupportedException">When Alignment != Top</exception>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.AutoTabChildColor">
            <summary>
            Get or set the color of all tab page color depend on <see cref="P:Stone.WinUI.AsTabControl.RendererType"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.HotItemIndex">
            <summary>
            Get index of hot item <see cref="T:System.Windows.Forms.TabPage"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.AllowTabReorder">
            <summary>
            Get or set the tab page can reorder from mouse move at runtime
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.ShowBorder">
            <summary>
            Get or set the wheather to show or hide control border.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.RendererTypeSub">
            <summary>
            Get or set the sub style.
            </summary>
            <exception cref="T:System.NotSupportedException">RendererTypesSub.VS2005 supported sizemode normal only.</exception>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.RendererType">
            <summary>
            Gets or sets render mode.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.BaseColor">
            <summary>
            Get or set the theme color.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsTabControl.FormAdded">
            <summary>
            Occurs when form added.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.WarnBeforeCloseForm">
            <summary>
            Get or set the indicator in <see cref="P:Stone.WinUI.AsTabControl.MdiMode"/> to show confirm dialog before close form.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsTabControl.NativeUpDown">
            <summary>
            Native updown.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.NativeUpDown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsTabControl.NativeUpDown"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsTabControl.NativeUpDown.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Window process.
            </summary>
            <param name="m"></param>
        </member>
        <member name="P:Stone.WinUI.AsTabControl.NativeUpDown.Bounds">
            <summary>
            Internal bounds.
            </summary>
        </member>
        <member name="T:Stone.WinUI.VScrollBarBasic">
            <summary>
            Vertical scroll bar.
            </summary>
        </member>
        <member name="M:Stone.WinUI.VScrollBarBasic.#ctor">
            <summary>
            Innitialized vertical scroll bar.
            </summary>
        </member>
        <member name="M:Stone.WinUI.VScrollBarBasic.AsVScrollBar_GotFocus(System.Object,System.EventArgs)">
            <summary>
            Force focus to parent
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Stone.WinUI.VScrollBarBasic.Width">
            <summary>
            Get or set the width of control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.VScrollBarBasic.Height">
            <summary>
            Get or set the control's height.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsGridDataColumnCollectionEditor">
            <summary>
            Class created so we can force an invalidation/update 
            on the control when the column editor returns.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridDataColumnCollectionEditor.#ctor(System.Type)">
            <summary>
            Default Constructor for custom column collection editor
            </summary>
            <param name="type"></param>
        </member>
        <member name="F:Stone.WinUI.Design.AsGridDataColumnCollectionEditor.parent">
            <summary>
            Internal parent host control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridDataColumnCollectionEditor.CreateInstance(System.Type)">
            <summary>
            After create instance in collection editor, set parent to column member.
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridDataColumnCollectionEditor.CreateNewItemTypes">
            <summary>
            Create new item types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridDataColumnCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit a value in collection editor
            </summary>
            <param name="context"></param>
            <param name="isp"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridDataColumnCollectionEditor.GetDisplayText(System.Object)">
            <summary>
            Retrieves the display text for the given list item.
            </summary>
            <param name="value">The list item for which to retrieve display text.</param>
            <returns>
            The display text for <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridDataColumnCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get modal dialog.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridDataColumnCollectionEditor.CreateCollectionForm">
            <summary>
            Creates a new form to display and edit the current collection
            </summary>
            <returns>An instance of CollectionEditor.CollectionForm to provide as the 
            user interface for editing the collection</returns>
        </member>
        <member name="T:Stone.WinUI.Renderers.Office2003OliveColorTable">
            <inheritdoc />
        </member>
        <member name="M:Stone.WinUI.Renderers.Office2003OliveColorTable.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonCheckedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonCheckedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonCheckedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonCheckedHighlight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonCheckedHighlightBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonPressedBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonPressedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonPressedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonPressedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonPressedHighlight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonPressedHighlightBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonSelectedBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonSelectedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonSelectedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonSelectedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonSelectedHighlight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ButtonSelectedHighlightBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.CheckBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.CheckPressedBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.CheckSelectedBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.GripDark">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.GripLight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ImageMarginGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ImageMarginGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ImageMarginGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ImageMarginRevealedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ImageMarginRevealedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ImageMarginRevealedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.MenuBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.MenuItemBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.MenuItemPressedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.MenuItemPressedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.MenuItemPressedGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.MenuItemSelected">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.MenuItemSelectedGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.MenuItemSelectedGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.MenuStripGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.MenuStripGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.OverflowButtonGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.OverflowButtonGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.OverflowButtonGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.RaftingContainerGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.RaftingContainerGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.SeparatorDark">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.SeparatorLight">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.StatusStripGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.StatusStripGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ToolStripBorder">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ToolStripContentPanelGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ToolStripContentPanelGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ToolStripDropDownBackground">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ToolStripGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ToolStripGradientEnd">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ToolStripGradientMiddle">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ToolStripPanelGradientBegin">
            <inheritdoc />
        </member>
        <member name="P:Stone.WinUI.Renderers.Office2003OliveColorTable.ToolStripPanelGradientEnd">
            <inheritdoc />
        </member>
        <member name="T:Stone.WinUI.AsButton">
            <summary>
            Represent as button control.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsButton.SWITCH_MAX_STEP">
            <summary>
            Max step = 4.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsButton"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsButton.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ButtonBase"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="F:Stone.WinUI.AsButton.m_bPressSwitch">
            <summary>
            Press switch, none arrow dropdown.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsButton.m_bInEditBox">
            <summary>
            Button located in EditBox
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsButton.m_bEditboxCombo">
            <summary>
            Button style combo
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsButton.SPACE_BEGIN_X">
            <summary>
            X cursor for begining draw DropDown arrow, Default = 12.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsButton.SPACE_DROPDOWN">
            <summary>
            Space for split button default = 16
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsButton.buttonEditorInGrid">
            <summary>
            Act as button editor in <see cref="T:Stone.WinUI.AsGridData"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsButton.SetDisplayPoint(System.Drawing.Point@,System.Int32,System.Int32)">
            <summary>
            Set display point for drop down or combo.
            </summary>
            <param name="point"></param>
            <param name="iWidth"></param>
            <param name="iHeight"></param>
        </member>
        <member name="M:Stone.WinUI.AsButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsButton.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            On Key Down
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButton.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            On Key up
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButton.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
            <param name="proposedSize">The custom-sized area for a control.</param>
            <returns>
            An ordered pair of type <see cref="T:System.Drawing.Size"/> representing the width and height of a rectangle.
            </returns>
        </member>
        <member name="M:Stone.WinUI.AsButton.NotifyDefault(System.Boolean)">
            <summary>
            Notify the button is the default.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Stone.WinUI.AsButton.OnLostFocus(System.EventArgs)">
            <summary>
            Return nomal state when lost focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButton.OnMouseEnter(System.EventArgs)">
            <summary>
            On Mouse Enter
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButton.OnMouseLeave(System.EventArgs)">
            <summary>
            On Mouse Leave
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            On Mouse Down
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            On Mouse Up
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            On Mouse Move
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButton.OnGotFocus(System.EventArgs)">
            <summary>
            On Got Focus
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButton.OnEnabledChanged(System.EventArgs)">
            <summary>
            On Enabled changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButton.OnCreateControl">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.Control.CreateControl"/> method.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsButton.OnClick(System.EventArgs)">
            <summary>
            On Click
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButton.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:CheckedChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsButton.OnDoubleClick(System.EventArgs)">
            <summary>
            On Double Click
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsButton.DrawArrowDropDown(System.Drawing.Graphics,System.Drawing.Rectangle,Stone.WinUI.ButtonDrawStates)">
            <summary>
            Draw arrow
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="states"></param>
        </member>
        <member name="E:Stone.WinUI.AsButton.ColorChanged">
            <summary>
            Occur after selected color changed.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsButton.CheckedChanged">
            <summary>
            Occurs when checked or switch status changed.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsButton.DropdownOpening">
            <summary>
            Occurs when dropdown opening.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsButton.DropdownClosed">
            <summary>
            Occurs when dropdown closed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.SwitchMaxStep">
            <summary>
            Gets the switch max step = 4.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.SwitchStep">
            <summary>
            Gets the switch step.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.Renderer">
            <summary>
            Gets or sets the customs renderer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.MouseState">
            <summary>
            Gets the mouse state from button draw state.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.ButtonBounds">
            <summary>
            Get button bounds.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.BoundsLeft">
            <summary>
            Get area of button tex and image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.BoundsRight">
            <summary>
            Get area of arrow dropdown.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.RadiusCorner">
            <summary>
            Get or set the radius corner for <see cref="T:Stone.WinUI.RendererTypes"/> = AeroGlass, Office2007.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.TextDescription">
            <summary>
            Get or set the description text below normal text.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.CommandLinkOutline">
            <summary>
            Get or set the outline dot in none action state for <see cref="F:Stone.WinUI.ButtonTypes.CommandLink"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.SelectedColor">
            <summary>
            Get or set the color from user picked.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.BaseColor">
            <summary>
            Get or set the color for button surface. Use auto color set to <see cref="P:System.Drawing.Color.Transparent"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.RendererType">
            <summary>
            Get or set button themes.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.ButtonDrawState">
            <summary>
            The wheather button state.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.Checked">
            <summary>
            Get or set the checked state for <see cref="F:Stone.WinUI.ButtonTypes.Check"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.DisplayTextType">
            <summary>
            Get or set the indicator to show text on button surface.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.SwitchStyle">
            <summary>
            Gets or sets the switch style when <see cref="P:Stone.WinUI.AsButton.ButtonType"/> = Switch.
            </summary>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Stone.WinUI.AsButton.ButtonType">
            <summary>
            Get or set button type.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.AutoEllipsis">
            <summary>
            Gets or sets a value indicating whether the ellipsis character (...) 
            appears at the right edge of the control, denoting that the control text 
            extends beyond the specified length of the control.
            </summary>
            <returns>
            true if the additional label text is to be indicated by an ellipsis; 
            otherwise, false. The default is true.
            </returns>
        </member>
        <member name="P:Stone.WinUI.AsButton.ImageAlign">
            <summary>
            Override a new default value of ImageAlign
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.Image">
            <summary>
            Get or set the image that will be display on the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.ImageTransparentColor">
            <summary>
            Get or set the transparent color on the button's image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.DropdownArrow">
            <summary>
            Show drop down arrow if context menu is used.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsButton.DropdownMenu">
            <summary>
            Gets or sets the dropdown menu.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsGridViewColumnCollectionEditor">
            <summary>
            Class created so we can force an invalidation/update 
            on the control when the column editor returns.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewColumnCollectionEditor.#ctor(System.Type)">
            <summary>
            Default Constructor for custom column collection editor
            </summary>
            <param name="type"></param>
        </member>
        <member name="F:Stone.WinUI.Design.AsGridViewColumnCollectionEditor.parent">
            <summary>
            Internal parent host control.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewColumnCollectionEditor.CreateInstance(System.Type)">
            <summary>
            After create instance in collection editor, set parent to column member.
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewColumnCollectionEditor.CreateNewItemTypes">
            <summary>
            Create new item types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewColumnCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit a value in collection editor
            </summary>
            <param name="context"></param>
            <param name="isp"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewColumnCollectionEditor.GetDisplayText(System.Object)">
            <summary>
            Retrieves the display text for the given list item.
            </summary>
            <param name="value">The list item for which to retrieve display text.</param>
            <returns>
            The display text for <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewColumnCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get modal dialog.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsGridViewColumnCollectionEditor.CreateCollectionForm">
            <summary>
            Creates a new form to display and edit the current collection
            </summary>
            <returns>An instance of CollectionEditor.CollectionForm to provide as the 
            user interface for editing the collection</returns>
        </member>
        <member name="T:Stone.WinUI.AsGridData">
            <summary>
            Represent as grid edit data.
            </summary>
        </member>
        <member name="F:Stone.WinUI.AsGridData.FLD_ROWINDEX">
            <summary>
            Field name to set index of row internally. 1st row start from 1.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridData"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridData.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control"/> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.Initialized">
            <summary>
            Initializeds this instance.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnBeforeAddNewRow(Stone.WinUI.AsGridDataNewRowEventArgs)">
            <summary>
            Raise event OnBeforeAddNewRow.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnBeforeEditBoxActive(Stone.WinUI.AsGridEditBoxActiveEventArgs)">
            <summary>
            Raise event BeforeEditBoxActive.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnKeyDownEditBox(Stone.WinUI.AsGridKeyEventArgs)">
            <summary>
            Raises the <see cref="E:KeyDownEditBox"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridKeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnNewRowAutoValue(Stone.WinUI.AsGridDataNewRowEventArgs)">
            <summary>
            Raises the <see cref="E:NewRowAutoValue"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridDataNewRowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnSearchClick(Stone.WinUI.AsGridSearchClickEventArgs)">
            <summary>
            Raises the <see cref="E:SearchClick"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridSearchClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnQuickSearching(Stone.WinUI.QuickSearchingEventArgs)">
            <summary>
            Raises the <see cref="E:QuickSearching"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.QuickSearchingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnQuickSearched(Stone.WinUI.QuickSearchedEventArgs)">
            <summary>
            Raises the <see cref="E:QuickSearched"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.QuickSearchedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnAfterAddNewRow(Stone.WinUI.AsGridDataNewRowEventArgs)">
            <summary>
            Raised event <see cref="E:Stone.WinUI.AsGridData.AfterAddNewRow"/>.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.m_BaseBox_AfterDataChanged(System.Object,Stone.WinUI.DataChangeEventArgs)">
            <summary>
            Handles the AfterDataChanged event of the m_BaseBox control.
            This event raised in OnLeave of m_BaseBox.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Stone.WinUI.DataChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.m_BaseBox_AfterKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            EditBox AfterKeyDown.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.m_BaseBox_ButtonClick(System.Object,System.EventArgs)">
            <summary>
            Implement event on <see cref="E:Stone.WinUI.AsGridData.SearchClick"/>.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.m_SearchBox_QuickSearching(System.Object,Stone.WinUI.QuickSearchingEventArgs)">
            <summary>
            Handles the <see cref="E:Stone.WinUI.AsGridData.QuickSearching"/> event of the <see cref="T:Stone.WinUI.AsSearchBox"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Stone.WinUI.QuickSearchingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.m_SearchBox_QuickSearched(System.Object,Stone.WinUI.QuickSearchedEventArgs)">
            <summary>
            Handles the QuickSearched event of the m_SearchBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Stone.WinUI.QuickSearchedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Stone.WinUI.AsGridData.m_ShiftTAB">
            <summary>
            Press Shift+TAB in edit box, default is false.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridData.ResetFilterAllColumn">
            <summary>
            Reset all column filter.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridData.SetRowData(System.Data.DataRowView,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Set the <see cref="T:System.Data.DataRowView"/> to new value with specific collection of keys and values
            (see example).
            </summary>
            <param name="row">The row.</param>
            <param name="fldAndValue">The FLD and value.</param>
            <returns>True when success, otherwise false.</returns>
            <example>Set new value to the specific <see cref="T:System.Data.DataRowView"/> on event <see cref="E:SearchClick"/>.
            <code lang="cs">
            if (frm.ShowDialog() == DialogResult.OK)
            {
                //...
                Dictionary&lt;string, object&gt; dict = new Dictionary&lt;string, object&gt;();
                dict.Add("ProductCode", frm.SelectedRow["Code"]);
                dict.Add("ProductName", frm.SelectedRow["NameTh"]);
                dict.Add("UnitCode", frm.SelectedRow["StockUnit"]);
            
                this.asGridData1.SetRowData(e.RowView, dict);
            }
            </code>
            <code lang="vbnet">
            If (frm.ShowDialog() = Windows.Forms.DialogResult.OK) Then
                '...
                Dim dict As New Dictionary(Of String, Object)
                dict.Add("ProductCode", frm.SelectedRow("Code"))
                dict.Add("ProductName", frm.SelectedRow("NameTh"))
                dict.Add("UnitCode", frm.SelectedRow("StockUnit"))
                
                Me.AsGridData1.SetRowData(e.RowView, dict)
            End If
            </code>
            </example>
        </member>
        <member name="M:Stone.WinUI.AsGridData.EditBoxShowAt(System.String,System.Int32)">
            <summary>
            Show edit box at specific.
            <para>If cannot go to destination, it will try go to possible next.</para>
            </summary>
            <param name="field"></param>
            <param name="rowIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridData.BeginEditNewRow">
            <summary>
            Begins edit procedure and trick event <see cref="E:Stone.WinUI.AsGridData.AfterAddNewRow"/>.
            If cancel return null, otherwise return <see cref="T:System.Data.DataRowView"/> 
            in BeginEdit mode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridData.EndEditNewRow(System.Data.DataRowView)">
            <summary>
            Finished edit row.
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.addNewRow">
            <summary>
            Add new row internal
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridData.EditBoxShow(Stone.WinUI.AsGridDataColumn,System.Int32)">
            <summary>
            Show EditBox control at specific column and row index.
            </summary>
            <param name="col"></param>
            <param name="rowIndex">at Row</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridData.EditBoxHide">
            <summary>
            Hide active edit box.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridData.TryChangeData(Stone.WinUI.AsBaseEditBox,System.Int32,System.Int32)">
            <summary>
            Change data from EditBox has 2 ways.
            <para>1. From Enter-Up-Down key.</para>
            <para>2. From mouse down another point but in grid.</para>
            </summary>
            <param name="box"></param>
            <param name="colIndex"></param>
            <param name="rowIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridData.DeleteRowBlankBeforeSave">
            <summary>
            Delete row is not contain data in <see cref="P:Stone.WinUI.AsGridData.ColumnKeyField"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridData.DeleteAllRows">
            <summary>
            Ask before delete all data in grid.
            </summary>
            <returns>Number of rows was deleted.
            Return -1 is user canceld delete.</returns>
        </member>
        <member name="M:Stone.WinUI.AsGridData.CreateAutoColumnFromDatasource">
            <summary>
            Create auto column from datasource.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridData.SetCustomFormatText(Stone.WinUI.AsGridViewColumn,System.String)">
            <summary>
            Override when ColumnFormat = Text but EditBoxStyle = LookupBox.
            </summary>
            <param name="col"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnDataSourceChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DataSourceChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Processes a command key.
            </summary>
            <param name="msg">A <see cref="T:System.Windows.Forms.Message"/>, passed by reference, that represents the window message to process.</param>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values that represents the key to process.</param>
            <returns>
            true if the character was processed by the control; otherwise, false.
            </returns>
        </member>
        <member name="M:Stone.WinUI.AsGridData.ProcessBeforeMouseDown(System.Windows.Forms.MouseEventArgs,System.Int32@,System.Int32@,System.Drawing.Point,Stone.WinUI.ListStates,Stone.WinUI.ListRegions)">
            <summary>
            Hook to OnMouseDown.
            <para>Return true if pass-throught normal process, otherwise false to by-pass event OnMouseDown.</para>
            </summary>
            <param name="e"></param>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <param name="ptCell"></param>
            <param name="state"></param>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="F:Stone.WinUI.AsGridData.m_EnterKeyFromBox">
            <summary>
            Flag to know this is return keys from last edit box
            and try to show at new position.  After try first it reset to false.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridData.ToggleCheckBox(System.Int32,System.Int32)">
            <summary>
            Toggle check box state at specific row/col index.
            </summary>
            <param name="nRowIndex"></param>
            <param name="nColIndex"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.ToggleCheckBox(System.String,System.Boolean)">
            <summary>
            Set checkbox-column all rows to checked or none.
            <para>Notice: This method does not raise the <see cref="E:RowCheckedChanged"/> event.</para>
            </summary>
            <param name="fieldName"></param>
            <param name="bSelectAll"></param>
            <returns>True if toggle success.</returns>
        </member>
        <member name="M:Stone.WinUI.AsGridData.DeleteRowAt(System.Int32)">
            <summary>
            Delete row at specific index.
            </summary>
            <param name="nRowIndex"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.InsertRowAt(System.Int32)">
            <summary>
            Insert row at specific index.
            </summary>
            <param name="atIndex"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnColumnResizing(Stone.WinUI.AsGridColumnResizingEventArgs)">
            <summary>
            Raises the <see cref="E:ColumnResizing"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.AsGridColumnResizingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnRendererTypeChanged(System.EventArgs)">
            <summary>
            Occur after <see cref="P:Stone.WinUI.AsBaseControl.RendererType"/> changed.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            On Scroll.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            On KeyDown, set handled to true.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            On KeyPress, set handled to true.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Leave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridData.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="E:Stone.WinUI.AsGridData.SearchClick">
            <summary>
            Occured when search box clicked.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridData.QuickSearching">
            <summary>
            Occur when <see cref="P:Stone.WinUI.AsGridDataColumn.AllowQuickSearch"/> set to true and user typing in text box.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridData.QuickSearched">
            <summary>
            Occurs when <see cref="P:Stone.WinUI.AsGridDataColumn.AllowQuickSearch"/> is true and user selected new value.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridData.KeyDownEditBox">
            <summary>
            Occured when key down in edit box.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridData.BeforeAddNewRow">
            <summary>
            Occurs before add new row to grid.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridData.AfterAddNewRow">
            <summary>
            Occurs after add new row to grid.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridData.NewRowAutoValue">
            <summary>
            Occurs before commit new <see cref="T:System.Data.DataRowView"/> to grid.
            Use this event to set default value, increase seed 
            at primary <see cref="T:System.Data.DataColumn"/>.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsGridData.BeforeEditBoxActive">
            <summary>
            Occur when edit box being active.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridData.AllowInsert">
            <summary>
            Get or set the wheather to allow insert row in grid.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridData.AllowSort">
            <summary>
            Allow column sorting.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridData.AllowDelete">
            <summary>
            Get or set the wheather indicator to allow delete row in the control.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridData.FullColumnSelect">
            <summary>
            Get or set the wheather to highlight full column select like FullRowSelect
            but set to false no fill color.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridData.ComboBoxStyle">
            <summary>
            Gets or sets the editbox to show as combox box style when true, default is false.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridData.ButtonColor">
            <summary>
            Gets or sets the color of EditBox button surface.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridData.ColumnKeyField">
            <summary>
            Get or set field name for a column must be data. 
            This property cannot leave blank.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridData.Columns">
            <summary>
            Get the collection of columns.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridData.EditKeyMode">
            <summary>
            Gets or sets the keys to edit mode.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridData.FunctionKey">
            <summary>
            Get or set the function key for edit box in grid, default=F4
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridData.HotColorTextBox">
            <summary>
            Get or set hot back color when edit box active.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridData.ReadOnly">
            <summary>
            Get or set all columns to readonly when true, otherwise false.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridData.ViewMode">
            <summary>
            Get or set the control to viewing or editing mode.
            If true the edit box will hide.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridData.CanAddNewRow">
            <summary>
            Get the wheather to know data in last row not blank in <see cref="P:Stone.WinUI.AsGridData.ColumnKeyField"/>.
            If datasouce empty or last row in above rules then return true, otherwise return false.
            This accessor trick event <see cref="E:Stone.WinUI.AsGridData.BeforeAddNewRow"/>.
            </summary>
        </member>
        <member name="T:Stone.WinUI.TextEditBox">
            <summary>
            Base class for TextEdit Box.
            Event: Enter->KeyDown->KeyPress->TextChanged->Leave.
            </summary>
        </member>
        <member name="M:Stone.WinUI.TextEditBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.TextEditBox"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.TextEditBox.OnCutCopyPaste(Stone.WinUI.CutCopyPasteEventArgs)">
            <summary>
            Raises the <see cref="E:CutCopyPaste"/> event.
            </summary>
            <param name="e">The <see cref="T:Stone.WinUI.CutCopyPasteEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.TextEditBox.IsInputChar(System.Char)">
            <summary>
            Determines if a character is an input character that the control recognizes.
            </summary>
            <param name="charCode">The character to test.</param>
            <returns>
            true if the character should be sent directly to the control and not preprocessed; otherwise, false.
            </returns>
        </member>
        <member name="M:Stone.WinUI.TextEditBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.TextEditBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyPress"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Stone.WinUI.TextEditBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Windows Process Message.
            </summary>
            <param name="m"></param>
        </member>
        <member name="E:Stone.WinUI.TextEditBox.CutCopyPaste">
            <summary>
            Occurs when cut copy paste.
            </summary>
        </member>
        <member name="P:Stone.WinUI.TextEditBox.userPressChar">
            <summary>
            User key press or create new char(s), OnEnter will be reset to false.
            This flag useful in <see cref="T:Stone.WinUI.AsBaseEditBox"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.TextEditBox.userChangedText">
            <summary>
            Text Changed or not, OnEnter will be reset to false.
            This flag useful in <see cref="T:Stone.WinUI.AsBaseEditBox"/>.
            </summary>
        </member>
        <member name="P:Stone.WinUI.TextEditBox.BorderColor">
            <summary>
            Get or set the color of the border to display all times. 
            To remove or go back to original-style set to Transparent.
            </summary>
        </member>
        <member name="P:Stone.WinUI.TextEditBox.PromptText">
            <summary>
            Gets or sets the prompt text.
            </summary>
        </member>
        <member name="T:Stone.WinUI.DataDateChangeEventArgs">
            <summary>
            EventArgs for <see cref="T:System.DateTime"/> change.
            </summary>
        </member>
        <member name="M:Stone.WinUI.DataDateChangeEventArgs.#ctor">
            <summary>
            Innitialized.
            </summary>
        </member>
        <member name="P:Stone.WinUI.DataDateChangeEventArgs.NewValue">
            <summary>
            Get new value <see cref="T:System.DateTime"/> data.
            </summary>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOffice2007.#ctor(Stone.WinUI.AsTabControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.RendererTabControlOffice2007"/> class.
            </summary>
            <param name="tabControl">The tab.</param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOffice2007.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw border around control.
            </summary>
            <param name="g">The g.</param>
            <param name="clientRect">The client rect.</param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOffice2007.DrawTabHeader(System.Drawing.Graphics,System.Windows.Forms.TabPage,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Point[]@)">
            <summary>
            Draws the tab.
            </summary>
            <param name="g">Device Context</param>
            <param name="tabPage">The tab page.</param>
            <param name="index">The index.</param>
            <param name="headerRect">The header rect.</param>
            <param name="pageBodyRect">The page body rect.</param>
            <param name="selected">if set to <c>true</c> [selected].</param>
            <param name="hoted">if set to <c>true</c> [hoted].</param>
            <param name="foreColorIfDark">The fore color if dark.</param>
            <param name="ptsFocus">The point array to draw focus.</param>
            <returns>ForeColor</returns>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOffice2007.DrawFrameTabActive(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Single)">
            <summary>
            Draw frame active tab.
            </summary>
            <param name="g"></param>
            <param name="rb">BorderRectangle</param>
            <param name="rd">DisplayRectangle</param>
            <param name="angle"></param>
        </member>
        <member name="M:Stone.WinUI.RendererTabControlOffice2007.DrawBorderTabActive(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draw border around active tab.
            </summary>
            <param name="g">The g.</param>
            <param name="rb">BorderRectangle</param>
            <param name="rt">TabHeader Rectangle</param>
            <param name="index">Selected Index</param>
        </member>
        <member name="T:Stone.WinUI.AsSplitter">
            <summary>
            Represent a splitter that enables the user to resize docked controls.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsSplitter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsSplitter"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsSplitter.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="F:Stone.WinUI.AsSplitter.isVertical">
            <summary>
            The splitter is vertical or horizontal.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsSplitter.OnExpandChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExpandChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsSplitter.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            On Mouse Move.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsSplitter.OnMouseHover(System.EventArgs)">
            <summary>
            On mouse hover.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsSplitter.OnMouseLeave(System.EventArgs)">
            <summary>
            On mouse leave.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsSplitter.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            On Mouse Down.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsSplitter.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            On paint
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Stone.WinUI.AsSplitter.m_TimerAnimate_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the m_TimerAnimate control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Stone.WinUI.AsSplitter.DrawHotTracking(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw hot tracking.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
        </member>
        <member name="M:Stone.WinUI.AsSplitter.DrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draw the background surface.
            </summary>
            <param name="g"></param>
            <param name="clientRect"></param>
            <param name="vertical"></param>
        </member>
        <member name="M:Stone.WinUI.AsSplitter.DrawGrip(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draw grip style.
            </summary>
            <param name="g"></param>
            <param name="clientRect"></param>
            <param name="vertical"></param>
        </member>
        <member name="M:Stone.WinUI.AsSplitter.DrawGripIndicator(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draw direction of grip.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="vertical"></param>
        </member>
        <member name="P:Stone.WinUI.AsSplitter.IsHot">
            <summary>
            Get or set the hot indicator when mouse over 
            and return to normal state after mouse leave.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSplitter.HiddenControl">
            <summary>
            Get or set the <see cref="T:System.Windows.Forms.Control"/> to hide when expand the splitter.
            </summary>
        </member>
        <member name="E:Stone.WinUI.AsSplitter.ExpandChanged">
            <summary>
            Occurs when expand changed.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSplitter.Expand">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Stone.WinUI.AsSplitter"/> is expand.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSplitter.Dock">
            <summary>
            Get or set Dock Style.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSplitter.GripStyle">
            <summary>
            Get or set the handle style.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSplitter.GripRect">
            <summary>
            Get the GripRect (Rectangle)
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSplitter.Animation">
            <summary>
            Get or set the indicator to use animation when collapse and expand.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSplitter.AnimationStep">
            <summary>
            Get or set the Animation step, greater is faster.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSplitter.HotTracking">
            <summary>
            Get or set the indicator to notify user when roll over and leave the splitter.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSplitter.OwnerDraw">
            <summary>
            Get or set the indicator to draw by original splitter or selected renderer.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsSplitter.RendererType">
            <summary>
            Get or set theme of the control.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridRowExpandEventArgs">
            <summary>
            Event args for row expand.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridRowExpandEventArgs.#ctor(System.Int32,System.Int32,System.Data.DataRowView,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.AsGridRowExpandEventArgs"/> class.
            </summary>
            <param name="colIndex">Index of the col.</param>
            <param name="rowIndex">Index of the row.</param>
            <param name="rowView">The row view.</param>
            <param name="itemBounds">The item bounds.</param>
            <param name="expanded">Current expand status before change.</param>
        </member>
        <member name="P:Stone.WinUI.AsGridRowExpandEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Stone.WinUI.AsGridRowExpandEventArgs"/> is cancel.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridRowExpandEventArgs.ColIndex">
            <summary>
            Gets or sets the index of the col.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridRowExpandEventArgs.RowIndex">
            <summary>
            Gets or sets the index of the row.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridRowExpandEventArgs.Expanded">
            <summary>
            Gets a value indicating whether this <see cref="T:Stone.WinUI.AsGridRowExpandEventArgs"/> is expanded.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridRowExpandEventArgs.RowView">
            <summary>
            Gets or sets the row view.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridRowExpandEventArgs.ItemBounds">
            <summary>
            Gets or sets the item bounds.
            </summary>
        </member>
        <member name="T:Stone.WinUI.AsGridColumnTop">
            <summary>
            Top column header of grid.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridColumnTop.#ctor">
            <summary>
            Innitialized new instance of column header.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridColumnTop.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Stone.WinUI.AsGridColumnTop.invalidate">
            <summary>
            Invalidate the parent.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridColumnTop.invalidateColumn">
            <summary>
            Invalidate at current column.
            </summary>
        </member>
        <member name="M:Stone.WinUI.AsGridColumnTop.ToString">
            <summary>
            Return string that represent the column header.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.AsGridColumnTop.ShouldSerializeImagePadding">
            <summary>
            Should serialize image padding.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnTop.NameComponent">
            <summary>
            Gets name of the component.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnTop.Grid">
            <summary>
            Get the parent grid that column is belong to.  
            Set property can access for internal, protected only.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnTop.Image">
            <summary>
            Get or set the <see cref="T:System.Drawing.Image"/> to show in header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnTop.ImageTransparentColor">
            <summary>
            Get or set the transparent color on the header's image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnTop.ImagePadding">
            <summary>
            Get or set the <see cref="T:System.Windows.Forms.Padding"/> around image header.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnTop.BackColor">
            <summary>
            Get or set back color of top column.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnTop.Tag">
            <summary>
            Get or set the extra object.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnTop.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnTop.Bounds">
            <summary>
            Get the rectangle of column header.  
            Set Property can access for internal, protected only.
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnTop.ColumnStart">
            <summary>
            Gets or sets the start column(zero base).
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnTop.ColumnStop">
            <summary>
            Gets or sets the end column(zero base).
            </summary>
        </member>
        <member name="P:Stone.WinUI.AsGridColumnTop.ColumnGrowToTop">
            <summary>
            Gets or sets the column grow to top.
            </summary>
        </member>
        <member name="T:Stone.WinUI.Design.AsMirrorDesigner">
            <summary>
            Designer for <see cref="T:Stone.WinUI.AsMirror"/>.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsMirrorDesigner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsMirrorDesigner"/> class.
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsMirrorDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The <see cref="T:System.ComponentModel.IComponent"/> to associate with the designer.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsMirrorDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            Allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor"/>.
            </summary>
            <param name="properties">The properties for the class of the component.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsMirrorDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.
            </summary>
            <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> the designer can use to draw on the control.</param>
        </member>
        <member name="P:Stone.WinUI.Design.AsMirrorDesigner.SelectionRules">
            <summary>
            Gets the selection rules that indicate the movement capabilities of a component.
            </summary>
            <value></value>
            <returns>
            A bitwise combination of <see cref="T:System.Windows.Forms.Design.SelectionRules"/> values.
            </returns>
        </member>
        <member name="P:Stone.WinUI.Design.AsMirrorDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value></value>
            <returns>
            The design-time action lists supported by the component associated with the designer.
            </returns>
        </member>
        <member name="T:Stone.WinUI.Design.AsMirrorActionList">
            <summary>
            Action list for <see cref="T:Stone.WinUI.AsMirror"/>
            </summary>
        </member>
        <member name="M:Stone.WinUI.Design.AsMirrorActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Stone.WinUI.Design.AsMirrorActionList"/> class.
            </summary>
            <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList"/>.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsMirrorActionList.SetProperty(System.String,System.Object)">
            <summary>
            Sets the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Stone.WinUI.Design.AsMirrorActionList.GetProperty``1(System.String)">
            <summary>
            Gets the property.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:Stone.WinUI.Design.AsMirrorActionList.GetSortedActionItems">
            <summary>
            Get Sorted Action Items.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Stone.WinUI.Design.AsMirrorActionList.Image">
            <summary>
            Gets or sets the image to show in this mirror. Priority is SelectedControl, Image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsMirrorActionList.AutoSizeMirror">
            <summary>
            Gets or Sets the size of control is dependency with reflection level.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsMirrorActionList.MirrorDirection">
            <summary>
            Gets or sets the mirror direction.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsMirrorActionList.SelectedControl">
            <summary>
            Gets or sets the control to draw mirror. Priority is SelectedControl, Image.
            </summary>
        </member>
        <member name="P:Stone.WinUI.Design.AsMirrorActionList.ImageTransparentColor">
            <summary>
            Get or set the transparent color on the image.
            </summary>
        </member>
    </members>
</doc>
